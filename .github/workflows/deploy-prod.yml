name: Deploy to production (docs.edg.io)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/[^[:alnum:].-]/-/g')" >> $GITHUB_ENV

      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v3

      - name: Check commit message for skip-deploy
        id: check_commit_message
        run: |
          COMMIT_MSG=$(git log --format=%B -n 1 ${{ github.sha }})
          echo "skip_deploy=$(echo $COMMIT_MSG | grep -iq 'skip-deploy' && echo true || echo false)" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Setup Node
        uses: actions/setup-node@v3
        if: steps.check_commit_message.outputs.skip_deploy != 'true'
        with:
          node-version: 18

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        if: steps.check_commit_message.outputs.skip_deploy != 'true'
        with:
          ruby-version: 2.7

      - name: Ruby dependencies
        if: steps.check_commit_message.outputs.skip_deploy != 'true'
        run: |
          gem install pry json

      - name: Cache node modules
        if: steps.check_commit_message.outputs.skip_deploy != 'true'
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        if: steps.check_commit_message.outputs.skip_deploy != 'true'
        run: yarn --frozen-lockfile

      - name: Copy API Spec
        id: copy_api_spec
        env:
          GITLAB_ACCESS_TOKEN: ${{ secrets.GITLAB_ACCESS_TOKEN }}
        run: |
          git clone https://oauth2:$GITLAB_ACCESS_TOKEN@gitlab.com/limelight-networks/cdn-analytics/core/server/eq-metrics-public-api.git
          rsync -av "eq-metrics-public-api/src/api/public-docs/components/" "rest_api/openapi/components"
          rsync -av "eq-metrics-public-api/src/api/public-docs/paths/" "rest_api/openapi/paths"
        continue-on-error: true

      - name: Check Copy API Spec Status
        if: always()
        run: |
          if [ ${{ steps.copy_api_spec.outcome }} == "failure" ]; then
            echo "COPY_API_SPEC_FAILED=true" >> $GITHUB_ENV
          else
            echo "COPY_API_SPEC_FAILED=false" >> $GITHUB_ENV
          fi

      - name: Deploy to docs.edg.io (prod)
        if: steps.check_commit_message.outputs.skip_deploy != 'true'
        run: yarn edgio:deploy --branch=$BRANCH_NAME --token=${{ secrets.edgio_prod_deploy_token }} --environment=production
        env:
          GH_API_TOKEN: ${{ secrets.GH_API_TOKEN }}

      - name: Final Check for Failures
        if: always()
        run: |
          if [ "$COPY_API_SPEC_FAILED" == "true" ]; then
            echo "One or more steps failed."
            exit 1
          fi
