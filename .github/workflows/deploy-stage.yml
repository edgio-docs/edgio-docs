name: Deploy to stage
on:
  push:
    branches:
      - '**'
      - '!main'
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/[^[:alnum:].-]/-/g')" >> $GITHUB_ENV
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: yarn --frozen-lockfile
      - name: Deploy to docs.edg.io (stage)
        id: deploy
        run: |
          DEPLOY=$(yarn edgio:deploy --branch=$BRANCH_NAME --token=${{secrets.layer0_prod_deploy_token}} --environment=default 2>&1) || true
          echo "$DEPLOY"

          # Get the build link from the output of the command
          echo "$DEPLOY" |
            sed -n 's/.*\(https:\/\/\(app\.layer0\.co\|edgio\.app\)\).*/\1/p' |
            {
              read buildlink || buildlink=""
              if [[ -n $buildlink ]]; then
                echo "buildlink=$buildlink" >> $GITHUB_OUTPUT
              else
                echo "buildlink=" >> $GITHUB_OUTPUT
              fi
            }

          # Get the permalink link from the output of the command
          echo "$DEPLOY" |
            sed -n 's/.*\(https.*-perma\.link\).*/\1/p' |
            {
              read permalink || permalink=""
              if [[ -n $permalink ]]; then
                echo "permalink=$permalink" >> $GITHUB_OUTPUT
              else
                echo "permalink=" >> $GITHUB_OUTPUT
              fi
            }
            
          # Get the edge link from the output of the command
          echo "$DEPLOY" |
            sed -n 's/.*\(https.*\(-limelight\|\.edgio\)\.link\).*/\1/p' |
            {
              read edge || edge=""
              if [[ -n $edge ]]; then
                echo "edge=$edge" >> $GITHUB_OUTPUT
              else
                echo "edge=" >> $GITHUB_OUTPUT
              fi
            }
        env:
          GH_API_TOKEN: ${{ secrets.GH_API_TOKEN }}
      - uses: jwalton/gh-find-current-pr@v1
        id: finder
      - name: Publish Preview Link
        uses: marocchino/sticky-pull-request-comment@v2.2.0
        with:
          number: ${{ steps.finder.outputs.pr }}
          header: preview
          message: |
            Build: ${{ steps.deploy.outputs.buildlink }}
            Permalink: ${{ steps.deploy.outputs.permalink }}
            Edge: ${{ steps.deploy.outputs.edge }}
      - name: Validate Guide Example Links
        shell: bash
        run: node ./scripts/validateExampleLinks.js
