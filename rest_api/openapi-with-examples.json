{"openapi":"3.0.1","info":{"title":"Edgio REST API","version":"0.0.1","x-logo":{"url":"https://docs.edg.io/_next/static/media/edgio-dark.ea0d686f.webp","backgroundColor":"#FFFFFF","altText":"Logo"},"description":"Our REST-compliant web services facilitate the integration of our services into your workflow(s), applications, or interfaces.\n\n## Introduction\n\nKey information about our REST API services:\n\n-   **Protocol:** HTTPS\n    \n    Communication (i.e., request-response) with our web services is only permitted through HTTPS. This ensures the privacy and integrity of your data.\n\n-   **Authentication/Authorization:** `Authorization` Header\n    \n    Authenticate and authorize your requests by generating a token and then passing it through the `Authorization` header:\n       \n    ```\n    Authorization: Bearer <OAUTH 2.0 TOKEN>\n    ```\n    \n    [Get started.](#section/Quick-Start)\n\n-   **Request-Response (Accept and Content-Type):** JSON\n    \n    We expect the request body to use JavaScript Object Notation (JSON) format. Inform our web servers that the expected format for the request-response will be JSON through the `Accept` and `Content-Type` request headers.\n    \n-   **Programming Language:** Agnostic\n    \n    Our REST API services are designed to be programming language-agnostic. Feel free to use your preferred programming language (e.g., JavaScript, Python, C#, etc.).\n\n-   **Services:** Our REST API consists of the following services:\n\n    | Service      | Functionality                                                                                                               |\n    | ------------ | --------------------------------------------------------------------------------------------------------------------------- |\n    | cache        | Purge cached content and find out purge status.                                                                             |\n    | config       | Deploy CDN configurations, retrieve deployment information and log data, and manage environment variables.                  |\n    | accounts     | Retrieve and manage organizations, properties, and environments.                                                            |\n    | waf          | Retrieve and manage the following configurations: security apps, access rules, rate rules, custom rules, and managed rules. |\n    | bot-security | Retrieve and manage bot manager configurations.                                                                             |\n    | api-security | Retrieve and manage API security configurations.                                                                            |\n\n## Quick Start\n\nGet started with our latest APIs by performing the following steps:\n\n1. <a href=\"https://docs.edg.io/guides/develop/rest_api/authentication#administering-api-clients\" target=\"_blank\">Create an API client</a> for either your private space or the desired organization. Grant the set of scope(s) required by the endpoint(s) with which it will interact. Administer API clients from the <a href=\"https://edgio.app\" target=\"_blank\">Edgio Console's</a> **API Clients** page. \n2. Use this client's ID, secret key, and scopes to [generate a temporary access token](#section/Access-Tokens).\n3. Authorize your API requests by passing the temporary access token generated in the previous step through the `Authorization` request header.\n\n```\ncurl --request GET \\\n     --url https://edgioapis.com/waf/v0.9/12345678-1234-1234-1234-1234567890ab/scopes \\\n     --header 'Authorization: Bearer  A1bcbGciImtpZCI6Ij13N1VGQ01z...17cRRKYQ'\n```\n\n## Scopes\n\nA scope authorizes an API client to perform specific actions (e.g., create and retrieve configurations). One or more scope(s) must also be defined when requesting an access token. You may only specify a scope that has been explicitly granted or inherited from a broader scope. Common scopes are listed below.\n\n| Scope            | Description                                                                                                                                  |\n| ---------------- | -------------------------------------------------------------------------------------------------------------------------------------------- |\n| app.cache        | Authorizes full access for purging cached content and retrieve purge status information.                                                     |\n| app.config       | Authorizes full access for deploying CDN configurations, retrieving deployment information and log data, and managing environment variables. |\n| app.accounts     | Authorizes full access to manage organizations, properties, and environments.                                                                |\n| app.waf          | Authorizes full access to security apps, access rules, rate rules, custom rules, and managed rules.                                          |\n| app.bot_security | Authorizes full access to Bot Manager.                                                                                                       |\n| app.api_security | Authorizes full access to API Security.                                                                                                      |\n\n## Access Tokens \n\nEach request to a REST API service must be authorized by passing an access token to the `Authorization` request header. Access tokens provide temporary authorization (e.g., 1 minute) to our REST API service. Once an access token expires, it may no longer be used to authorize requests. Attempting to authorize a request with an expired token will result in a `401 Unauthenticated Access` response.\n\nRequesting an access token requires:\n\n-   Submitting a `POST` request to the following URL:\n\n    `https://id.edgio.app/connect/token`\n\n-   A `Content-Type` header set to `application/x-www-form-urlencoded`.\n-   A request body set to:\n\n    ```\n    client_id=<CLIENT ID>&client_secret=<SECRET>&grant_type=client_credentials&scope=<SCOPES>\n    ```\n\n    -   `<CLIENT ID>`**:** Represents the system-defined ID assigned to your REST API client.\n    -   `<SECRET>`**:** Represents the secret assigned to your REST API client.\n    -   `<SCOPES>`**:** Replace this term with one or more scopes. Use the plus symbol (+) to delimit each scope. \n\n**Sample access token request:**\n\n``` curl\ncurl --request POST \\\n  --url https://id.edgio.app/connect/token \\\n  --header 'content-type: application/x-www-form-urlencoded' \\\n  --data 'client_id=J23d...B2Cd&client_secret=Fdad...DF3v&grant_type=client_credentials&scope=app.waf'\n```\n\n**Sample response:**\n\n```\n{\n    \"access_token\": \"A1bcbGciImtpZCI6Ij13N1VGQ01z...17cRRKYQ\",\n    \"expires_in\": 300,\n    \"token_type\": \"Bearer\",\n    \"scope\": \"app.waf\"\n}\n```\n\n### Authorizing Requests\n\nPass an access token through the `Authorization` header when requesting the desired API operation.\n\n**Sample API request:**\n\n```\ncurl --request GET \\\n     --url https://edgioapis.com/waf/v0.9/12345678-1234-1234-1234-1234567890ab/scopes \\\n     --header 'Authorization: Bearer  A1bcbGciImtpZCI6Ij13N1VGQ01z...17cRRKYQ'\n```\n\n## HTTP Methods\n\nHTTP method is a critical component of a request to our REST API service as it determines the type of action being requested.\n\n-   **DELETE:** Deletes a resource (e.g., custom rule or managed rule configuration).\n-   **GET:** Retrieves all or a specific resource.\n-   **PATCH:** Partially updates a resource (e.g., environment).\n-   **POST:** Creates a resource (e.g., custom rule or managed rule configuration).\n-   **PUT:** Updates a resource (e.g., custom rule or managed rule configuration).\n\nOur REST API service may return a `405 Method Not Allowed` response for requests submitted with an unsupported HTTP method.\n  \n## Request URL\n\nThe base URL for our REST API follows this basic pattern:\n\n`https://edgioapis.com/<SERVICE>/<VERSION>/`\n\n-   `<SERVICE>`**:** Identifies the REST API web service (e.g., cache, waf, and bot-security) designed to manage requests for a specific set of resources.\n-   `<VERSION>`**:** Identifies the version of the REST API service that will be called.\n\n**Sample Request URL:** \n\n```\nhttps://edgioapis.com/cache/v0.1/purge-requests\n```\n\n## Request Headers\n\nRequest headers provide information about your request to a REST API service. This information allows our server to authenticate your request and provides information that allows it to receive and translate the request body.\n\n**Key information:**\n-   The use of a Byte Order Mark (BOM) in a request to the REST API is not supported. Some user agents are configured to automatically include a BOM. Please either configure the user agent to exclude the BOM or use a different user agent.\n-   Request header values are case-insensitive.\n\n| Request Header | Description                                                                                                                                                                                                         |\n| -------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Authorization  | Authorize requests through the `Authorization` request header. <a href=\"https://docs.edg.io/guides/develop/rest_api/authorization#authorizing-requests\" target=\"_blank\">Learn more about authorization.</a>                                                       |\n| Accept         | This header should indicate the format in which the response will be returned. If you pass this header, set it to: `application/json`.                                                                |\n| Content-Type   | This header should indicate the format of the request body. If you pass this header, set it to: `application/json`. <br />You may omit this header when an endpoint does not have request properties. |\n| Host           | This header, which is set by the user agent, indicates the host name corresponding to the requested endpoint (i.e., edgioapis.com or id.edgio.app).                                                                               |\n| Content-Length | This header, which is set by the user agent, indicates the number of bytes contained in the request body.                                                                                                           |\n\n## Request Body\n\n`POST`, `PUT`, and `PATCH` requests typically require request body properties that describe the action that will take place. These request body properties are case-sensitive.\n\n## Response Headers\n\nResponse headers provide information about the response to your request to the REST API service. A brief description is provided for the response headers that are returned by most endpoints. Standard HTTP response headers are typically returned along with these common response headers.\n\n| Response Header | Description                                                                          |\n| --------------- | ------------------------------------------------------------------------------------ |\n| Cache-Control   | Indicates the cache-control policy for the response body.                            |\n| Content-Length  | Indicates the number of bytes in the response body.                                  |\n| Content-Type    | Indicates the format of the response body (e.g., `application/json; charset=utf-8`). |\n| I_am            | This header is reserved for internal use.                                            |\n| Date            | Identifies the date and time (UTC) at which your request was processed.              |\n\nIn addition to the above headers, the response may also include the following headers:\n\n`x-amz-apigw-id | x-amzn-Remapped-Date | x-amzn-Remapped-Server | x-amzn-RequestId | X-AspNet-Version | X-Location`\n\nThese headers are reserved for future use."},"tags":[{"name":"tls-certs","x-displayName":"TLS Certificates","description":"Automate TLS certificate management."},{"name":"deployments","x-displayName":"Deployment Info","description":"Retrieve information and log data for a previous deployment."},{"name":"configs","x-displayName":"CDN Configuration","description":"Deploy or retrieve a CDN configuration."},{"name":"purge requests","x-displayName":"Purge","description":"Purge cached content and retrieve information about previously submitted purge requests."},{"name":"environments","x-displayName":"Environments","description":"Automate environment management."},{"name":"properties","x-displayName":"Properties","description":"Automate property management."},{"name":"organizations","x-displayName":"Organizations","description":"Automate organization management."},{"name":"Security Applications (Scopes)","x-displayName":"Security Apps","description":"\nA Security App:\n\n-   Identifies the set of traffic to which it applies by hostname, a URL path, or both.\n\n-   Defines how threats will be detected through access rules, API security ruleset, rate rules, bot manager configuration, custom ruleset, and managed rules.\n\n-   Audit new access rules, API Security rules, custom rules, and managed rules.\n\n-   Defines the production and audit enforcement action that will be applied to the requests identified as threats by access rules, API security ruleset, rate rules, custom ruleset, and managed rules.\n\n<a href=\"https://docs.edg.io/guides/security/security_applications\" target=\"_blank\">Learn more about Security Apps.</a>\n"},{"name":"Access Control List (ACL)","x-displayName":"Access Rules","description":"\nAn access rule identifies legitimate traffic and threats through access controls.\n\n<a href=\"https://docs.edg.io/guides/security/access_rules\" target=\"_blank\">Learn more about access rules.</a>\n"},{"name":"Custom Rules","x-displayName":"Custom Rules","description":"\nA custom rule tailors how Edgio Security identifies a threat.\n\n<a href=\"https://docs.edg.io/guides/security/custom_rules\" target=\"_blank\">Learn more about custom rules.</a>\n"},{"name":"Rate Rules (Limits)","x-displayName":"Rate Rules","description":"\nA rate rule restricts the flow of site traffic.\n\n<a href=\"https://docs.edg.io/guides/security/rate_rules\" target=\"_blank\">Learn more about rate rules.</a>\n"},{"name":"Managed Rules (Profiles)","x-displayName":"Managed Rules (Profiles)","description":"\nA managed rule identifies threats through predefined rules and prevents false positives.\n\n<a href=\"https://docs.edg.io/guides/security/managed_rules\" target=\"_blank\">Learn more about managed rules.</a>\n"},{"name":"Edgio Rulesets","x-displayName":"Edgio Rulesets","description":"\nAn Edgio ruleset contains a set of managed security policies that identifies threats and provides generic protection against a variety of unknown vulnerabilities. Edgio rulesets are versioned. A new version is released whenever an Edgio ruleset is updated.\n"},{"name":"Bot Rules","x-displayName":"Bot Ruleset","description":"\nA bot ruleset contains one or more rule(s) for determining how bots will be identified. \n      \n<a href=\"https://docs.edg.io/guides/security/bot_rules#bot-manager-configuration\" target=\"_blank\">Learn more about bot rulesets.</a>\n"},{"name":"Bot Managers","x-displayName":"Bot Manager Configuration","description":"\nA bot manager configuration:\n\n  -   Identifies a bot ruleset.\n  \n  -   The enforcement action that will be applied to traffic identified as a bot.\n  \n  -   Determines whether known bots will be automatically detected and the enforcement action that will be applied to that traffic.\n  \n  -   Traffic that will be exempt from bot detection.\n\n<a href=\"https://docs.edg.io/guides/security/bot_rules\" target=\"_blank\">Learn more about bot manager.</a>\n"},{"name":"Known Bots","x-displayName":"Known Bots","description":"Lists all known bots."},{"name":"API Gateways","x-displayName":"API Security Ruleset","description":"\nAn API Security ruleset contains one or more API Security rule(s). Each of these rules identifies an API schema and the conditions under which it will be enforced.\n\nBy default, Edgio validates all `POST`, `PUT`, and `PATCH` requests that satisfy your security app’s hostname and URL path requirements. If your website uses those HTTP methods for non-API requests, then it is strongly recommended to define one or more URL path(s) within your API Security rule.\n\n<a href=\"https://docs.edg.io/guides/security/api_security#api-security-rule\" target=\"_blank\">Learn more about API Security rules.</a>\n"},{"name":"API Schemas","x-displayName":"API Schemas","description":"\nAn API schema is a JSON schema that describes the structure for a valid API payload.\n\n<a href=\"https://docs.edg.io/guides/security/api_security#json-schema-syntax\" target=\"_blank\">Learn more about supported JSON schema syntax.</a>\n"}],"paths":{"/config/v0.1/tls-certs/{cert_id}":{"servers":[{"url":"https://edgioapis.com"}],"security":[{"oAuthCC":["app.app.config"]}],"get":{"tags":["tls-certs"],"summary":"Read tls cert","description":"Read tls cert","operationId":"getConfigV01TlsCertsCertId","parameters":[{"name":"cert_id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Read tls cert","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Config_V1_Entities_TlsCert"}}}},"400":{"description":"UserError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_UserError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"404":{"description":"RecordNotFound","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"500":{"description":"ServerError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/config/v0.1/tls-certs/%7Bcert_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/config/v0.1/tls-certs/%7Bcert_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/config/v0.1/tls-certs/%7Bcert_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/config/v0.1/tls-certs/%7Bcert_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/config/v0.1/tls-certs":{"servers":[{"url":"https://edgioapis.com"}],"security":[{"oAuthCC":["app.app.config"]}],"get":{"tags":["tls-certs"],"summary":"List tls certs","description":"List historical TLS certificates for an environment","operationId":"getConfigV01TlsCerts","parameters":[{"name":"page","in":"query","description":"Page number starting from 0","schema":{"type":"integer","format":"int32","default":0}},{"name":"page_size","in":"query","description":"Number of results per page. Accepted value from 1-100. Default: 20","schema":{"type":"integer","format":"int32","default":20}},{"name":"environment_id","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"List historical TLS certificates for an environment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Config_V1_Entities_TlsCert_Collection"}}}},"400":{"description":"UserError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_UserError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"404":{"description":"RecordNotFound","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"500":{"description":"ServerError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/config/v0.1/tls-certs',\n  qs: {\n    page: 'SOME_INTEGER_VALUE',\n    page_size: 'SOME_INTEGER_VALUE',\n    environment_id: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/config/v0.1/tls-certs?page=SOME_INTEGER_VALUE&page_size=SOME_INTEGER_VALUE&environment_id=SOME_STRING_VALUE\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url 'https://edgioapis.com/config/v0.1/tls-certs?page=SOME_INTEGER_VALUE&page_size=SOME_INTEGER_VALUE&environment_id=SOME_STRING_VALUE'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/config/v0.1/tls-certs?page=SOME_INTEGER_VALUE&page_size=SOME_INTEGER_VALUE&environment_id=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"post":{"tags":["tls-certs"],"summary":"Create a new tls cert","description":"Upload and activate a new TLS certificate for an environment","operationId":"postConfigV01TlsCerts","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/postConfigV01TlsCerts"}}},"required":true},"responses":{"201":{"description":"Upload and activate a new TLS certificate for an environment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Config_V1_Entities_TlsCert"}}}},"400":{"description":"UserError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_UserError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"404":{"description":"RecordNotFound","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"500":{"description":"ServerError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}}},"x-codegen-request-body-name":"postConfigV01TlsCerts","x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://edgioapis.com/config/v0.1/tls-certs',\n  headers: {'content-type': 'application/json'},\n  body: {\n    environment_id: 'string',\n    primary_cert: 'string',\n    intermediate_cert: 'string',\n    private_key: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"environment_id\": \"string\",\n  \"primary_cert\": \"string\",\n  \"intermediate_cert\": \"string\",\n  \"private_key\": \"string\"\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://edgioapis.com/config/v0.1/tls-certs\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://edgioapis.com/config/v0.1/tls-certs \\\n  --header 'content-type: application/json' \\\n  --data '{\"environment_id\":\"string\",\"primary_cert\":\"string\",\"intermediate_cert\":\"string\",\"private_key\":\"string\"}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"environment_id\\\":\\\"string\\\",\\\"primary_cert\\\":\\\"string\\\",\\\"intermediate_cert\\\":\\\"string\\\",\\\"private_key\\\":\\\"string\\\"}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/config/v0.1/tls-certs\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/config/v0.1/deployments/{deployment_id}/logs":{"servers":[{"url":"https://edgioapis.com"}],"security":[{"oAuthCC":["app.app.config"]}],"get":{"tags":["deployments"],"summary":"Get the logs for a specific deployment","description":"Get the logs for a specific deployment","operationId":"getConfigV01DeploymentsDeploymentIdLogs","parameters":[{"name":"deployment_id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Get the logs for a specific deployment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Config_V1_Entities_Deployment_Logs"}}}},"400":{"description":"UserError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_UserError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"404":{"description":"RecordNotFound","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"500":{"description":"ServerError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/config/v0.1/deployments/%7Bdeployment_id%7D/logs'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/config/v0.1/deployments/%7Bdeployment_id%7D/logs\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/config/v0.1/deployments/%7Bdeployment_id%7D/logs"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/config/v0.1/deployments/%7Bdeployment_id%7D/logs\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/config/v0.1/deployments/{deployment_id}":{"servers":[{"url":"https://edgioapis.com"}],"security":[{"oAuthCC":["app.app.config"]}],"get":{"tags":["deployments"],"summary":"Read deployment","description":"Read deployment","operationId":"getConfigV01DeploymentsDeploymentId","parameters":[{"name":"deployment_id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Read deployment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Config_V1_Entities_Deployment"}}}},"400":{"description":"UserError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_UserError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"404":{"description":"RecordNotFound","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"500":{"description":"ServerError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/config/v0.1/deployments/%7Bdeployment_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/config/v0.1/deployments/%7Bdeployment_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/config/v0.1/deployments/%7Bdeployment_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/config/v0.1/deployments/%7Bdeployment_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/config/v0.1/configs/{config_id}":{"servers":[{"url":"https://edgioapis.com"}],"security":[{"oAuthCC":["app.app.config"]}],"get":{"tags":["configs"],"summary":"Retrieve an Edge Configuration","description":"Get a specific Edge Configuration","operationId":"getConfigV01ConfigsConfigId","parameters":[{"name":"config_id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Get a specific Edge Configuration","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Config_V1_Entities_Config"}}}},"400":{"description":"UserError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_UserError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"404":{"description":"RecordNotFound","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"500":{"description":"ServerError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/config/v0.1/configs/%7Bconfig_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/config/v0.1/configs/%7Bconfig_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/config/v0.1/configs/%7Bconfig_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/config/v0.1/configs/%7Bconfig_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/config/v0.1/configs":{"servers":[{"url":"https://edgioapis.com"}],"security":[{"oAuthCC":["app.app.config"]}],"post":{"tags":["configs"],"summary":"Deploy Edge Configuration on environment","description":"Replace and deploy a complete edge configuration for the given environment","operationId":"postConfigV01Configs","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/postConfigV01Configs"}}},"required":true},"responses":{"202":{"description":"Replace and deploy a complete edge configuration for the given environment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Config_V1_Entities_Config"}}}},"400":{"description":"UserError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_UserError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"404":{"description":"RecordNotFound","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"500":{"description":"ServerError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}}},"x-codegen-request-body-name":"postConfigV01Configs","x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://edgioapis.com/config/v0.1/configs',\n  headers: {'content-type': 'application/json'},\n  body: {\n    environment_id: 'string',\n    origins: [\n      {\n        name: 'Edgio',\n        hosts: [{location: [{hostname: 'https://test-origin.edgio.net'}]}]\n      }\n    ],\n    hostnames: [{hostname: 'test-origin.edgio.net'}],\n    rules: [\n      {\n        if: [{'==': [{request: 'path'}, '/api/:path']}, {caching: {bypass_cache: true}}]\n      }\n    ],\n    experiments: [{}]\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"environment_id\": \"string\",\n  \"origins\": [\n    {\n      \"name\": \"Edgio\",\n      \"hosts\": [\n        {\n          \"location\": [\n            {\n              \"hostname\": \"https://test-origin.edgio.net\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"hostnames\": [\n    {\n      \"hostname\": \"test-origin.edgio.net\"\n    }\n  ],\n  \"rules\": [\n    {\n      \"if\": [\n        {\n          \"==\": [\n            {\n              \"request\": \"path\"\n            },\n            \"/api/:path\"\n          ]\n        },\n        {\n          \"caching\": {\n            \"bypass_cache\": true\n          }\n        }\n      ]\n    }\n  ],\n  \"experiments\": [\n    {}\n  ]\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://edgioapis.com/config/v0.1/configs\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://edgioapis.com/config/v0.1/configs \\\n  --header 'content-type: application/json' \\\n  --data '{\"environment_id\":\"string\",\"origins\":[{\"name\":\"Edgio\",\"hosts\":[{\"location\":[{\"hostname\":\"https://test-origin.edgio.net\"}]}]}],\"hostnames\":[{\"hostname\":\"test-origin.edgio.net\"}],\"rules\":[{\"if\":[{\"==\":[{\"request\":\"path\"},\"/api/:path\"]},{\"caching\":{\"bypass_cache\":true}}]}],\"experiments\":[{}]}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"environment_id\\\":\\\"string\\\",\\\"origins\\\":[{\\\"name\\\":\\\"Edgio\\\",\\\"hosts\\\":[{\\\"location\\\":[{\\\"hostname\\\":\\\"https://test-origin.edgio.net\\\"}]}]}],\\\"hostnames\\\":[{\\\"hostname\\\":\\\"test-origin.edgio.net\\\"}],\\\"rules\\\":[{\\\"if\\\":[{\\\"==\\\":[{\\\"request\\\":\\\"path\\\"},\\\"/api/:path\\\"]},{\\\"caching\\\":{\\\"bypass_cache\\\":true}}]}],\\\"experiments\\\":[{}]}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/config/v0.1/configs\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/cache/v0.1/purge-requests/{request_id}":{"servers":[{"url":"https://edgioapis.com"}],"security":[{"oAuthCC":["app.app.cache"]}],"get":{"tags":["purge requests"],"summary":"Get Status of Cache Purge","description":"Request status of cache purge","operationId":"getCacheV01PurgeRequestsRequestId","parameters":[{"name":"request_id","in":"path","description":"The ID identifying the original purge request.","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Request status of cache purge","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Cache_V1_Entities_PurgeRequest"}}}},"400":{"description":"UserError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_UserError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"404":{"description":"RecordNotFound","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"500":{"description":"ServerError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/cache/v0.1/purge-requests/%7Brequest_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/cache/v0.1/purge-requests/%7Brequest_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/cache/v0.1/purge-requests/%7Brequest_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/cache/v0.1/purge-requests/%7Brequest_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/cache/v0.1/purge-requests":{"servers":[{"url":"https://edgioapis.com"}],"security":[{"oAuthCC":["app.app.config"]}],"post":{"tags":["purge requests"],"summary":"Purge Cache of Environment","description":"Request cache purge of environment","operationId":"postCacheV01PurgeRequests","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/postCacheV01PurgeRequests"}}},"required":true},"responses":{"202":{"description":"Request cache purge of environment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Cache_V1_Entities_PurgeRequest"}}}},"400":{"description":"UserError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_UserError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"404":{"description":"RecordNotFound","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"429":{"description":"RateLimitReached","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"500":{"description":"ServerError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}}},"x-codegen-request-body-name":"postCacheV01PurgeRequests","x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://edgioapis.com/cache/v0.1/purge-requests',\n  headers: {'content-type': 'application/json'},\n  body: {environment_id: 'string', purge_type: 'all_entries', values: ['string']},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"environment_id\": \"string\",\n  \"purge_type\": \"all_entries\",\n  \"values\": [\n    \"string\"\n  ]\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://edgioapis.com/cache/v0.1/purge-requests\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://edgioapis.com/cache/v0.1/purge-requests \\\n  --header 'content-type: application/json' \\\n  --data '{\"environment_id\":\"string\",\"purge_type\":\"all_entries\",\"values\":[\"string\"]}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"environment_id\\\":\\\"string\\\",\\\"purge_type\\\":\\\"all_entries\\\",\\\"values\\\":[\\\"string\\\"]}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/cache/v0.1/purge-requests\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/accounts/v0.1/environments/{environment_id}":{"servers":[{"url":"https://edgioapis.com"}],"security":[{"oAuthCC":["app.app.accounts"]}],"get":{"tags":["environments"],"summary":"Read environment","description":"Read environment","operationId":"getAccountsV01EnvironmentsEnvironmentId","parameters":[{"name":"environment_id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Read environment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Accounts_V1_Entities_Environment"}}}},"400":{"description":"UserError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_UserError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"404":{"description":"RecordNotFound","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"500":{"description":"ServerError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/accounts/v0.1/environments/%7Benvironment_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/accounts/v0.1/environments/%7Benvironment_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/accounts/v0.1/environments/%7Benvironment_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/accounts/v0.1/environments/%7Benvironment_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"delete":{"tags":["environments"],"summary":"Delete environment","description":"Delete environment","operationId":"deleteAccountsV01EnvironmentsEnvironmentId","parameters":[{"name":"environment_id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"Delete environment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Accounts_V1_Entities_Environment"}}}},"400":{"description":"UserError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_UserError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"404":{"description":"RecordNotFound","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"500":{"description":"ServerError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://edgioapis.com/accounts/v0.1/environments/%7Benvironment_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://edgioapis.com/accounts/v0.1/environments/%7Benvironment_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request DELETE \\\n  --url https://edgioapis.com/accounts/v0.1/environments/%7Benvironment_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"DELETE\", \"/accounts/v0.1/environments/%7Benvironment_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"patch":{"tags":["environments"],"summary":"Update environment","description":"Update environment","operationId":"patchAccountsV01EnvironmentsEnvironmentId","parameters":[{"name":"environment_id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/patchAccountsV01EnvironmentsEnvironmentId"}}},"required":true},"responses":{"200":{"description":"Update environment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Accounts_V1_Entities_Environment"}}}},"400":{"description":"UserError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_UserError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"404":{"description":"RecordNotFound","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"500":{"description":"ServerError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}}},"x-codegen-request-body-name":"patchAccountsV01EnvironmentsEnvironmentId","x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'https://edgioapis.com/accounts/v0.1/environments/%7Benvironment_id%7D',\n  headers: {'content-type': 'application/json'},\n  body: {name: 'string', can_members_deploy: true, http_request_logging: true},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"name\": \"string\",\n  \"can_members_deploy\": true,\n  \"http_request_logging\": true\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://edgioapis.com/accounts/v0.1/environments/%7Benvironment_id%7D\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request PATCH \\\n  --url https://edgioapis.com/accounts/v0.1/environments/%7Benvironment_id%7D \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"string\",\"can_members_deploy\":true,\"http_request_logging\":true}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"name\\\":\\\"string\\\",\\\"can_members_deploy\\\":true,\\\"http_request_logging\\\":true}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"PATCH\", \"/accounts/v0.1/environments/%7Benvironment_id%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/accounts/v0.1/environments":{"servers":[{"url":"https://edgioapis.com"}],"security":[{"oAuthCC":["app.app.accounts"]}],"get":{"tags":["environments"],"summary":"List environments","description":"List environments","operationId":"getAccountsV01Environments","parameters":[{"name":"page","in":"query","description":"Page number starting from 0","schema":{"type":"integer","format":"int32","default":0}},{"name":"page_size","in":"query","description":"Number of results per page. Accepted value from 1-100. Default: 20","schema":{"type":"integer","format":"int32","default":20}},{"name":"property_id","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"List environments","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Accounts_V1_Entities_Environment_Collection"}}}},"400":{"description":"UserError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_UserError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"404":{"description":"RecordNotFound","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"500":{"description":"ServerError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/accounts/v0.1/environments',\n  qs: {\n    page: 'SOME_INTEGER_VALUE',\n    page_size: 'SOME_INTEGER_VALUE',\n    property_id: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/accounts/v0.1/environments?page=SOME_INTEGER_VALUE&page_size=SOME_INTEGER_VALUE&property_id=SOME_STRING_VALUE\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url 'https://edgioapis.com/accounts/v0.1/environments?page=SOME_INTEGER_VALUE&page_size=SOME_INTEGER_VALUE&property_id=SOME_STRING_VALUE'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/accounts/v0.1/environments?page=SOME_INTEGER_VALUE&page_size=SOME_INTEGER_VALUE&property_id=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"post":{"tags":["environments"],"summary":"Create a new environment","description":"Create a new environment","operationId":"postAccountsV01Environments","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/postAccountsV01Environments"}}},"required":true},"responses":{"201":{"description":"Create a new environment","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Accounts_V1_Entities_Environment"}}}},"400":{"description":"UserError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_UserError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"404":{"description":"RecordNotFound","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"500":{"description":"ServerError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}}},"x-codegen-request-body-name":"postAccountsV01Environments","x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://edgioapis.com/accounts/v0.1/environments',\n  headers: {'content-type': 'application/json'},\n  body: {\n    property_id: 'string',\n    name: 'string',\n    can_members_deploy: true,\n    http_request_logging: true\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"property_id\": \"string\",\n  \"name\": \"string\",\n  \"can_members_deploy\": true,\n  \"http_request_logging\": true\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://edgioapis.com/accounts/v0.1/environments\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://edgioapis.com/accounts/v0.1/environments \\\n  --header 'content-type: application/json' \\\n  --data '{\"property_id\":\"string\",\"name\":\"string\",\"can_members_deploy\":true,\"http_request_logging\":true}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"property_id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"can_members_deploy\\\":true,\\\"http_request_logging\\\":true}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/accounts/v0.1/environments\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/accounts/v0.1/properties/{property_id}":{"servers":[{"url":"https://edgioapis.com"}],"security":[{"oAuthCC":["app.app.accounts"]}],"get":{"tags":["properties"],"summary":"Read property","description":"Read property","operationId":"getAccountsV01PropertiesPropertyId","parameters":[{"name":"property_id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Read property","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Accounts_V1_Entities_Property"}}}},"400":{"description":"UserError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_UserError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"404":{"description":"RecordNotFound","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"500":{"description":"ServerError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/accounts/v0.1/properties/%7Bproperty_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/accounts/v0.1/properties/%7Bproperty_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/accounts/v0.1/properties/%7Bproperty_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/accounts/v0.1/properties/%7Bproperty_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"delete":{"tags":["properties"],"summary":"Delete property","description":"Delete property","operationId":"deleteAccountsV01PropertiesPropertyId","parameters":[{"name":"property_id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"Delete property","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Accounts_V1_Entities_Property"}}}},"400":{"description":"UserError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_UserError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"404":{"description":"RecordNotFound","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"500":{"description":"ServerError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://edgioapis.com/accounts/v0.1/properties/%7Bproperty_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://edgioapis.com/accounts/v0.1/properties/%7Bproperty_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request DELETE \\\n  --url https://edgioapis.com/accounts/v0.1/properties/%7Bproperty_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"DELETE\", \"/accounts/v0.1/properties/%7Bproperty_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"patch":{"tags":["properties"],"summary":"Update property","description":"Update property","operationId":"patchAccountsV01PropertiesPropertyId","parameters":[{"name":"property_id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/patchAccountsV01PropertiesPropertyId"}}},"required":true},"responses":{"200":{"description":"Update property","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Accounts_V1_Entities_Property"}}}},"400":{"description":"UserError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_UserError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"404":{"description":"RecordNotFound","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"500":{"description":"ServerError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}}},"x-codegen-request-body-name":"patchAccountsV01PropertiesPropertyId","x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'https://edgioapis.com/accounts/v0.1/properties/%7Bproperty_id%7D',\n  headers: {'content-type': 'application/json'},\n  body: {slug: 'string'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"slug\": \"string\"\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://edgioapis.com/accounts/v0.1/properties/%7Bproperty_id%7D\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request PATCH \\\n  --url https://edgioapis.com/accounts/v0.1/properties/%7Bproperty_id%7D \\\n  --header 'content-type: application/json' \\\n  --data '{\"slug\":\"string\"}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"slug\\\":\\\"string\\\"}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"PATCH\", \"/accounts/v0.1/properties/%7Bproperty_id%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/accounts/v0.1/properties":{"servers":[{"url":"https://edgioapis.com"}],"security":[{"oAuthCC":["app.app.accounts"]}],"get":{"tags":["properties"],"summary":"List properties","description":"List properties","operationId":"getAccountsV01Properties","parameters":[{"name":"page","in":"query","description":"Page number starting from 0","schema":{"type":"integer","format":"int32","default":0}},{"name":"page_size","in":"query","description":"Number of results per page. Accepted value from 1-100. Default: 20","schema":{"type":"integer","format":"int32","default":20}},{"name":"organization_id","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"List properties","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Accounts_V1_Entities_Property_Collection"}}}},"400":{"description":"UserError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_UserError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"404":{"description":"RecordNotFound","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"500":{"description":"ServerError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/accounts/v0.1/properties',\n  qs: {\n    page: 'SOME_INTEGER_VALUE',\n    page_size: 'SOME_INTEGER_VALUE',\n    organization_id: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/accounts/v0.1/properties?page=SOME_INTEGER_VALUE&page_size=SOME_INTEGER_VALUE&organization_id=SOME_STRING_VALUE\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url 'https://edgioapis.com/accounts/v0.1/properties?page=SOME_INTEGER_VALUE&page_size=SOME_INTEGER_VALUE&organization_id=SOME_STRING_VALUE'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/accounts/v0.1/properties?page=SOME_INTEGER_VALUE&page_size=SOME_INTEGER_VALUE&organization_id=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"post":{"tags":["properties"],"summary":"Create a new property","description":"Create a new property","operationId":"postAccountsV01Properties","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/postAccountsV01Properties"}}},"required":true},"responses":{"201":{"description":"Create a new property","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Accounts_V1_Entities_Property"}}}},"400":{"description":"UserError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_UserError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"404":{"description":"RecordNotFound","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"500":{"description":"ServerError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}}},"x-codegen-request-body-name":"postAccountsV01Properties","x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://edgioapis.com/accounts/v0.1/properties',\n  headers: {'content-type': 'application/json'},\n  body: {slug: 'string', organization_id: 'string'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"slug\": \"string\",\n  \"organization_id\": \"string\"\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://edgioapis.com/accounts/v0.1/properties\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://edgioapis.com/accounts/v0.1/properties \\\n  --header 'content-type: application/json' \\\n  --data '{\"slug\":\"string\",\"organization_id\":\"string\"}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"slug\\\":\\\"string\\\",\\\"organization_id\\\":\\\"string\\\"}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/accounts/v0.1/properties\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/accounts/v0.1/organizations/{organization_id}":{"servers":[{"url":"https://edgioapis.com"}],"security":[{"oAuthCC":["app.app.accounts"]}],"get":{"tags":["organizations"],"summary":"Read organization","description":"Read organization","operationId":"getAccountsV01OrganizationsOrganizationId","parameters":[{"name":"organization_id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Read organization","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Accounts_V1_Entities_Organization"}}}},"400":{"description":"UserError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_UserError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"404":{"description":"RecordNotFound","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"500":{"description":"ServerError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/accounts/v0.1/organizations/%7Borganization_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/accounts/v0.1/organizations/%7Borganization_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/accounts/v0.1/organizations/%7Borganization_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/accounts/v0.1/organizations/%7Borganization_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"delete":{"tags":["organizations"],"summary":"Delete organization","description":"Delete organization","operationId":"deleteAccountsV01OrganizationsOrganizationId","parameters":[{"name":"organization_id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"Delete organization","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Accounts_V1_Entities_Organization"}}}},"400":{"description":"UserError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_UserError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"404":{"description":"RecordNotFound","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"500":{"description":"ServerError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://edgioapis.com/accounts/v0.1/organizations/%7Borganization_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://edgioapis.com/accounts/v0.1/organizations/%7Borganization_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request DELETE \\\n  --url https://edgioapis.com/accounts/v0.1/organizations/%7Borganization_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"DELETE\", \"/accounts/v0.1/organizations/%7Borganization_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"patch":{"tags":["organizations"],"summary":"Update organization","description":"Update organization","operationId":"patchAccountsV01OrganizationsOrganizationId","parameters":[{"name":"organization_id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/patchAccountsV01OrganizationsOrganizationId"}}},"required":true},"responses":{"200":{"description":"Update organization","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Accounts_V1_Entities_Organization"}}}},"400":{"description":"UserError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_UserError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"404":{"description":"RecordNotFound","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"500":{"description":"ServerError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}}},"x-codegen-request-body-name":"patchAccountsV01OrganizationsOrganizationId","x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'https://edgioapis.com/accounts/v0.1/organizations/%7Borganization_id%7D',\n  headers: {'content-type': 'application/json'},\n  body: {name: 'string'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"name\": \"string\"\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PATCH\", \"https://edgioapis.com/accounts/v0.1/organizations/%7Borganization_id%7D\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request PATCH \\\n  --url https://edgioapis.com/accounts/v0.1/organizations/%7Borganization_id%7D \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"string\"}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"name\\\":\\\"string\\\"}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"PATCH\", \"/accounts/v0.1/organizations/%7Borganization_id%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/accounts/v0.1/organizations":{"servers":[{"url":"https://edgioapis.com"}],"security":[{"oAuthCC":["app.app.accounts"]}],"get":{"tags":["organizations"],"summary":"List organizations","description":"List organizations","operationId":"getAccountsV01Organizations","parameters":[{"name":"page","in":"query","description":"Page number starting from 0","schema":{"type":"integer","format":"int32","default":0}},{"name":"page_size","in":"query","description":"Number of results per page. Accepted value from 1-100. Default: 20","schema":{"type":"integer","format":"int32","default":20}}],"responses":{"200":{"description":"List organizations","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Accounts_V1_Entities_Organization_Collection"}}}},"400":{"description":"UserError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_UserError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"404":{"description":"RecordNotFound","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"500":{"description":"ServerError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/accounts/v0.1/organizations',\n  qs: {page: 'SOME_INTEGER_VALUE', page_size: 'SOME_INTEGER_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/accounts/v0.1/organizations?page=SOME_INTEGER_VALUE&page_size=SOME_INTEGER_VALUE\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url 'https://edgioapis.com/accounts/v0.1/organizations?page=SOME_INTEGER_VALUE&page_size=SOME_INTEGER_VALUE'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/accounts/v0.1/organizations?page=SOME_INTEGER_VALUE&page_size=SOME_INTEGER_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"post":{"tags":["organizations"],"summary":"Create a new organization","description":"Create a new organization","operationId":"postAccountsV01Organizations","parameters":[{"name":"partner_id","in":"query","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/postAccountsV01Organizations"}}},"required":true},"responses":{"201":{"description":"Create a new organization","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Accounts_V1_Entities_Organization"}}}},"400":{"description":"UserError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_UserError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"404":{"description":"RecordNotFound","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}},"500":{"description":"ServerError","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BaseApi_Entities_GeneralError"}}}}},"x-codegen-request-body-name":"postAccountsV01Organizations","x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://edgioapis.com/accounts/v0.1/organizations',\n  qs: {partner_id: 'SOME_STRING_VALUE'},\n  headers: {'content-type': 'application/json'},\n  body: {name: 'string'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"name\": \"string\"\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://edgioapis.com/accounts/v0.1/organizations?partner_id=SOME_STRING_VALUE\");\nxhr.setRequestHeader(\"content-type\", \"application/json\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url 'https://edgioapis.com/accounts/v0.1/organizations?partner_id=SOME_STRING_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"string\"}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"name\\\":\\\"string\\\"}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/accounts/v0.1/organizations?partner_id=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/{organization_id}/scopes":{"servers":[{"url":"https://edgioapis.com/waf/v0.9"}],"security":[{"oAuthCC":["app.app.waf"]}],"post":{"operationId":"create-security-applications","tags":["Security Applications (Scopes)"],"summary":"Initialize Security App","description":"Initializes Security App by creating your first Security App configuration. If one or more Security App(s) exist, you may only use the [Manage All Security Apps operation](#tag/Security-Applications-(Scopes)/operation/update-security-applications) to add, update, or delete Security Apps.","parameters":[{"$ref":"#/components/parameters/organization_id"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Scopes"}}},"required":true},"responses":{"200":{"description":"OK. A Security App was created.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseObj"}}}},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/scopes',\n  body: {\n    version: 'string',\n    id: 'string',\n    name: 'string',\n    customer_id: 'string',\n    last_modified_date: 'string',\n    last_modified_by: 'string',\n    scopes: [\n      {\n        id: 'string',\n        name: 'string',\n        recaptcha_action_name: 'string',\n        recaptcha_secret_key: 'string',\n        recaptcha_site_key: 'string',\n        host: {\n          value: 'string',\n          values: ['string'],\n          is_negated: true,\n          is_case_insensitive: true,\n          type: 'GLOB'\n        },\n        path: {\n          value: 'string',\n          values: ['string'],\n          is_negated: true,\n          is_case_insensitive: true,\n          type: 'GLOB'\n        },\n        acl_audit_id: 'string',\n        acl_audit_action: {id: 'string', name: 'string', enf_type: 'ALERT'},\n        acl_prod_id: 'string',\n        acl_prod_action: {\n          id: 'string',\n          name: 'string',\n          url: 'string',\n          status: 0,\n          response_body_base64: 'string',\n          enf_type: 'REDIRECT_302',\n          response_headers: [{property1: 'string', property2: 'string'}]\n        },\n        rules_audit_id: 'string',\n        rules_audit_action: {id: 'string', name: 'string', enf_type: 'ALERT'},\n        rules_prod_id: 'string',\n        rules_prod_action: {\n          id: 'string',\n          name: 'string',\n          url: 'string',\n          status: 0,\n          response_body_base64: 'string',\n          enf_type: 'REDIRECT_302',\n          response_headers: [{property1: 'string', property2: 'string'}]\n        },\n        profile_audit_id: 'string',\n        profile_audit_action: {id: 'string', name: 'string', enf_type: 'ALERT'},\n        profile_prod_id: 'string',\n        profile_prod_action: {\n          id: 'string',\n          name: 'string',\n          url: 'string',\n          status: 0,\n          response_body_base64: 'string',\n          enf_type: 'REDIRECT_302',\n          response_headers: [{property1: 'string', property2: 'string'}]\n        },\n        bot_manager_config_id: 'string',\n        limits: [\n          {\n            id: 'string',\n            action: {\n              id: 'string',\n              name: 'string',\n              duration_sec: 10,\n              url: 'string',\n              status: 0,\n              response_body_base64: 'string',\n              enf_type: 'REDIRECT_302',\n              response_headers: [{property1: 'string', property2: 'string'}]\n            }\n          }\n        ]\n      }\n    ],\n    team_config: true\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"version\": \"string\",\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"customer_id\": \"string\",\n  \"last_modified_date\": \"string\",\n  \"last_modified_by\": \"string\",\n  \"scopes\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"recaptcha_action_name\": \"string\",\n      \"recaptcha_secret_key\": \"string\",\n      \"recaptcha_site_key\": \"string\",\n      \"host\": {\n        \"value\": \"string\",\n        \"values\": [\n          \"string\"\n        ],\n        \"is_negated\": true,\n        \"is_case_insensitive\": true,\n        \"type\": \"GLOB\"\n      },\n      \"path\": {\n        \"value\": \"string\",\n        \"values\": [\n          \"string\"\n        ],\n        \"is_negated\": true,\n        \"is_case_insensitive\": true,\n        \"type\": \"GLOB\"\n      },\n      \"acl_audit_id\": \"string\",\n      \"acl_audit_action\": {\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"enf_type\": \"ALERT\"\n      },\n      \"acl_prod_id\": \"string\",\n      \"acl_prod_action\": {\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"url\": \"string\",\n        \"status\": 0,\n        \"response_body_base64\": \"string\",\n        \"enf_type\": \"REDIRECT_302\",\n        \"response_headers\": [\n          {\n            \"property1\": \"string\",\n            \"property2\": \"string\"\n          }\n        ]\n      },\n      \"rules_audit_id\": \"string\",\n      \"rules_audit_action\": {\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"enf_type\": \"ALERT\"\n      },\n      \"rules_prod_id\": \"string\",\n      \"rules_prod_action\": {\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"url\": \"string\",\n        \"status\": 0,\n        \"response_body_base64\": \"string\",\n        \"enf_type\": \"REDIRECT_302\",\n        \"response_headers\": [\n          {\n            \"property1\": \"string\",\n            \"property2\": \"string\"\n          }\n        ]\n      },\n      \"profile_audit_id\": \"string\",\n      \"profile_audit_action\": {\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"enf_type\": \"ALERT\"\n      },\n      \"profile_prod_id\": \"string\",\n      \"profile_prod_action\": {\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"url\": \"string\",\n        \"status\": 0,\n        \"response_body_base64\": \"string\",\n        \"enf_type\": \"REDIRECT_302\",\n        \"response_headers\": [\n          {\n            \"property1\": \"string\",\n            \"property2\": \"string\"\n          }\n        ]\n      },\n      \"bot_manager_config_id\": \"string\",\n      \"limits\": [\n        {\n          \"id\": \"string\",\n          \"action\": {\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"duration_sec\": 10,\n            \"url\": \"string\",\n            \"status\": 0,\n            \"response_body_base64\": \"string\",\n            \"enf_type\": \"REDIRECT_302\",\n            \"response_headers\": [\n              {\n                \"property1\": \"string\",\n                \"property2\": \"string\"\n              }\n            ]\n          }\n        }\n      ]\n    }\n  ],\n  \"team_config\": true\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/scopes\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/scopes \\\n  --data '{\"version\":\"string\",\"id\":\"string\",\"name\":\"string\",\"customer_id\":\"string\",\"last_modified_date\":\"string\",\"last_modified_by\":\"string\",\"scopes\":[{\"id\":\"string\",\"name\":\"string\",\"recaptcha_action_name\":\"string\",\"recaptcha_secret_key\":\"string\",\"recaptcha_site_key\":\"string\",\"host\":{\"value\":\"string\",\"values\":[\"string\"],\"is_negated\":true,\"is_case_insensitive\":true,\"type\":\"GLOB\"},\"path\":{\"value\":\"string\",\"values\":[\"string\"],\"is_negated\":true,\"is_case_insensitive\":true,\"type\":\"GLOB\"},\"acl_audit_id\":\"string\",\"acl_audit_action\":{\"id\":\"string\",\"name\":\"string\",\"enf_type\":\"ALERT\"},\"acl_prod_id\":\"string\",\"acl_prod_action\":{\"id\":\"string\",\"name\":\"string\",\"url\":\"string\",\"status\":0,\"response_body_base64\":\"string\",\"enf_type\":\"REDIRECT_302\",\"response_headers\":[{\"property1\":\"string\",\"property2\":\"string\"}]},\"rules_audit_id\":\"string\",\"rules_audit_action\":{\"id\":\"string\",\"name\":\"string\",\"enf_type\":\"ALERT\"},\"rules_prod_id\":\"string\",\"rules_prod_action\":{\"id\":\"string\",\"name\":\"string\",\"url\":\"string\",\"status\":0,\"response_body_base64\":\"string\",\"enf_type\":\"REDIRECT_302\",\"response_headers\":[{\"property1\":\"string\",\"property2\":\"string\"}]},\"profile_audit_id\":\"string\",\"profile_audit_action\":{\"id\":\"string\",\"name\":\"string\",\"enf_type\":\"ALERT\"},\"profile_prod_id\":\"string\",\"profile_prod_action\":{\"id\":\"string\",\"name\":\"string\",\"url\":\"string\",\"status\":0,\"response_body_base64\":\"string\",\"enf_type\":\"REDIRECT_302\",\"response_headers\":[{\"property1\":\"string\",\"property2\":\"string\"}]},\"bot_manager_config_id\":\"string\",\"limits\":[{\"id\":\"string\",\"action\":{\"id\":\"string\",\"name\":\"string\",\"duration_sec\":10,\"url\":\"string\",\"status\":0,\"response_body_base64\":\"string\",\"enf_type\":\"REDIRECT_302\",\"response_headers\":[{\"property1\":\"string\",\"property2\":\"string\"}]}}]}],\"team_config\":true}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"version\\\":\\\"string\\\",\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"customer_id\\\":\\\"string\\\",\\\"last_modified_date\\\":\\\"string\\\",\\\"last_modified_by\\\":\\\"string\\\",\\\"scopes\\\":[{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"recaptcha_action_name\\\":\\\"string\\\",\\\"recaptcha_secret_key\\\":\\\"string\\\",\\\"recaptcha_site_key\\\":\\\"string\\\",\\\"host\\\":{\\\"value\\\":\\\"string\\\",\\\"values\\\":[\\\"string\\\"],\\\"is_negated\\\":true,\\\"is_case_insensitive\\\":true,\\\"type\\\":\\\"GLOB\\\"},\\\"path\\\":{\\\"value\\\":\\\"string\\\",\\\"values\\\":[\\\"string\\\"],\\\"is_negated\\\":true,\\\"is_case_insensitive\\\":true,\\\"type\\\":\\\"GLOB\\\"},\\\"acl_audit_id\\\":\\\"string\\\",\\\"acl_audit_action\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"enf_type\\\":\\\"ALERT\\\"},\\\"acl_prod_id\\\":\\\"string\\\",\\\"acl_prod_action\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"url\\\":\\\"string\\\",\\\"status\\\":0,\\\"response_body_base64\\\":\\\"string\\\",\\\"enf_type\\\":\\\"REDIRECT_302\\\",\\\"response_headers\\\":[{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"}]},\\\"rules_audit_id\\\":\\\"string\\\",\\\"rules_audit_action\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"enf_type\\\":\\\"ALERT\\\"},\\\"rules_prod_id\\\":\\\"string\\\",\\\"rules_prod_action\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"url\\\":\\\"string\\\",\\\"status\\\":0,\\\"response_body_base64\\\":\\\"string\\\",\\\"enf_type\\\":\\\"REDIRECT_302\\\",\\\"response_headers\\\":[{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"}]},\\\"profile_audit_id\\\":\\\"string\\\",\\\"profile_audit_action\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"enf_type\\\":\\\"ALERT\\\"},\\\"profile_prod_id\\\":\\\"string\\\",\\\"profile_prod_action\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"url\\\":\\\"string\\\",\\\"status\\\":0,\\\"response_body_base64\\\":\\\"string\\\",\\\"enf_type\\\":\\\"REDIRECT_302\\\",\\\"response_headers\\\":[{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"}]},\\\"bot_manager_config_id\\\":\\\"string\\\",\\\"limits\\\":[{\\\"id\\\":\\\"string\\\",\\\"action\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"duration_sec\\\":10,\\\"url\\\":\\\"string\\\",\\\"status\\\":0,\\\"response_body_base64\\\":\\\"string\\\",\\\"enf_type\\\":\\\"REDIRECT_302\\\",\\\"response_headers\\\":[{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"}]}}]}],\\\"team_config\\\":true}\"\n\nconn.request(\"POST\", \"/waf/v0.9/%7Borganization_id%7D/scopes\", payload)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"get":{"operationId":"get-security-applications","tags":["Security Applications (Scopes)"],"summary":"Get All Security Apps","description":"Retrieves a list of Security Apps.","parameters":[{"$ref":"#/components/parameters/organization_id"}],"responses":{"200":{"description":"OK. A list of Security Apps was retrieved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Scopes"}}}},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/scopes'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/scopes\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/scopes"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/waf/v0.9/%7Borganization_id%7D/scopes\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"put":{"operationId":"update-security-applications","tags":["Security Applications (Scopes)"],"summary":"Manage All Security Apps","description":"\nCreates, updates, and deletes one or more Security Apps. Each Security App:\n\n-   Identifies the set of traffic to which it applies by hostname, a URL path, or both.\n\n-   Defines how threats will be detected through access rules, custom rules, managed rules, and rate rules.\n\n    If one or more condition group(s) have been defined within a rate rule, then traffic will only be rate limited when it also satisfies at least one of those condition groups.\n\n-   Defines how threats will be handled through a production enforcement action, audit enforcement action, or both.\n\n**Key information:**\n\n-   This operation allows you to quickly create, update, or delete one or more Security Apps. These actions cannot be undone.\n\n-   Create a Security App by adding a scope object in the request.\n\n-   Update a Security App by modifying an existing scope object in the request. The id property identifies the Security App that will be updated.\n\n-   Delete a Security App by excluding a scope object from the request.\n\n    All Security Apps that are not explicitly defined within the request will be deleted.\n\n-   The recommended method for updating your Security Apps is to perform the following steps:\n\n    1.  If you have not created at least one Security App, then you should do so either through the Edgio Console or through the [Initialize Security Apps operation](#tag/Security-Applications-(Scopes)/operation/create-security-applications).\n\n    2.  Retrieve your current set of Security Apps through the [Get All Security Apps operation](#tag/Security-Applications-(Scopes)/operation/get-security-applications).\n\n    3.  Add, modify, or remove Security Apps from the response as needed.\n\n    4.  Pass the updated payload to this operation.\n","parameters":[{"$ref":"#/components/parameters/organization_id"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Scopes"}}},"required":true},"responses":{"200":{"description":"OK. A Security App was updated.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseObj"}}}},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/scopes',\n  body: {\n    version: 'string',\n    id: 'string',\n    name: 'string',\n    customer_id: 'string',\n    last_modified_date: 'string',\n    last_modified_by: 'string',\n    scopes: [\n      {\n        id: 'string',\n        name: 'string',\n        recaptcha_action_name: 'string',\n        recaptcha_secret_key: 'string',\n        recaptcha_site_key: 'string',\n        host: {\n          value: 'string',\n          values: ['string'],\n          is_negated: true,\n          is_case_insensitive: true,\n          type: 'GLOB'\n        },\n        path: {\n          value: 'string',\n          values: ['string'],\n          is_negated: true,\n          is_case_insensitive: true,\n          type: 'GLOB'\n        },\n        acl_audit_id: 'string',\n        acl_audit_action: {id: 'string', name: 'string', enf_type: 'ALERT'},\n        acl_prod_id: 'string',\n        acl_prod_action: {\n          id: 'string',\n          name: 'string',\n          url: 'string',\n          status: 0,\n          response_body_base64: 'string',\n          enf_type: 'REDIRECT_302',\n          response_headers: [{property1: 'string', property2: 'string'}]\n        },\n        rules_audit_id: 'string',\n        rules_audit_action: {id: 'string', name: 'string', enf_type: 'ALERT'},\n        rules_prod_id: 'string',\n        rules_prod_action: {\n          id: 'string',\n          name: 'string',\n          url: 'string',\n          status: 0,\n          response_body_base64: 'string',\n          enf_type: 'REDIRECT_302',\n          response_headers: [{property1: 'string', property2: 'string'}]\n        },\n        profile_audit_id: 'string',\n        profile_audit_action: {id: 'string', name: 'string', enf_type: 'ALERT'},\n        profile_prod_id: 'string',\n        profile_prod_action: {\n          id: 'string',\n          name: 'string',\n          url: 'string',\n          status: 0,\n          response_body_base64: 'string',\n          enf_type: 'REDIRECT_302',\n          response_headers: [{property1: 'string', property2: 'string'}]\n        },\n        bot_manager_config_id: 'string',\n        limits: [\n          {\n            id: 'string',\n            action: {\n              id: 'string',\n              name: 'string',\n              duration_sec: 10,\n              url: 'string',\n              status: 0,\n              response_body_base64: 'string',\n              enf_type: 'REDIRECT_302',\n              response_headers: [{property1: 'string', property2: 'string'}]\n            }\n          }\n        ]\n      }\n    ],\n    team_config: true\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"version\": \"string\",\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"customer_id\": \"string\",\n  \"last_modified_date\": \"string\",\n  \"last_modified_by\": \"string\",\n  \"scopes\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"recaptcha_action_name\": \"string\",\n      \"recaptcha_secret_key\": \"string\",\n      \"recaptcha_site_key\": \"string\",\n      \"host\": {\n        \"value\": \"string\",\n        \"values\": [\n          \"string\"\n        ],\n        \"is_negated\": true,\n        \"is_case_insensitive\": true,\n        \"type\": \"GLOB\"\n      },\n      \"path\": {\n        \"value\": \"string\",\n        \"values\": [\n          \"string\"\n        ],\n        \"is_negated\": true,\n        \"is_case_insensitive\": true,\n        \"type\": \"GLOB\"\n      },\n      \"acl_audit_id\": \"string\",\n      \"acl_audit_action\": {\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"enf_type\": \"ALERT\"\n      },\n      \"acl_prod_id\": \"string\",\n      \"acl_prod_action\": {\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"url\": \"string\",\n        \"status\": 0,\n        \"response_body_base64\": \"string\",\n        \"enf_type\": \"REDIRECT_302\",\n        \"response_headers\": [\n          {\n            \"property1\": \"string\",\n            \"property2\": \"string\"\n          }\n        ]\n      },\n      \"rules_audit_id\": \"string\",\n      \"rules_audit_action\": {\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"enf_type\": \"ALERT\"\n      },\n      \"rules_prod_id\": \"string\",\n      \"rules_prod_action\": {\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"url\": \"string\",\n        \"status\": 0,\n        \"response_body_base64\": \"string\",\n        \"enf_type\": \"REDIRECT_302\",\n        \"response_headers\": [\n          {\n            \"property1\": \"string\",\n            \"property2\": \"string\"\n          }\n        ]\n      },\n      \"profile_audit_id\": \"string\",\n      \"profile_audit_action\": {\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"enf_type\": \"ALERT\"\n      },\n      \"profile_prod_id\": \"string\",\n      \"profile_prod_action\": {\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"url\": \"string\",\n        \"status\": 0,\n        \"response_body_base64\": \"string\",\n        \"enf_type\": \"REDIRECT_302\",\n        \"response_headers\": [\n          {\n            \"property1\": \"string\",\n            \"property2\": \"string\"\n          }\n        ]\n      },\n      \"bot_manager_config_id\": \"string\",\n      \"limits\": [\n        {\n          \"id\": \"string\",\n          \"action\": {\n            \"id\": \"string\",\n            \"name\": \"string\",\n            \"duration_sec\": 10,\n            \"url\": \"string\",\n            \"status\": 0,\n            \"response_body_base64\": \"string\",\n            \"enf_type\": \"REDIRECT_302\",\n            \"response_headers\": [\n              {\n                \"property1\": \"string\",\n                \"property2\": \"string\"\n              }\n            ]\n          }\n        }\n      ]\n    }\n  ],\n  \"team_config\": true\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PUT\", \"https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/scopes\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request PUT \\\n  --url https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/scopes \\\n  --data '{\"version\":\"string\",\"id\":\"string\",\"name\":\"string\",\"customer_id\":\"string\",\"last_modified_date\":\"string\",\"last_modified_by\":\"string\",\"scopes\":[{\"id\":\"string\",\"name\":\"string\",\"recaptcha_action_name\":\"string\",\"recaptcha_secret_key\":\"string\",\"recaptcha_site_key\":\"string\",\"host\":{\"value\":\"string\",\"values\":[\"string\"],\"is_negated\":true,\"is_case_insensitive\":true,\"type\":\"GLOB\"},\"path\":{\"value\":\"string\",\"values\":[\"string\"],\"is_negated\":true,\"is_case_insensitive\":true,\"type\":\"GLOB\"},\"acl_audit_id\":\"string\",\"acl_audit_action\":{\"id\":\"string\",\"name\":\"string\",\"enf_type\":\"ALERT\"},\"acl_prod_id\":\"string\",\"acl_prod_action\":{\"id\":\"string\",\"name\":\"string\",\"url\":\"string\",\"status\":0,\"response_body_base64\":\"string\",\"enf_type\":\"REDIRECT_302\",\"response_headers\":[{\"property1\":\"string\",\"property2\":\"string\"}]},\"rules_audit_id\":\"string\",\"rules_audit_action\":{\"id\":\"string\",\"name\":\"string\",\"enf_type\":\"ALERT\"},\"rules_prod_id\":\"string\",\"rules_prod_action\":{\"id\":\"string\",\"name\":\"string\",\"url\":\"string\",\"status\":0,\"response_body_base64\":\"string\",\"enf_type\":\"REDIRECT_302\",\"response_headers\":[{\"property1\":\"string\",\"property2\":\"string\"}]},\"profile_audit_id\":\"string\",\"profile_audit_action\":{\"id\":\"string\",\"name\":\"string\",\"enf_type\":\"ALERT\"},\"profile_prod_id\":\"string\",\"profile_prod_action\":{\"id\":\"string\",\"name\":\"string\",\"url\":\"string\",\"status\":0,\"response_body_base64\":\"string\",\"enf_type\":\"REDIRECT_302\",\"response_headers\":[{\"property1\":\"string\",\"property2\":\"string\"}]},\"bot_manager_config_id\":\"string\",\"limits\":[{\"id\":\"string\",\"action\":{\"id\":\"string\",\"name\":\"string\",\"duration_sec\":10,\"url\":\"string\",\"status\":0,\"response_body_base64\":\"string\",\"enf_type\":\"REDIRECT_302\",\"response_headers\":[{\"property1\":\"string\",\"property2\":\"string\"}]}}]}],\"team_config\":true}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"version\\\":\\\"string\\\",\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"customer_id\\\":\\\"string\\\",\\\"last_modified_date\\\":\\\"string\\\",\\\"last_modified_by\\\":\\\"string\\\",\\\"scopes\\\":[{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"recaptcha_action_name\\\":\\\"string\\\",\\\"recaptcha_secret_key\\\":\\\"string\\\",\\\"recaptcha_site_key\\\":\\\"string\\\",\\\"host\\\":{\\\"value\\\":\\\"string\\\",\\\"values\\\":[\\\"string\\\"],\\\"is_negated\\\":true,\\\"is_case_insensitive\\\":true,\\\"type\\\":\\\"GLOB\\\"},\\\"path\\\":{\\\"value\\\":\\\"string\\\",\\\"values\\\":[\\\"string\\\"],\\\"is_negated\\\":true,\\\"is_case_insensitive\\\":true,\\\"type\\\":\\\"GLOB\\\"},\\\"acl_audit_id\\\":\\\"string\\\",\\\"acl_audit_action\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"enf_type\\\":\\\"ALERT\\\"},\\\"acl_prod_id\\\":\\\"string\\\",\\\"acl_prod_action\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"url\\\":\\\"string\\\",\\\"status\\\":0,\\\"response_body_base64\\\":\\\"string\\\",\\\"enf_type\\\":\\\"REDIRECT_302\\\",\\\"response_headers\\\":[{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"}]},\\\"rules_audit_id\\\":\\\"string\\\",\\\"rules_audit_action\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"enf_type\\\":\\\"ALERT\\\"},\\\"rules_prod_id\\\":\\\"string\\\",\\\"rules_prod_action\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"url\\\":\\\"string\\\",\\\"status\\\":0,\\\"response_body_base64\\\":\\\"string\\\",\\\"enf_type\\\":\\\"REDIRECT_302\\\",\\\"response_headers\\\":[{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"}]},\\\"profile_audit_id\\\":\\\"string\\\",\\\"profile_audit_action\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"enf_type\\\":\\\"ALERT\\\"},\\\"profile_prod_id\\\":\\\"string\\\",\\\"profile_prod_action\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"url\\\":\\\"string\\\",\\\"status\\\":0,\\\"response_body_base64\\\":\\\"string\\\",\\\"enf_type\\\":\\\"REDIRECT_302\\\",\\\"response_headers\\\":[{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"}]},\\\"bot_manager_config_id\\\":\\\"string\\\",\\\"limits\\\":[{\\\"id\\\":\\\"string\\\",\\\"action\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"duration_sec\\\":10,\\\"url\\\":\\\"string\\\",\\\"status\\\":0,\\\"response_body_base64\\\":\\\"string\\\",\\\"enf_type\\\":\\\"REDIRECT_302\\\",\\\"response_headers\\\":[{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"}]}}]}],\\\"team_config\\\":true}\"\n\nconn.request(\"PUT\", \"/waf/v0.9/%7Borganization_id%7D/scopes\", payload)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/{organization_id}/acls":{"servers":[{"url":"https://edgioapis.com/waf/v0.9"}],"security":[{"oAuthCC":["app.app.waf"]}],"post":{"operationId":"create-acl-rule","tags":["Access Control List (ACL)"],"summary":"Add Access Rule","description":"Creates an access rule that identifies threats through whitelists, accesslists, and blacklists.","parameters":[{"$ref":"#/components/parameters/organization_id"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Acl"}}},"required":true},"responses":{"200":{"description":"OK. An access rule was created.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseObj"}}}},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/acls',\n  body: {\n    version: 'string',\n    id: 'string',\n    name: 'string',\n    customer_id: 'string',\n    last_modified_date: 'string',\n    last_modified_by: 'string',\n    country: {accesslist: ['string'], blacklist: ['string'], whitelist: ['string']},\n    sd_iso: {accesslist: ['string'], blacklist: ['string'], whitelist: ['string']},\n    ip: {accesslist: ['string'], blacklist: ['string'], whitelist: ['string']},\n    referer: {accesslist: ['string'], blacklist: ['string'], whitelist: ['string']},\n    url: {accesslist: ['string'], blacklist: ['string'], whitelist: ['string']},\n    cookie: {accesslist: ['string'], blacklist: ['string'], whitelist: ['string']},\n    user_agent: {accesslist: ['string'], blacklist: ['string'], whitelist: ['string']},\n    ja3: {accesslist: ['string'], blacklist: ['string'], whitelist: ['string']},\n    asn: {accesslist: [0], blacklist: [0], whitelist: [0]},\n    allow_anonymous_proxy: true,\n    super_capacity: true,\n    allowed_http_methods: ['string'],\n    allowed_request_content_types: ['string'],\n    disallowed_extensions: ['string'],\n    disallowed_headers: ['string'],\n    max_file_size: 0,\n    response_header_name: 'string',\n    team_config: true\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"version\": \"string\",\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"customer_id\": \"string\",\n  \"last_modified_date\": \"string\",\n  \"last_modified_by\": \"string\",\n  \"country\": {\n    \"accesslist\": [\n      \"string\"\n    ],\n    \"blacklist\": [\n      \"string\"\n    ],\n    \"whitelist\": [\n      \"string\"\n    ]\n  },\n  \"sd_iso\": {\n    \"accesslist\": [\n      \"string\"\n    ],\n    \"blacklist\": [\n      \"string\"\n    ],\n    \"whitelist\": [\n      \"string\"\n    ]\n  },\n  \"ip\": {\n    \"accesslist\": [\n      \"string\"\n    ],\n    \"blacklist\": [\n      \"string\"\n    ],\n    \"whitelist\": [\n      \"string\"\n    ]\n  },\n  \"referer\": {\n    \"accesslist\": [\n      \"string\"\n    ],\n    \"blacklist\": [\n      \"string\"\n    ],\n    \"whitelist\": [\n      \"string\"\n    ]\n  },\n  \"url\": {\n    \"accesslist\": [\n      \"string\"\n    ],\n    \"blacklist\": [\n      \"string\"\n    ],\n    \"whitelist\": [\n      \"string\"\n    ]\n  },\n  \"cookie\": {\n    \"accesslist\": [\n      \"string\"\n    ],\n    \"blacklist\": [\n      \"string\"\n    ],\n    \"whitelist\": [\n      \"string\"\n    ]\n  },\n  \"user_agent\": {\n    \"accesslist\": [\n      \"string\"\n    ],\n    \"blacklist\": [\n      \"string\"\n    ],\n    \"whitelist\": [\n      \"string\"\n    ]\n  },\n  \"ja3\": {\n    \"accesslist\": [\n      \"string\"\n    ],\n    \"blacklist\": [\n      \"string\"\n    ],\n    \"whitelist\": [\n      \"string\"\n    ]\n  },\n  \"asn\": {\n    \"accesslist\": [\n      0\n    ],\n    \"blacklist\": [\n      0\n    ],\n    \"whitelist\": [\n      0\n    ]\n  },\n  \"allow_anonymous_proxy\": true,\n  \"super_capacity\": true,\n  \"allowed_http_methods\": [\n    \"string\"\n  ],\n  \"allowed_request_content_types\": [\n    \"string\"\n  ],\n  \"disallowed_extensions\": [\n    \"string\"\n  ],\n  \"disallowed_headers\": [\n    \"string\"\n  ],\n  \"max_file_size\": 0,\n  \"response_header_name\": \"string\",\n  \"team_config\": true\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/acls\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/acls \\\n  --data '{\"version\":\"string\",\"id\":\"string\",\"name\":\"string\",\"customer_id\":\"string\",\"last_modified_date\":\"string\",\"last_modified_by\":\"string\",\"country\":{\"accesslist\":[\"string\"],\"blacklist\":[\"string\"],\"whitelist\":[\"string\"]},\"sd_iso\":{\"accesslist\":[\"string\"],\"blacklist\":[\"string\"],\"whitelist\":[\"string\"]},\"ip\":{\"accesslist\":[\"string\"],\"blacklist\":[\"string\"],\"whitelist\":[\"string\"]},\"referer\":{\"accesslist\":[\"string\"],\"blacklist\":[\"string\"],\"whitelist\":[\"string\"]},\"url\":{\"accesslist\":[\"string\"],\"blacklist\":[\"string\"],\"whitelist\":[\"string\"]},\"cookie\":{\"accesslist\":[\"string\"],\"blacklist\":[\"string\"],\"whitelist\":[\"string\"]},\"user_agent\":{\"accesslist\":[\"string\"],\"blacklist\":[\"string\"],\"whitelist\":[\"string\"]},\"ja3\":{\"accesslist\":[\"string\"],\"blacklist\":[\"string\"],\"whitelist\":[\"string\"]},\"asn\":{\"accesslist\":[0],\"blacklist\":[0],\"whitelist\":[0]},\"allow_anonymous_proxy\":true,\"super_capacity\":true,\"allowed_http_methods\":[\"string\"],\"allowed_request_content_types\":[\"string\"],\"disallowed_extensions\":[\"string\"],\"disallowed_headers\":[\"string\"],\"max_file_size\":0,\"response_header_name\":\"string\",\"team_config\":true}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"version\\\":\\\"string\\\",\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"customer_id\\\":\\\"string\\\",\\\"last_modified_date\\\":\\\"string\\\",\\\"last_modified_by\\\":\\\"string\\\",\\\"country\\\":{\\\"accesslist\\\":[\\\"string\\\"],\\\"blacklist\\\":[\\\"string\\\"],\\\"whitelist\\\":[\\\"string\\\"]},\\\"sd_iso\\\":{\\\"accesslist\\\":[\\\"string\\\"],\\\"blacklist\\\":[\\\"string\\\"],\\\"whitelist\\\":[\\\"string\\\"]},\\\"ip\\\":{\\\"accesslist\\\":[\\\"string\\\"],\\\"blacklist\\\":[\\\"string\\\"],\\\"whitelist\\\":[\\\"string\\\"]},\\\"referer\\\":{\\\"accesslist\\\":[\\\"string\\\"],\\\"blacklist\\\":[\\\"string\\\"],\\\"whitelist\\\":[\\\"string\\\"]},\\\"url\\\":{\\\"accesslist\\\":[\\\"string\\\"],\\\"blacklist\\\":[\\\"string\\\"],\\\"whitelist\\\":[\\\"string\\\"]},\\\"cookie\\\":{\\\"accesslist\\\":[\\\"string\\\"],\\\"blacklist\\\":[\\\"string\\\"],\\\"whitelist\\\":[\\\"string\\\"]},\\\"user_agent\\\":{\\\"accesslist\\\":[\\\"string\\\"],\\\"blacklist\\\":[\\\"string\\\"],\\\"whitelist\\\":[\\\"string\\\"]},\\\"ja3\\\":{\\\"accesslist\\\":[\\\"string\\\"],\\\"blacklist\\\":[\\\"string\\\"],\\\"whitelist\\\":[\\\"string\\\"]},\\\"asn\\\":{\\\"accesslist\\\":[0],\\\"blacklist\\\":[0],\\\"whitelist\\\":[0]},\\\"allow_anonymous_proxy\\\":true,\\\"super_capacity\\\":true,\\\"allowed_http_methods\\\":[\\\"string\\\"],\\\"allowed_request_content_types\\\":[\\\"string\\\"],\\\"disallowed_extensions\\\":[\\\"string\\\"],\\\"disallowed_headers\\\":[\\\"string\\\"],\\\"max_file_size\\\":0,\\\"response_header_name\\\":\\\"string\\\",\\\"team_config\\\":true}\"\n\nconn.request(\"POST\", \"/waf/v0.9/%7Borganization_id%7D/acls\", payload)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"get":{"operationId":"get-acl-rules","tags":["Access Control List (ACL)"],"summary":"Get All Access Rules","description":"Retrieves a list of access rules. An access rule identifies whether a request is a threat through whitelists, accesslists, and blacklists.","parameters":[{"$ref":"#/components/parameters/organization_id"}],"responses":{"200":{"description":"OK. A list of access rules was retrieved.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ObjShort"}},"examples":{"response":{"value":[{"id":"e3mpHQY5","name":"sample_acl_config"}]}}}}},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/acls'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/acls\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/acls"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/waf/v0.9/%7Borganization_id%7D/acls\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/{organization_id}/acls/{acl_id}":{"servers":[{"url":"https://edgioapis.com/waf/v0.9"}],"security":[{"oAuthCC":["app.app.waf"]}],"parameters":[{"$ref":"#/components/parameters/organization_id"},{"$ref":"#/components/parameters/acl_id"}],"get":{"operationId":"get-acl-rule","tags":["Access Control List (ACL)"],"summary":"Get Access Rule","description":"Retrieves an access rule that identifies threats through whitelists, accesslists, and blacklists.","responses":{"200":{"description":"OK. An access rule was retrieved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Acl"}}}},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/acls/%7Bacl_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/acls/%7Bacl_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/acls/%7Bacl_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/waf/v0.9/%7Borganization_id%7D/acls/%7Bacl_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"put":{"operationId":"update-acl-rule","tags":["Access Control List (ACL)"],"summary":"Update Access Rule","description":"Updates an access rule that identifies threats through whitelists, accesslists, and blacklists.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Acl"}}},"required":true},"responses":{"200":{"description":"OK. An access rule was updated.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseObj"}}}},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/acls/%7Bacl_id%7D',\n  body: {\n    version: 'string',\n    id: 'string',\n    name: 'string',\n    customer_id: 'string',\n    last_modified_date: 'string',\n    last_modified_by: 'string',\n    country: {accesslist: ['string'], blacklist: ['string'], whitelist: ['string']},\n    sd_iso: {accesslist: ['string'], blacklist: ['string'], whitelist: ['string']},\n    ip: {accesslist: ['string'], blacklist: ['string'], whitelist: ['string']},\n    referer: {accesslist: ['string'], blacklist: ['string'], whitelist: ['string']},\n    url: {accesslist: ['string'], blacklist: ['string'], whitelist: ['string']},\n    cookie: {accesslist: ['string'], blacklist: ['string'], whitelist: ['string']},\n    user_agent: {accesslist: ['string'], blacklist: ['string'], whitelist: ['string']},\n    ja3: {accesslist: ['string'], blacklist: ['string'], whitelist: ['string']},\n    asn: {accesslist: [0], blacklist: [0], whitelist: [0]},\n    allow_anonymous_proxy: true,\n    super_capacity: true,\n    allowed_http_methods: ['string'],\n    allowed_request_content_types: ['string'],\n    disallowed_extensions: ['string'],\n    disallowed_headers: ['string'],\n    max_file_size: 0,\n    response_header_name: 'string',\n    team_config: true\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"version\": \"string\",\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"customer_id\": \"string\",\n  \"last_modified_date\": \"string\",\n  \"last_modified_by\": \"string\",\n  \"country\": {\n    \"accesslist\": [\n      \"string\"\n    ],\n    \"blacklist\": [\n      \"string\"\n    ],\n    \"whitelist\": [\n      \"string\"\n    ]\n  },\n  \"sd_iso\": {\n    \"accesslist\": [\n      \"string\"\n    ],\n    \"blacklist\": [\n      \"string\"\n    ],\n    \"whitelist\": [\n      \"string\"\n    ]\n  },\n  \"ip\": {\n    \"accesslist\": [\n      \"string\"\n    ],\n    \"blacklist\": [\n      \"string\"\n    ],\n    \"whitelist\": [\n      \"string\"\n    ]\n  },\n  \"referer\": {\n    \"accesslist\": [\n      \"string\"\n    ],\n    \"blacklist\": [\n      \"string\"\n    ],\n    \"whitelist\": [\n      \"string\"\n    ]\n  },\n  \"url\": {\n    \"accesslist\": [\n      \"string\"\n    ],\n    \"blacklist\": [\n      \"string\"\n    ],\n    \"whitelist\": [\n      \"string\"\n    ]\n  },\n  \"cookie\": {\n    \"accesslist\": [\n      \"string\"\n    ],\n    \"blacklist\": [\n      \"string\"\n    ],\n    \"whitelist\": [\n      \"string\"\n    ]\n  },\n  \"user_agent\": {\n    \"accesslist\": [\n      \"string\"\n    ],\n    \"blacklist\": [\n      \"string\"\n    ],\n    \"whitelist\": [\n      \"string\"\n    ]\n  },\n  \"ja3\": {\n    \"accesslist\": [\n      \"string\"\n    ],\n    \"blacklist\": [\n      \"string\"\n    ],\n    \"whitelist\": [\n      \"string\"\n    ]\n  },\n  \"asn\": {\n    \"accesslist\": [\n      0\n    ],\n    \"blacklist\": [\n      0\n    ],\n    \"whitelist\": [\n      0\n    ]\n  },\n  \"allow_anonymous_proxy\": true,\n  \"super_capacity\": true,\n  \"allowed_http_methods\": [\n    \"string\"\n  ],\n  \"allowed_request_content_types\": [\n    \"string\"\n  ],\n  \"disallowed_extensions\": [\n    \"string\"\n  ],\n  \"disallowed_headers\": [\n    \"string\"\n  ],\n  \"max_file_size\": 0,\n  \"response_header_name\": \"string\",\n  \"team_config\": true\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PUT\", \"https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/acls/%7Bacl_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request PUT \\\n  --url https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/acls/%7Bacl_id%7D \\\n  --data '{\"version\":\"string\",\"id\":\"string\",\"name\":\"string\",\"customer_id\":\"string\",\"last_modified_date\":\"string\",\"last_modified_by\":\"string\",\"country\":{\"accesslist\":[\"string\"],\"blacklist\":[\"string\"],\"whitelist\":[\"string\"]},\"sd_iso\":{\"accesslist\":[\"string\"],\"blacklist\":[\"string\"],\"whitelist\":[\"string\"]},\"ip\":{\"accesslist\":[\"string\"],\"blacklist\":[\"string\"],\"whitelist\":[\"string\"]},\"referer\":{\"accesslist\":[\"string\"],\"blacklist\":[\"string\"],\"whitelist\":[\"string\"]},\"url\":{\"accesslist\":[\"string\"],\"blacklist\":[\"string\"],\"whitelist\":[\"string\"]},\"cookie\":{\"accesslist\":[\"string\"],\"blacklist\":[\"string\"],\"whitelist\":[\"string\"]},\"user_agent\":{\"accesslist\":[\"string\"],\"blacklist\":[\"string\"],\"whitelist\":[\"string\"]},\"ja3\":{\"accesslist\":[\"string\"],\"blacklist\":[\"string\"],\"whitelist\":[\"string\"]},\"asn\":{\"accesslist\":[0],\"blacklist\":[0],\"whitelist\":[0]},\"allow_anonymous_proxy\":true,\"super_capacity\":true,\"allowed_http_methods\":[\"string\"],\"allowed_request_content_types\":[\"string\"],\"disallowed_extensions\":[\"string\"],\"disallowed_headers\":[\"string\"],\"max_file_size\":0,\"response_header_name\":\"string\",\"team_config\":true}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"version\\\":\\\"string\\\",\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"customer_id\\\":\\\"string\\\",\\\"last_modified_date\\\":\\\"string\\\",\\\"last_modified_by\\\":\\\"string\\\",\\\"country\\\":{\\\"accesslist\\\":[\\\"string\\\"],\\\"blacklist\\\":[\\\"string\\\"],\\\"whitelist\\\":[\\\"string\\\"]},\\\"sd_iso\\\":{\\\"accesslist\\\":[\\\"string\\\"],\\\"blacklist\\\":[\\\"string\\\"],\\\"whitelist\\\":[\\\"string\\\"]},\\\"ip\\\":{\\\"accesslist\\\":[\\\"string\\\"],\\\"blacklist\\\":[\\\"string\\\"],\\\"whitelist\\\":[\\\"string\\\"]},\\\"referer\\\":{\\\"accesslist\\\":[\\\"string\\\"],\\\"blacklist\\\":[\\\"string\\\"],\\\"whitelist\\\":[\\\"string\\\"]},\\\"url\\\":{\\\"accesslist\\\":[\\\"string\\\"],\\\"blacklist\\\":[\\\"string\\\"],\\\"whitelist\\\":[\\\"string\\\"]},\\\"cookie\\\":{\\\"accesslist\\\":[\\\"string\\\"],\\\"blacklist\\\":[\\\"string\\\"],\\\"whitelist\\\":[\\\"string\\\"]},\\\"user_agent\\\":{\\\"accesslist\\\":[\\\"string\\\"],\\\"blacklist\\\":[\\\"string\\\"],\\\"whitelist\\\":[\\\"string\\\"]},\\\"ja3\\\":{\\\"accesslist\\\":[\\\"string\\\"],\\\"blacklist\\\":[\\\"string\\\"],\\\"whitelist\\\":[\\\"string\\\"]},\\\"asn\\\":{\\\"accesslist\\\":[0],\\\"blacklist\\\":[0],\\\"whitelist\\\":[0]},\\\"allow_anonymous_proxy\\\":true,\\\"super_capacity\\\":true,\\\"allowed_http_methods\\\":[\\\"string\\\"],\\\"allowed_request_content_types\\\":[\\\"string\\\"],\\\"disallowed_extensions\\\":[\\\"string\\\"],\\\"disallowed_headers\\\":[\\\"string\\\"],\\\"max_file_size\\\":0,\\\"response_header_name\\\":\\\"string\\\",\\\"team_config\\\":true}\"\n\nconn.request(\"PUT\", \"/waf/v0.9/%7Borganization_id%7D/acls/%7Bacl_id%7D\", payload)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"delete":{"operationId":"delete-acl-rule","tags":["Access Control List (ACL)"],"summary":"Delete Access Rule","description":"Deletes an access rule.","responses":{"200":{"description":"OK. An access rule was deleted."},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/acls/%7Bacl_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/acls/%7Bacl_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request DELETE \\\n  --url https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/acls/%7Bacl_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"DELETE\", \"/waf/v0.9/%7Borganization_id%7D/acls/%7Bacl_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/{organization_id}/rules":{"servers":[{"url":"https://edgioapis.com/waf/v0.9"}],"security":[{"oAuthCC":["app.app.waf"]}],"post":{"operationId":"create-custom-rule","tags":["Custom Rules"],"summary":"Add Custom Rule","description":"Creates a custom rule that defines custom threat assessment criteria.","parameters":[{"$ref":"#/components/parameters/organization_id"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Rule"}}},"required":true},"responses":{"200":{"description":"OK. A custom rule was created.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseObj"}}}},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/rules',\n  body: {\n    id: 'string',\n    directive: [\n      {\n        sec_rule: {\n          id: 'string',\n          name: 'string',\n          variable: [\n            {\n              type: 'REQUEST_HEADERS',\n              match: [{value: 'string', is_negated: true, is_regex: true}],\n              is_count: true\n            }\n          ],\n          operator: {type: 'RX', value: 'string', is_negated: true},\n          action: {id: 'string', msg: 'string', t: ['NONE']},\n          chained_rule: [\n            {\n              variable: [\n                {\n                  type: 'REQUEST_HEADERS',\n                  match: [{value: 'string', is_negated: true, is_regex: true}],\n                  is_count: true\n                }\n              ],\n              operator: {type: 'RX', value: 'string', is_negated: true},\n              action: {id: 'string', msg: 'string', t: ['NONE']}\n            }\n          ]\n        }\n      }\n    ],\n    customer_id: 'string',\n    last_modified_date: 'string',\n    name: 'string',\n    team_config: true\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"id\": \"string\",\n  \"directive\": [\n    {\n      \"sec_rule\": {\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"variable\": [\n          {\n            \"type\": \"REQUEST_HEADERS\",\n            \"match\": [\n              {\n                \"value\": \"string\",\n                \"is_negated\": true,\n                \"is_regex\": true\n              }\n            ],\n            \"is_count\": true\n          }\n        ],\n        \"operator\": {\n          \"type\": \"RX\",\n          \"value\": \"string\",\n          \"is_negated\": true\n        },\n        \"action\": {\n          \"id\": \"string\",\n          \"msg\": \"string\",\n          \"t\": [\n            \"NONE\"\n          ]\n        },\n        \"chained_rule\": [\n          {\n            \"variable\": [\n              {\n                \"type\": \"REQUEST_HEADERS\",\n                \"match\": [\n                  {\n                    \"value\": \"string\",\n                    \"is_negated\": true,\n                    \"is_regex\": true\n                  }\n                ],\n                \"is_count\": true\n              }\n            ],\n            \"operator\": {\n              \"type\": \"RX\",\n              \"value\": \"string\",\n              \"is_negated\": true\n            },\n            \"action\": {\n              \"id\": \"string\",\n              \"msg\": \"string\",\n              \"t\": [\n                \"NONE\"\n              ]\n            }\n          }\n        ]\n      }\n    }\n  ],\n  \"customer_id\": \"string\",\n  \"last_modified_date\": \"string\",\n  \"name\": \"string\",\n  \"team_config\": true\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/rules\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/rules \\\n  --data '{\"id\":\"string\",\"directive\":[{\"sec_rule\":{\"id\":\"string\",\"name\":\"string\",\"variable\":[{\"type\":\"REQUEST_HEADERS\",\"match\":[{\"value\":\"string\",\"is_negated\":true,\"is_regex\":true}],\"is_count\":true}],\"operator\":{\"type\":\"RX\",\"value\":\"string\",\"is_negated\":true},\"action\":{\"id\":\"string\",\"msg\":\"string\",\"t\":[\"NONE\"]},\"chained_rule\":[{\"variable\":[{\"type\":\"REQUEST_HEADERS\",\"match\":[{\"value\":\"string\",\"is_negated\":true,\"is_regex\":true}],\"is_count\":true}],\"operator\":{\"type\":\"RX\",\"value\":\"string\",\"is_negated\":true},\"action\":{\"id\":\"string\",\"msg\":\"string\",\"t\":[\"NONE\"]}}]}}],\"customer_id\":\"string\",\"last_modified_date\":\"string\",\"name\":\"string\",\"team_config\":true}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"id\\\":\\\"string\\\",\\\"directive\\\":[{\\\"sec_rule\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"variable\\\":[{\\\"type\\\":\\\"REQUEST_HEADERS\\\",\\\"match\\\":[{\\\"value\\\":\\\"string\\\",\\\"is_negated\\\":true,\\\"is_regex\\\":true}],\\\"is_count\\\":true}],\\\"operator\\\":{\\\"type\\\":\\\"RX\\\",\\\"value\\\":\\\"string\\\",\\\"is_negated\\\":true},\\\"action\\\":{\\\"id\\\":\\\"string\\\",\\\"msg\\\":\\\"string\\\",\\\"t\\\":[\\\"NONE\\\"]},\\\"chained_rule\\\":[{\\\"variable\\\":[{\\\"type\\\":\\\"REQUEST_HEADERS\\\",\\\"match\\\":[{\\\"value\\\":\\\"string\\\",\\\"is_negated\\\":true,\\\"is_regex\\\":true}],\\\"is_count\\\":true}],\\\"operator\\\":{\\\"type\\\":\\\"RX\\\",\\\"value\\\":\\\"string\\\",\\\"is_negated\\\":true},\\\"action\\\":{\\\"id\\\":\\\"string\\\",\\\"msg\\\":\\\"string\\\",\\\"t\\\":[\\\"NONE\\\"]}}]}}],\\\"customer_id\\\":\\\"string\\\",\\\"last_modified_date\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"team_config\\\":true}\"\n\nconn.request(\"POST\", \"/waf/v0.9/%7Borganization_id%7D/rules\", payload)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"get":{"operationId":"get-custom-rules","tags":["Custom Rules"],"summary":"Get All Custom Rules","description":"Retrieves a list of custom rules. A custom rule allows you to define custom threat assessment criterion.","parameters":[{"$ref":"#/components/parameters/organization_id"}],"responses":{"200":{"description":"OK. A list of custom rules was retrieved.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ObjShort"}},"examples":{"response":{"value":[{"id":"e3mpHQY5","name":"sample_rule_config"}]}}}}},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/rules'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/rules\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/rules"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/waf/v0.9/%7Borganization_id%7D/rules\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/{organization_id}/rules/{rule_id}":{"servers":[{"url":"https://edgioapis.com/waf/v0.9"}],"security":[{"oAuthCC":["app.app.waf"]}],"parameters":[{"$ref":"#/components/parameters/organization_id"},{"$ref":"#/components/parameters/rule_id"}],"get":{"operationId":"get-custom-rule","tags":["Custom Rules"],"summary":"Get Custom Rule","description":"Retrieves a custom rule. Use a custom rule to define custom threat assessment criteria.","responses":{"200":{"description":"OK. A custom rule was retrieved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Rule"}}}},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/rules/%7Brule_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/rules/%7Brule_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/rules/%7Brule_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/waf/v0.9/%7Borganization_id%7D/rules/%7Brule_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"put":{"operationId":"update-custom-rule","tags":["Custom Rules"],"summary":"Update Custom Rule","description":"Updates a custom rule that defines custom threat assessment criteria.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Rule"}}},"required":true},"responses":{"200":{"description":"OK. A custom rule was updated.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseObj"}}}},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/rules/%7Brule_id%7D',\n  body: {\n    id: 'string',\n    directive: [\n      {\n        sec_rule: {\n          id: 'string',\n          name: 'string',\n          variable: [\n            {\n              type: 'REQUEST_HEADERS',\n              match: [{value: 'string', is_negated: true, is_regex: true}],\n              is_count: true\n            }\n          ],\n          operator: {type: 'RX', value: 'string', is_negated: true},\n          action: {id: 'string', msg: 'string', t: ['NONE']},\n          chained_rule: [\n            {\n              variable: [\n                {\n                  type: 'REQUEST_HEADERS',\n                  match: [{value: 'string', is_negated: true, is_regex: true}],\n                  is_count: true\n                }\n              ],\n              operator: {type: 'RX', value: 'string', is_negated: true},\n              action: {id: 'string', msg: 'string', t: ['NONE']}\n            }\n          ]\n        }\n      }\n    ],\n    customer_id: 'string',\n    last_modified_date: 'string',\n    name: 'string',\n    team_config: true\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"id\": \"string\",\n  \"directive\": [\n    {\n      \"sec_rule\": {\n        \"id\": \"string\",\n        \"name\": \"string\",\n        \"variable\": [\n          {\n            \"type\": \"REQUEST_HEADERS\",\n            \"match\": [\n              {\n                \"value\": \"string\",\n                \"is_negated\": true,\n                \"is_regex\": true\n              }\n            ],\n            \"is_count\": true\n          }\n        ],\n        \"operator\": {\n          \"type\": \"RX\",\n          \"value\": \"string\",\n          \"is_negated\": true\n        },\n        \"action\": {\n          \"id\": \"string\",\n          \"msg\": \"string\",\n          \"t\": [\n            \"NONE\"\n          ]\n        },\n        \"chained_rule\": [\n          {\n            \"variable\": [\n              {\n                \"type\": \"REQUEST_HEADERS\",\n                \"match\": [\n                  {\n                    \"value\": \"string\",\n                    \"is_negated\": true,\n                    \"is_regex\": true\n                  }\n                ],\n                \"is_count\": true\n              }\n            ],\n            \"operator\": {\n              \"type\": \"RX\",\n              \"value\": \"string\",\n              \"is_negated\": true\n            },\n            \"action\": {\n              \"id\": \"string\",\n              \"msg\": \"string\",\n              \"t\": [\n                \"NONE\"\n              ]\n            }\n          }\n        ]\n      }\n    }\n  ],\n  \"customer_id\": \"string\",\n  \"last_modified_date\": \"string\",\n  \"name\": \"string\",\n  \"team_config\": true\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PUT\", \"https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/rules/%7Brule_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request PUT \\\n  --url https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/rules/%7Brule_id%7D \\\n  --data '{\"id\":\"string\",\"directive\":[{\"sec_rule\":{\"id\":\"string\",\"name\":\"string\",\"variable\":[{\"type\":\"REQUEST_HEADERS\",\"match\":[{\"value\":\"string\",\"is_negated\":true,\"is_regex\":true}],\"is_count\":true}],\"operator\":{\"type\":\"RX\",\"value\":\"string\",\"is_negated\":true},\"action\":{\"id\":\"string\",\"msg\":\"string\",\"t\":[\"NONE\"]},\"chained_rule\":[{\"variable\":[{\"type\":\"REQUEST_HEADERS\",\"match\":[{\"value\":\"string\",\"is_negated\":true,\"is_regex\":true}],\"is_count\":true}],\"operator\":{\"type\":\"RX\",\"value\":\"string\",\"is_negated\":true},\"action\":{\"id\":\"string\",\"msg\":\"string\",\"t\":[\"NONE\"]}}]}}],\"customer_id\":\"string\",\"last_modified_date\":\"string\",\"name\":\"string\",\"team_config\":true}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"id\\\":\\\"string\\\",\\\"directive\\\":[{\\\"sec_rule\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"variable\\\":[{\\\"type\\\":\\\"REQUEST_HEADERS\\\",\\\"match\\\":[{\\\"value\\\":\\\"string\\\",\\\"is_negated\\\":true,\\\"is_regex\\\":true}],\\\"is_count\\\":true}],\\\"operator\\\":{\\\"type\\\":\\\"RX\\\",\\\"value\\\":\\\"string\\\",\\\"is_negated\\\":true},\\\"action\\\":{\\\"id\\\":\\\"string\\\",\\\"msg\\\":\\\"string\\\",\\\"t\\\":[\\\"NONE\\\"]},\\\"chained_rule\\\":[{\\\"variable\\\":[{\\\"type\\\":\\\"REQUEST_HEADERS\\\",\\\"match\\\":[{\\\"value\\\":\\\"string\\\",\\\"is_negated\\\":true,\\\"is_regex\\\":true}],\\\"is_count\\\":true}],\\\"operator\\\":{\\\"type\\\":\\\"RX\\\",\\\"value\\\":\\\"string\\\",\\\"is_negated\\\":true},\\\"action\\\":{\\\"id\\\":\\\"string\\\",\\\"msg\\\":\\\"string\\\",\\\"t\\\":[\\\"NONE\\\"]}}]}}],\\\"customer_id\\\":\\\"string\\\",\\\"last_modified_date\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"team_config\\\":true}\"\n\nconn.request(\"PUT\", \"/waf/v0.9/%7Borganization_id%7D/rules/%7Brule_id%7D\", payload)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"delete":{"operationId":"delete-custom-rule","tags":["Custom Rules"],"summary":"Delete Custom Rule","description":"Deletes a custom rule.","responses":{"200":{"description":"OK. A custom rule was deleted."},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/rules/%7Brule_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/rules/%7Brule_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request DELETE \\\n  --url https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/rules/%7Brule_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"DELETE\", \"/waf/v0.9/%7Borganization_id%7D/rules/%7Brule_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/{organization_id}/limits":{"servers":[{"url":"https://edgioapis.com/waf/v0.9"}],"security":[{"oAuthCC":["app.app.waf"]}],"post":{"operationId":"create-rate-rule","tags":["Rate Rules (Limits)"],"summary":"Add Rate Rule","description":"Creates a rate rule that determines the maximum number of requests that will be allowed within a given time period.","parameters":[{"$ref":"#/components/parameters/organization_id"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Limit"}}},"required":true},"responses":{"200":{"description":"OK. A rate rule was created.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseObj"}}}},"400":{"$ref":"#/components/responses/error_400"},"403":{"$ref":"#/components/responses/error_403"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/limits',\n  body: {\n    version: 0,\n    id: 'string',\n    name: 'string',\n    customer_id: 'string',\n    last_modified_date: 'string',\n    last_modified_by: 'string',\n    disabled: true,\n    duration_sec: 1,\n    num: 0,\n    keys: ['IP'],\n    condition_groups: [\n      {\n        id: 'string',\n        name: 'string',\n        conditions: [\n          {\n            target: {type: 'FILE_EXT', value: 'string'},\n            op: {\n              type: 'RX',\n              value: 'string',\n              is_regex: true,\n              values: ['string'],\n              is_negated: true,\n              is_case_insensitive: true\n            }\n          }\n        ]\n      }\n    ],\n    team_config: true\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"version\": 0,\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"customer_id\": \"string\",\n  \"last_modified_date\": \"string\",\n  \"last_modified_by\": \"string\",\n  \"disabled\": true,\n  \"duration_sec\": 1,\n  \"num\": 0,\n  \"keys\": [\n    \"IP\"\n  ],\n  \"condition_groups\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"conditions\": [\n        {\n          \"target\": {\n            \"type\": \"FILE_EXT\",\n            \"value\": \"string\"\n          },\n          \"op\": {\n            \"type\": \"RX\",\n            \"value\": \"string\",\n            \"is_regex\": true,\n            \"values\": [\n              \"string\"\n            ],\n            \"is_negated\": true,\n            \"is_case_insensitive\": true\n          }\n        }\n      ]\n    }\n  ],\n  \"team_config\": true\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/limits\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/limits \\\n  --data '{\"version\":0,\"id\":\"string\",\"name\":\"string\",\"customer_id\":\"string\",\"last_modified_date\":\"string\",\"last_modified_by\":\"string\",\"disabled\":true,\"duration_sec\":1,\"num\":0,\"keys\":[\"IP\"],\"condition_groups\":[{\"id\":\"string\",\"name\":\"string\",\"conditions\":[{\"target\":{\"type\":\"FILE_EXT\",\"value\":\"string\"},\"op\":{\"type\":\"RX\",\"value\":\"string\",\"is_regex\":true,\"values\":[\"string\"],\"is_negated\":true,\"is_case_insensitive\":true}}]}],\"team_config\":true}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"version\\\":0,\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"customer_id\\\":\\\"string\\\",\\\"last_modified_date\\\":\\\"string\\\",\\\"last_modified_by\\\":\\\"string\\\",\\\"disabled\\\":true,\\\"duration_sec\\\":1,\\\"num\\\":0,\\\"keys\\\":[\\\"IP\\\"],\\\"condition_groups\\\":[{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"conditions\\\":[{\\\"target\\\":{\\\"type\\\":\\\"FILE_EXT\\\",\\\"value\\\":\\\"string\\\"},\\\"op\\\":{\\\"type\\\":\\\"RX\\\",\\\"value\\\":\\\"string\\\",\\\"is_regex\\\":true,\\\"values\\\":[\\\"string\\\"],\\\"is_negated\\\":true,\\\"is_case_insensitive\\\":true}}]}],\\\"team_config\\\":true}\"\n\nconn.request(\"POST\", \"/waf/v0.9/%7Borganization_id%7D/limits\", payload)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"get":{"operationId":"get-rate-rules","tags":["Rate Rules (Limits)"],"summary":"Get All Rate Rules","description":"Retrieves a list of rate rules. A rate rule determines the maximum number of requests that will be allowed within a given time period.","parameters":[{"$ref":"#/components/parameters/organization_id"}],"responses":{"200":{"description":"OK. A list of rate rules was retrieved.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ObjShort"}},"examples":{"response":{"value":[{"id":"e3mpHQY5","name":"sample_limit_config"}]}}}}},"404":{"$ref":"#/components/responses/error_404"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/limits'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/limits\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/limits"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/waf/v0.9/%7Borganization_id%7D/limits\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/{organization_id}/limits/{limit_id}":{"servers":[{"url":"https://edgioapis.com/waf/v0.9"}],"security":[{"oAuthCC":["app.app.waf"]}],"parameters":[{"$ref":"#/components/parameters/organization_id"},{"$ref":"#/components/parameters/limit_id"}],"get":{"operationId":"get-rate-rule","tags":["Rate Rules (Limits)"],"summary":"Get Rate Rule","description":"Retrieves a rate rule. A rate rule determines the maximum number of requests that will be allowed within a given time period.","responses":{"200":{"description":"OK. A rate rule was retrieved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Limit"}}}},"404":{"$ref":"#/components/responses/error_404"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/limits/%7Blimit_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/limits/%7Blimit_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/limits/%7Blimit_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/waf/v0.9/%7Borganization_id%7D/limits/%7Blimit_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"put":{"operationId":"update-rate-rule","tags":["Rate Rules (Limits)"],"summary":"Update Rate Rule","description":"Updates a rate rule that determines the maximum number of requests that will be allowed within a given time period.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Limit"}}},"required":true},"responses":{"200":{"description":"OK. A rate rule was updated.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseObj"}}}},"400":{"$ref":"#/components/responses/error_400"},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/limits/%7Blimit_id%7D',\n  body: {\n    version: 0,\n    id: 'string',\n    name: 'string',\n    customer_id: 'string',\n    last_modified_date: 'string',\n    last_modified_by: 'string',\n    disabled: true,\n    duration_sec: 1,\n    num: 0,\n    keys: ['IP'],\n    condition_groups: [\n      {\n        id: 'string',\n        name: 'string',\n        conditions: [\n          {\n            target: {type: 'FILE_EXT', value: 'string'},\n            op: {\n              type: 'RX',\n              value: 'string',\n              is_regex: true,\n              values: ['string'],\n              is_negated: true,\n              is_case_insensitive: true\n            }\n          }\n        ]\n      }\n    ],\n    team_config: true\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"version\": 0,\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"customer_id\": \"string\",\n  \"last_modified_date\": \"string\",\n  \"last_modified_by\": \"string\",\n  \"disabled\": true,\n  \"duration_sec\": 1,\n  \"num\": 0,\n  \"keys\": [\n    \"IP\"\n  ],\n  \"condition_groups\": [\n    {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"conditions\": [\n        {\n          \"target\": {\n            \"type\": \"FILE_EXT\",\n            \"value\": \"string\"\n          },\n          \"op\": {\n            \"type\": \"RX\",\n            \"value\": \"string\",\n            \"is_regex\": true,\n            \"values\": [\n              \"string\"\n            ],\n            \"is_negated\": true,\n            \"is_case_insensitive\": true\n          }\n        }\n      ]\n    }\n  ],\n  \"team_config\": true\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PUT\", \"https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/limits/%7Blimit_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request PUT \\\n  --url https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/limits/%7Blimit_id%7D \\\n  --data '{\"version\":0,\"id\":\"string\",\"name\":\"string\",\"customer_id\":\"string\",\"last_modified_date\":\"string\",\"last_modified_by\":\"string\",\"disabled\":true,\"duration_sec\":1,\"num\":0,\"keys\":[\"IP\"],\"condition_groups\":[{\"id\":\"string\",\"name\":\"string\",\"conditions\":[{\"target\":{\"type\":\"FILE_EXT\",\"value\":\"string\"},\"op\":{\"type\":\"RX\",\"value\":\"string\",\"is_regex\":true,\"values\":[\"string\"],\"is_negated\":true,\"is_case_insensitive\":true}}]}],\"team_config\":true}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"version\\\":0,\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"customer_id\\\":\\\"string\\\",\\\"last_modified_date\\\":\\\"string\\\",\\\"last_modified_by\\\":\\\"string\\\",\\\"disabled\\\":true,\\\"duration_sec\\\":1,\\\"num\\\":0,\\\"keys\\\":[\\\"IP\\\"],\\\"condition_groups\\\":[{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"conditions\\\":[{\\\"target\\\":{\\\"type\\\":\\\"FILE_EXT\\\",\\\"value\\\":\\\"string\\\"},\\\"op\\\":{\\\"type\\\":\\\"RX\\\",\\\"value\\\":\\\"string\\\",\\\"is_regex\\\":true,\\\"values\\\":[\\\"string\\\"],\\\"is_negated\\\":true,\\\"is_case_insensitive\\\":true}}]}],\\\"team_config\\\":true}\"\n\nconn.request(\"PUT\", \"/waf/v0.9/%7Borganization_id%7D/limits/%7Blimit_id%7D\", payload)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"delete":{"operationId":"delete-rate-rule","tags":["Rate Rules (Limits)"],"summary":"Delete Rate Rule","description":"Deletes a rate rule.","responses":{"200":{"description":"OK. A rate rule was deleted."},"400":{"$ref":"#/components/responses/error_400"},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/limits/%7Blimit_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/limits/%7Blimit_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request DELETE \\\n  --url https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/limits/%7Blimit_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"DELETE\", \"/waf/v0.9/%7Borganization_id%7D/limits/%7Blimit_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/{organization_id}/profiles":{"servers":[{"url":"https://edgioapis.com/waf/v0.9"}],"security":[{"oAuthCC":["app.app.waf"]}],"post":{"operationId":"create-managed-rule","tags":["Managed Rules (Profiles)"],"summary":"Add Managed Rule","description":"Creates a managed rule that identifies a ruleset configuration and describes a valid request.","parameters":[{"$ref":"#/components/parameters/organization_id"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Profile"}}},"required":true},"responses":{"200":{"description":"OK. A managed rule was created.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseObj"}}}},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/profiles',\n  body: {\n    version: 'string',\n    id: 'string',\n    name: 'string',\n    customer_id: 'string',\n    last_modified_date: 'string',\n    last_modified_by: 'string',\n    ruleset_id: 'string',\n    ruleset_version: 'string',\n    policies: ['string'],\n    general_settings: {\n      arg_length: 0,\n      arg_name_length: 0,\n      max_num_args: 0,\n      total_arg_length: 0,\n      combined_file_sizes: 0,\n      max_file_size: 0,\n      response_header_name: 'string',\n      validate_utf8_encoding: true,\n      xml_parser: true,\n      process_request_body: true,\n      json_parser: true,\n      paranoia_level: 0,\n      anomaly_threshold: 0,\n      ignore_cookie: ['string'],\n      ignore_header: ['string'],\n      ignore_query_args: ['string']\n    },\n    disabled_rules: [{policy_id: 'string', rule_id: 'string'}],\n    rule_target_updates: [\n      {\n        target: 'string',\n        target_match: 'string',\n        rule_id: 'string',\n        is_regex: true,\n        is_negated: true\n      }\n    ],\n    redacted_variables: [{match_on: 'string', replacement_name: 'string', replacement_value: 'string'}],\n    team_config: true\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"version\": \"string\",\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"customer_id\": \"string\",\n  \"last_modified_date\": \"string\",\n  \"last_modified_by\": \"string\",\n  \"ruleset_id\": \"string\",\n  \"ruleset_version\": \"string\",\n  \"policies\": [\n    \"string\"\n  ],\n  \"general_settings\": {\n    \"arg_length\": 0,\n    \"arg_name_length\": 0,\n    \"max_num_args\": 0,\n    \"total_arg_length\": 0,\n    \"combined_file_sizes\": 0,\n    \"max_file_size\": 0,\n    \"response_header_name\": \"string\",\n    \"validate_utf8_encoding\": true,\n    \"xml_parser\": true,\n    \"process_request_body\": true,\n    \"json_parser\": true,\n    \"paranoia_level\": 0,\n    \"anomaly_threshold\": 0,\n    \"ignore_cookie\": [\n      \"string\"\n    ],\n    \"ignore_header\": [\n      \"string\"\n    ],\n    \"ignore_query_args\": [\n      \"string\"\n    ]\n  },\n  \"disabled_rules\": [\n    {\n      \"policy_id\": \"string\",\n      \"rule_id\": \"string\"\n    }\n  ],\n  \"rule_target_updates\": [\n    {\n      \"target\": \"string\",\n      \"target_match\": \"string\",\n      \"rule_id\": \"string\",\n      \"is_regex\": true,\n      \"is_negated\": true\n    }\n  ],\n  \"redacted_variables\": [\n    {\n      \"match_on\": \"string\",\n      \"replacement_name\": \"string\",\n      \"replacement_value\": \"string\"\n    }\n  ],\n  \"team_config\": true\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/profiles\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/profiles \\\n  --data '{\"version\":\"string\",\"id\":\"string\",\"name\":\"string\",\"customer_id\":\"string\",\"last_modified_date\":\"string\",\"last_modified_by\":\"string\",\"ruleset_id\":\"string\",\"ruleset_version\":\"string\",\"policies\":[\"string\"],\"general_settings\":{\"arg_length\":0,\"arg_name_length\":0,\"max_num_args\":0,\"total_arg_length\":0,\"combined_file_sizes\":0,\"max_file_size\":0,\"response_header_name\":\"string\",\"validate_utf8_encoding\":true,\"xml_parser\":true,\"process_request_body\":true,\"json_parser\":true,\"paranoia_level\":0,\"anomaly_threshold\":0,\"ignore_cookie\":[\"string\"],\"ignore_header\":[\"string\"],\"ignore_query_args\":[\"string\"]},\"disabled_rules\":[{\"policy_id\":\"string\",\"rule_id\":\"string\"}],\"rule_target_updates\":[{\"target\":\"string\",\"target_match\":\"string\",\"rule_id\":\"string\",\"is_regex\":true,\"is_negated\":true}],\"redacted_variables\":[{\"match_on\":\"string\",\"replacement_name\":\"string\",\"replacement_value\":\"string\"}],\"team_config\":true}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"version\\\":\\\"string\\\",\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"customer_id\\\":\\\"string\\\",\\\"last_modified_date\\\":\\\"string\\\",\\\"last_modified_by\\\":\\\"string\\\",\\\"ruleset_id\\\":\\\"string\\\",\\\"ruleset_version\\\":\\\"string\\\",\\\"policies\\\":[\\\"string\\\"],\\\"general_settings\\\":{\\\"arg_length\\\":0,\\\"arg_name_length\\\":0,\\\"max_num_args\\\":0,\\\"total_arg_length\\\":0,\\\"combined_file_sizes\\\":0,\\\"max_file_size\\\":0,\\\"response_header_name\\\":\\\"string\\\",\\\"validate_utf8_encoding\\\":true,\\\"xml_parser\\\":true,\\\"process_request_body\\\":true,\\\"json_parser\\\":true,\\\"paranoia_level\\\":0,\\\"anomaly_threshold\\\":0,\\\"ignore_cookie\\\":[\\\"string\\\"],\\\"ignore_header\\\":[\\\"string\\\"],\\\"ignore_query_args\\\":[\\\"string\\\"]},\\\"disabled_rules\\\":[{\\\"policy_id\\\":\\\"string\\\",\\\"rule_id\\\":\\\"string\\\"}],\\\"rule_target_updates\\\":[{\\\"target\\\":\\\"string\\\",\\\"target_match\\\":\\\"string\\\",\\\"rule_id\\\":\\\"string\\\",\\\"is_regex\\\":true,\\\"is_negated\\\":true}],\\\"redacted_variables\\\":[{\\\"match_on\\\":\\\"string\\\",\\\"replacement_name\\\":\\\"string\\\",\\\"replacement_value\\\":\\\"string\\\"}],\\\"team_config\\\":true}\"\n\nconn.request(\"POST\", \"/waf/v0.9/%7Borganization_id%7D/profiles\", payload)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"get":{"operationId":"get-managed-rules","tags":["Managed Rules (Profiles)"],"summary":"Get All Managed Rules","description":"Retrieves a list of managed rules. A managed rule identifies a ruleset configuration and describes a valid request.","parameters":[{"$ref":"#/components/parameters/organization_id"}],"responses":{"200":{"description":"OK. A list of managed rules was retrieved.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ProfileShort"}},"examples":{"response":{"value":[{"id":"e3mpHQY5","name":"sample_profile_config","created_date":"06/10/2020 05:54:31 PM","ruleset_version":"2019-11-01","ruleset_id":"ECRS"}]}}}}},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/profiles'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/profiles\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/profiles"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/waf/v0.9/%7Borganization_id%7D/profiles\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/{organization_id}/profiles/{profile_id}":{"servers":[{"url":"https://edgioapis.com/waf/v0.9"}],"security":[{"oAuthCC":["app.app.waf"]}],"parameters":[{"$ref":"#/components/parameters/organization_id"},{"$ref":"#/components/parameters/profile_id"}],"get":{"operationId":"get-managed-rule","tags":["Managed Rules (Profiles)"],"summary":"Get Managed Rule","description":"Retrieves a managed rule that identifies a ruleset configuration and describes a valid request.","responses":{"200":{"description":"OK. A managed rule was retrieved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Profile"}}}},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/profiles/%7Bprofile_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/profiles/%7Bprofile_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/profiles/%7Bprofile_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/waf/v0.9/%7Borganization_id%7D/profiles/%7Bprofile_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"put":{"operationId":"update-managed-rule","tags":["Managed Rules (Profiles)"],"summary":"Update Managed Rule","description":"Updates a managed rule that identifies a ruleset configuration and describes a valid request.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Profile"}}},"required":true},"responses":{"200":{"description":"OK. A managed rule was updated.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseObj"}}}},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/profiles/%7Bprofile_id%7D',\n  body: {\n    version: 'string',\n    id: 'string',\n    name: 'string',\n    customer_id: 'string',\n    last_modified_date: 'string',\n    last_modified_by: 'string',\n    ruleset_id: 'string',\n    ruleset_version: 'string',\n    policies: ['string'],\n    general_settings: {\n      arg_length: 0,\n      arg_name_length: 0,\n      max_num_args: 0,\n      total_arg_length: 0,\n      combined_file_sizes: 0,\n      max_file_size: 0,\n      response_header_name: 'string',\n      validate_utf8_encoding: true,\n      xml_parser: true,\n      process_request_body: true,\n      json_parser: true,\n      paranoia_level: 0,\n      anomaly_threshold: 0,\n      ignore_cookie: ['string'],\n      ignore_header: ['string'],\n      ignore_query_args: ['string']\n    },\n    disabled_rules: [{policy_id: 'string', rule_id: 'string'}],\n    rule_target_updates: [\n      {\n        target: 'string',\n        target_match: 'string',\n        rule_id: 'string',\n        is_regex: true,\n        is_negated: true\n      }\n    ],\n    redacted_variables: [{match_on: 'string', replacement_name: 'string', replacement_value: 'string'}],\n    team_config: true\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"version\": \"string\",\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"customer_id\": \"string\",\n  \"last_modified_date\": \"string\",\n  \"last_modified_by\": \"string\",\n  \"ruleset_id\": \"string\",\n  \"ruleset_version\": \"string\",\n  \"policies\": [\n    \"string\"\n  ],\n  \"general_settings\": {\n    \"arg_length\": 0,\n    \"arg_name_length\": 0,\n    \"max_num_args\": 0,\n    \"total_arg_length\": 0,\n    \"combined_file_sizes\": 0,\n    \"max_file_size\": 0,\n    \"response_header_name\": \"string\",\n    \"validate_utf8_encoding\": true,\n    \"xml_parser\": true,\n    \"process_request_body\": true,\n    \"json_parser\": true,\n    \"paranoia_level\": 0,\n    \"anomaly_threshold\": 0,\n    \"ignore_cookie\": [\n      \"string\"\n    ],\n    \"ignore_header\": [\n      \"string\"\n    ],\n    \"ignore_query_args\": [\n      \"string\"\n    ]\n  },\n  \"disabled_rules\": [\n    {\n      \"policy_id\": \"string\",\n      \"rule_id\": \"string\"\n    }\n  ],\n  \"rule_target_updates\": [\n    {\n      \"target\": \"string\",\n      \"target_match\": \"string\",\n      \"rule_id\": \"string\",\n      \"is_regex\": true,\n      \"is_negated\": true\n    }\n  ],\n  \"redacted_variables\": [\n    {\n      \"match_on\": \"string\",\n      \"replacement_name\": \"string\",\n      \"replacement_value\": \"string\"\n    }\n  ],\n  \"team_config\": true\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PUT\", \"https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/profiles/%7Bprofile_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request PUT \\\n  --url https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/profiles/%7Bprofile_id%7D \\\n  --data '{\"version\":\"string\",\"id\":\"string\",\"name\":\"string\",\"customer_id\":\"string\",\"last_modified_date\":\"string\",\"last_modified_by\":\"string\",\"ruleset_id\":\"string\",\"ruleset_version\":\"string\",\"policies\":[\"string\"],\"general_settings\":{\"arg_length\":0,\"arg_name_length\":0,\"max_num_args\":0,\"total_arg_length\":0,\"combined_file_sizes\":0,\"max_file_size\":0,\"response_header_name\":\"string\",\"validate_utf8_encoding\":true,\"xml_parser\":true,\"process_request_body\":true,\"json_parser\":true,\"paranoia_level\":0,\"anomaly_threshold\":0,\"ignore_cookie\":[\"string\"],\"ignore_header\":[\"string\"],\"ignore_query_args\":[\"string\"]},\"disabled_rules\":[{\"policy_id\":\"string\",\"rule_id\":\"string\"}],\"rule_target_updates\":[{\"target\":\"string\",\"target_match\":\"string\",\"rule_id\":\"string\",\"is_regex\":true,\"is_negated\":true}],\"redacted_variables\":[{\"match_on\":\"string\",\"replacement_name\":\"string\",\"replacement_value\":\"string\"}],\"team_config\":true}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"version\\\":\\\"string\\\",\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"customer_id\\\":\\\"string\\\",\\\"last_modified_date\\\":\\\"string\\\",\\\"last_modified_by\\\":\\\"string\\\",\\\"ruleset_id\\\":\\\"string\\\",\\\"ruleset_version\\\":\\\"string\\\",\\\"policies\\\":[\\\"string\\\"],\\\"general_settings\\\":{\\\"arg_length\\\":0,\\\"arg_name_length\\\":0,\\\"max_num_args\\\":0,\\\"total_arg_length\\\":0,\\\"combined_file_sizes\\\":0,\\\"max_file_size\\\":0,\\\"response_header_name\\\":\\\"string\\\",\\\"validate_utf8_encoding\\\":true,\\\"xml_parser\\\":true,\\\"process_request_body\\\":true,\\\"json_parser\\\":true,\\\"paranoia_level\\\":0,\\\"anomaly_threshold\\\":0,\\\"ignore_cookie\\\":[\\\"string\\\"],\\\"ignore_header\\\":[\\\"string\\\"],\\\"ignore_query_args\\\":[\\\"string\\\"]},\\\"disabled_rules\\\":[{\\\"policy_id\\\":\\\"string\\\",\\\"rule_id\\\":\\\"string\\\"}],\\\"rule_target_updates\\\":[{\\\"target\\\":\\\"string\\\",\\\"target_match\\\":\\\"string\\\",\\\"rule_id\\\":\\\"string\\\",\\\"is_regex\\\":true,\\\"is_negated\\\":true}],\\\"redacted_variables\\\":[{\\\"match_on\\\":\\\"string\\\",\\\"replacement_name\\\":\\\"string\\\",\\\"replacement_value\\\":\\\"string\\\"}],\\\"team_config\\\":true}\"\n\nconn.request(\"PUT\", \"/waf/v0.9/%7Borganization_id%7D/profiles/%7Bprofile_id%7D\", payload)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"delete":{"operationId":"delete-managed-rule","tags":["Managed Rules (Profiles)"],"summary":"Delete Managed Rule","description":"Deletes a managed rule.","responses":{"200":{"description":"OK. A managed rule was deleted."},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/profiles/%7Bprofile_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/profiles/%7Bprofile_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request DELETE \\\n  --url https://edgioapis.com/waf/v0.9/%7Borganization_id%7D/profiles/%7Bprofile_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"DELETE\", \"/waf/v0.9/%7Borganization_id%7D/profiles/%7Bprofile_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/rulesets":{"servers":[{"url":"https://edgioapis.com/waf/v0.9"}],"security":[{"oAuthCC":["app.app.waf"]}],"get":{"operationId":"get-rulesets","tags":["Edgio Rulesets"],"summary":"Get Edgio Rulesets","description":"Retrieve a list of available Edgio rulesets. You may assign an Edgio ruleset to a managed rule to determine the set of policies and rules through traffic can be screened.","responses":{"200":{"description":"OK. A list of Edgio rulesets was retrieved.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Ruleset"}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {method: 'GET', url: 'https://edgioapis.com/waf/v0.9/rulesets'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/waf/v0.9/rulesets\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/waf/v0.9/rulesets"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/waf/v0.9/rulesets\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/rulesets/{ruleset_id}":{"servers":[{"url":"https://edgioapis.com/waf/v0.9"}],"security":[{"oAuthCC":["app.app.waf"]}],"get":{"operationId":"get-ruleset-versions","tags":["Edgio Rulesets"],"summary":"Get Edgio Ruleset Versions","description":"Retrieve a list of the available versions for a specific Edgio ruleset. You may assign an Edgio ruleset to a managed rule to determine the set of policies and rules through traffic can be screened.","responses":{"200":{"description":"OK. A list of the available versions for a specific Edgio ruleset was retrieved.","content":{"application/json":{"schema":{"type":"array","items":{"type":"string"}}}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {method: 'GET', url: 'https://edgioapis.com/waf/v0.9/rulesets/%7Bruleset_id%7D'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/waf/v0.9/rulesets/%7Bruleset_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/waf/v0.9/rulesets/%7Bruleset_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/waf/v0.9/rulesets/%7Bruleset_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/{organization_id}/api-gateways":{"servers":[{"url":"https://edgioapis.com/api-security/v0.9"}],"security":[{"oAuthCC":["app.app.api_security"]}],"post":{"operationId":"create-api-gateway-rule","tags":["API Gateways"],"summary":"Add API Security Ruleset","description":"Creates an API Security ruleset.","parameters":[{"$ref":"#/components/parameters/organization_id"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiGateway"}}},"required":true},"responses":{"200":{"description":"OK. An API Security ruleset was created.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseObj"}}}},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-gateways',\n  body: {\n    id: 'string',\n    name: 'string',\n    customer_id: 'string',\n    last_modified_date: 'string',\n    last_modified_by: 'string',\n    team_config: true,\n    rules: [\n      {\n        name: 'string',\n        id: 'string',\n        methods: ['string'],\n        path: {type: 'RX', value: 'string', is_negated: true},\n        schema_id: 'string'\n      }\n    ]\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"customer_id\": \"string\",\n  \"last_modified_date\": \"string\",\n  \"last_modified_by\": \"string\",\n  \"team_config\": true,\n  \"rules\": [\n    {\n      \"name\": \"string\",\n      \"id\": \"string\",\n      \"methods\": [\n        \"string\"\n      ],\n      \"path\": {\n        \"type\": \"RX\",\n        \"value\": \"string\",\n        \"is_negated\": true\n      },\n      \"schema_id\": \"string\"\n    }\n  ]\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-gateways\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-gateways \\\n  --data '{\"id\":\"string\",\"name\":\"string\",\"customer_id\":\"string\",\"last_modified_date\":\"string\",\"last_modified_by\":\"string\",\"team_config\":true,\"rules\":[{\"name\":\"string\",\"id\":\"string\",\"methods\":[\"string\"],\"path\":{\"type\":\"RX\",\"value\":\"string\",\"is_negated\":true},\"schema_id\":\"string\"}]}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"customer_id\\\":\\\"string\\\",\\\"last_modified_date\\\":\\\"string\\\",\\\"last_modified_by\\\":\\\"string\\\",\\\"team_config\\\":true,\\\"rules\\\":[{\\\"name\\\":\\\"string\\\",\\\"id\\\":\\\"string\\\",\\\"methods\\\":[\\\"string\\\"],\\\"path\\\":{\\\"type\\\":\\\"RX\\\",\\\"value\\\":\\\"string\\\",\\\"is_negated\\\":true},\\\"schema_id\\\":\\\"string\\\"}]}\"\n\nconn.request(\"POST\", \"/api-security/v0.9/%7Borganization_id%7D/api-gateways\", payload)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"get":{"operationId":"get-api-gateways","tags":["API Gateways"],"summary":"Get All API Security Rulesets","description":"Retrieves a list of API Security rulesets.","parameters":[{"$ref":"#/components/parameters/organization_id"}],"responses":{"200":{"description":"OK. A list of API Security rulesets was retrieved.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ObjShort"}},"examples":{"response":{"value":[{"id":"e3mpHQY5","name":"sample_apigateway_config"}]}}}}},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-gateways'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-gateways\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-gateways"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/api-security/v0.9/%7Borganization_id%7D/api-gateways\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/{organization_id}/api-gateways/{api_gateway_id}":{"servers":[{"url":"https://edgioapis.com/api-security/v0.9"}],"security":[{"oAuthCC":["app.app.api_security"]}],"parameters":[{"$ref":"#/components/parameters/organization_id"},{"$ref":"#/components/parameters/api_gateway_id"}],"get":{"operationId":"get-api-gateway-rule","tags":["API Gateways"],"summary":"Get API Security Ruleset","description":"Retrieves an API Security ruleset.","responses":{"200":{"description":"OK. An API Security ruleset was retrieved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiGateway"}}}},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-gateways/%7Bapi_gateway_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-gateways/%7Bapi_gateway_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-gateways/%7Bapi_gateway_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/api-security/v0.9/%7Borganization_id%7D/api-gateways/%7Bapi_gateway_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"put":{"operationId":"update-api-gateway-rule","tags":["API Gateways"],"summary":"Update API Security Ruleset","description":"Updates an API Security ruleset.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiGateway"}}},"required":true},"responses":{"200":{"description":"OK. An API Security ruleset was updated.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseObj"}}}},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-gateways/%7Bapi_gateway_id%7D',\n  body: {\n    id: 'string',\n    name: 'string',\n    customer_id: 'string',\n    last_modified_date: 'string',\n    last_modified_by: 'string',\n    team_config: true,\n    rules: [\n      {\n        name: 'string',\n        id: 'string',\n        methods: ['string'],\n        path: {type: 'RX', value: 'string', is_negated: true},\n        schema_id: 'string'\n      }\n    ]\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"customer_id\": \"string\",\n  \"last_modified_date\": \"string\",\n  \"last_modified_by\": \"string\",\n  \"team_config\": true,\n  \"rules\": [\n    {\n      \"name\": \"string\",\n      \"id\": \"string\",\n      \"methods\": [\n        \"string\"\n      ],\n      \"path\": {\n        \"type\": \"RX\",\n        \"value\": \"string\",\n        \"is_negated\": true\n      },\n      \"schema_id\": \"string\"\n    }\n  ]\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PUT\", \"https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-gateways/%7Bapi_gateway_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request PUT \\\n  --url https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-gateways/%7Bapi_gateway_id%7D \\\n  --data '{\"id\":\"string\",\"name\":\"string\",\"customer_id\":\"string\",\"last_modified_date\":\"string\",\"last_modified_by\":\"string\",\"team_config\":true,\"rules\":[{\"name\":\"string\",\"id\":\"string\",\"methods\":[\"string\"],\"path\":{\"type\":\"RX\",\"value\":\"string\",\"is_negated\":true},\"schema_id\":\"string\"}]}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"customer_id\\\":\\\"string\\\",\\\"last_modified_date\\\":\\\"string\\\",\\\"last_modified_by\\\":\\\"string\\\",\\\"team_config\\\":true,\\\"rules\\\":[{\\\"name\\\":\\\"string\\\",\\\"id\\\":\\\"string\\\",\\\"methods\\\":[\\\"string\\\"],\\\"path\\\":{\\\"type\\\":\\\"RX\\\",\\\"value\\\":\\\"string\\\",\\\"is_negated\\\":true},\\\"schema_id\\\":\\\"string\\\"}]}\"\n\nconn.request(\"PUT\", \"/api-security/v0.9/%7Borganization_id%7D/api-gateways/%7Bapi_gateway_id%7D\", payload)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"delete":{"operationId":"delete-api-gateway-rule","tags":["API Gateways"],"summary":"Delete API Security Ruleset","description":"Deletes an API Security ruleset.","responses":{"200":{"description":"OK. An API Security ruleset was deleted.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseObj"}}}},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-gateways/%7Bapi_gateway_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-gateways/%7Bapi_gateway_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request DELETE \\\n  --url https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-gateways/%7Bapi_gateway_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"DELETE\", \"/api-security/v0.9/%7Borganization_id%7D/api-gateways/%7Bapi_gateway_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/{organization_id}/api-gateways/{api_gateway_id}/schemas":{"servers":[{"url":"https://edgioapis.com/api-security/v0.9"}],"security":[{"oAuthCC":["app.app.api_security"]}],"parameters":[{"$ref":"#/components/parameters/organization_id"},{"$ref":"#/components/parameters/api_gateway_id"}],"get":{"operationId":"get-api-gateway-rule-schemas","tags":["API Gateways"],"summary":"Get API Security Ruleset's API Schemas","description":"Retrieves a list of API schemas associated with an API Security ruleset.","responses":{"200":{"description":"OK. A list of API schemas was retrieved.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ApiSchema"}}}}},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-gateways/%7Bapi_gateway_id%7D/schemas'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-gateways/%7Bapi_gateway_id%7D/schemas\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-gateways/%7Bapi_gateway_id%7D/schemas"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/api-security/v0.9/%7Borganization_id%7D/api-gateways/%7Bapi_gateway_id%7D/schemas\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/{organization_id}/api-schemas":{"servers":[{"url":"https://edgioapis.com/api-security/v0.9"}],"security":[{"oAuthCC":["app.app.api_security"]}],"post":{"operationId":"create-api-schema","tags":["API Schemas"],"summary":"Add API Schema","description":"\nCreates an API schema. An API schema contains a JSON schema (draft 4) that may be used to screen API requests. \n\n[View key configuration information.](https://docs.edg.io/guides/security/api_security#api-schema)\n","parameters":[{"$ref":"#/components/parameters/organization_id"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiSchema"}}},"required":true},"responses":{"200":{"description":"OK. An API schema was created.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseObj"}}}},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-schemas',\n  body: {\n    id: 'string',\n    api_gw_id: 'string',\n    customer_id: 'string',\n    last_modified_date: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"id\": \"string\",\n  \"api_gw_id\": \"string\",\n  \"customer_id\": \"string\",\n  \"last_modified_date\": \"string\"\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-schemas\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-schemas \\\n  --data '{\"id\":\"string\",\"api_gw_id\":\"string\",\"customer_id\":\"string\",\"last_modified_date\":\"string\"}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"id\\\":\\\"string\\\",\\\"api_gw_id\\\":\\\"string\\\",\\\"customer_id\\\":\\\"string\\\",\\\"last_modified_date\\\":\\\"string\\\"}\"\n\nconn.request(\"POST\", \"/api-security/v0.9/%7Borganization_id%7D/api-schemas\", payload)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"get":{"operationId":"get-api-schemas","tags":["API Schemas"],"summary":"Get All API Schemas","description":"Retrieves a list of API schemas.","parameters":[{"$ref":"#/components/parameters/organization_id"}],"responses":{"200":{"description":"OK. A list of API schemas was retrieved.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ObjShort"}},"examples":{"response":{"value":[{"id":"e3mpHQY5","name":"sample_api_schema_config"}]}}}}},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-schemas'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-schemas\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-schemas"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/api-security/v0.9/%7Borganization_id%7D/api-schemas\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/{organization_id}/api-schemas/{api_schema_id}":{"servers":[{"url":"https://edgioapis.com/api-security/v0.9"}],"security":[{"oAuthCC":["app.app.api_security"]}],"parameters":[{"$ref":"#/components/parameters/organization_id"},{"$ref":"#/components/parameters/api_schema_id"}],"get":{"operationId":"get-api-schema","tags":["API Schemas"],"summary":"Get API Schema","description":"Retrieves an API schema. An API schema contains a JSON schema (draft 4) that may be used to screen API requests.","responses":{"200":{"description":"OK. An API schema was retrieved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiSchema"}}}},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-schemas/%7Bapi_schema_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-schemas/%7Bapi_schema_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-schemas/%7Bapi_schema_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/api-security/v0.9/%7Borganization_id%7D/api-schemas/%7Bapi_schema_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"put":{"operationId":"update-api-schema","tags":["API Schemas"],"summary":"Update API Schema","description":"\nUpdates an API schema. An API schema contains a JSON schema (draft 4) that may be used to screen API requests. \n\n[View key configuration information.](https://docs.edg.io/guides/security/api_security#api-schema)\n","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiSchema"}}},"required":true},"responses":{"200":{"description":"OK. An API schema was updated.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseObj"}}}},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-schemas/%7Bapi_schema_id%7D',\n  body: {\n    id: 'string',\n    api_gw_id: 'string',\n    customer_id: 'string',\n    last_modified_date: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"id\": \"string\",\n  \"api_gw_id\": \"string\",\n  \"customer_id\": \"string\",\n  \"last_modified_date\": \"string\"\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PUT\", \"https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-schemas/%7Bapi_schema_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request PUT \\\n  --url https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-schemas/%7Bapi_schema_id%7D \\\n  --data '{\"id\":\"string\",\"api_gw_id\":\"string\",\"customer_id\":\"string\",\"last_modified_date\":\"string\"}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"id\\\":\\\"string\\\",\\\"api_gw_id\\\":\\\"string\\\",\\\"customer_id\\\":\\\"string\\\",\\\"last_modified_date\\\":\\\"string\\\"}\"\n\nconn.request(\"PUT\", \"/api-security/v0.9/%7Borganization_id%7D/api-schemas/%7Bapi_schema_id%7D\", payload)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"delete":{"operationId":"delete-api-schema","tags":["API Schemas"],"summary":"Delete API Schema","description":"Deletes an API schema.","responses":{"200":{"description":"OK. An API Schema was deleted.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseObj"}}}},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-schemas/%7Bapi_schema_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-schemas/%7Bapi_schema_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request DELETE \\\n  --url https://edgioapis.com/api-security/v0.9/%7Borganization_id%7D/api-schemas/%7Bapi_schema_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"DELETE\", \"/api-security/v0.9/%7Borganization_id%7D/api-schemas/%7Bapi_schema_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/{organization_id}/bots":{"servers":[{"url":"https://edgioapis.com/bot-security/v0.9"}],"security":[{"oAuthCC":["app.app.bot_security"]}],"post":{"operationId":"create-bot-rule","tags":["Bot Rules"],"summary":"Add Bot Ruleset","description":"Creates a bot ruleset. A bot ruleset defines criteria for bot identification.","parameters":[{"$ref":"#/components/parameters/organization_id"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Bot"}}},"required":true},"responses":{"200":{"description":"OK. A bot ruleset was created.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseObj"}}}},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bots',\n  body: {\n    id: 'string',\n    directive: [{include: 'r3010_ec_bot_challenge_reputation.conf.json'}],\n    customer_id: 'string',\n    last_modified_date: 'string',\n    name: 'string',\n    team_config: true\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"id\": \"string\",\n  \"directive\": [\n    {\n      \"include\": \"r3010_ec_bot_challenge_reputation.conf.json\"\n    }\n  ],\n  \"customer_id\": \"string\",\n  \"last_modified_date\": \"string\",\n  \"name\": \"string\",\n  \"team_config\": true\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bots\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bots \\\n  --data '{\"id\":\"string\",\"directive\":[{\"include\":\"r3010_ec_bot_challenge_reputation.conf.json\"}],\"customer_id\":\"string\",\"last_modified_date\":\"string\",\"name\":\"string\",\"team_config\":true}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"id\\\":\\\"string\\\",\\\"directive\\\":[{\\\"include\\\":\\\"r3010_ec_bot_challenge_reputation.conf.json\\\"}],\\\"customer_id\\\":\\\"string\\\",\\\"last_modified_date\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"team_config\\\":true}\"\n\nconn.request(\"POST\", \"/bot-security/v0.9/%7Borganization_id%7D/bots\", payload)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"get":{"operationId":"get-bot-rules","tags":["Bot Rules"],"summary":"Get All Bot Rulesets","description":"Lists all bot rulesets.","parameters":[{"$ref":"#/components/parameters/organization_id"}],"responses":{"200":{"description":"OK. A list of bot rulesets was retrieved.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ObjShort"}},"examples":{"response":{"value":[{"id":"e3mpHQY5","name":"sample_bot_config"}]}}}}},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bots'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bots\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bots"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/bot-security/v0.9/%7Borganization_id%7D/bots\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/{organization_id}/bots/{bot_id}":{"servers":[{"url":"https://edgioapis.com/bot-security/v0.9"}],"security":[{"oAuthCC":["app.app.bot_security"]}],"parameters":[{"$ref":"#/components/parameters/organization_id"},{"$ref":"#/components/parameters/bot_id"}],"get":{"operationId":"get-bot-rule","tags":["Bot Rules"],"summary":"Get Bot Ruleset","description":"Retrieves a bot ruleset. A bot ruleset defines criteria for bot identification.","responses":{"200":{"description":"OK. A bot ruleset was retrieved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Bot"}}}},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bots/%7Bbot_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bots/%7Bbot_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bots/%7Bbot_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/bot-security/v0.9/%7Borganization_id%7D/bots/%7Bbot_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"put":{"operationId":"update-bot-rule","tags":["Bot Rules"],"summary":"Update Bot Ruleset","description":"Updates a bot ruleset. A bot ruleset defines criteria for bot identification.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Bot"}}},"required":true},"responses":{"200":{"description":"OK. A bot ruleset was updated.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseObj"}}}},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bots/%7Bbot_id%7D',\n  body: {\n    id: 'string',\n    directive: [{include: 'r3010_ec_bot_challenge_reputation.conf.json'}],\n    customer_id: 'string',\n    last_modified_date: 'string',\n    name: 'string',\n    team_config: true\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"id\": \"string\",\n  \"directive\": [\n    {\n      \"include\": \"r3010_ec_bot_challenge_reputation.conf.json\"\n    }\n  ],\n  \"customer_id\": \"string\",\n  \"last_modified_date\": \"string\",\n  \"name\": \"string\",\n  \"team_config\": true\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PUT\", \"https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bots/%7Bbot_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request PUT \\\n  --url https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bots/%7Bbot_id%7D \\\n  --data '{\"id\":\"string\",\"directive\":[{\"include\":\"r3010_ec_bot_challenge_reputation.conf.json\"}],\"customer_id\":\"string\",\"last_modified_date\":\"string\",\"name\":\"string\",\"team_config\":true}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"id\\\":\\\"string\\\",\\\"directive\\\":[{\\\"include\\\":\\\"r3010_ec_bot_challenge_reputation.conf.json\\\"}],\\\"customer_id\\\":\\\"string\\\",\\\"last_modified_date\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"team_config\\\":true}\"\n\nconn.request(\"PUT\", \"/bot-security/v0.9/%7Borganization_id%7D/bots/%7Bbot_id%7D\", payload)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"delete":{"operationId":"delete-bot-rule","tags":["Bot Rules"],"summary":"Delete Bot Ruleset","description":"Deletes a bot ruleset. A bot ruleset defines criteria for bot identification.","responses":{"200":{"description":"OK. A bot ruleset was deleted."},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bots/%7Bbot_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bots/%7Bbot_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request DELETE \\\n  --url https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bots/%7Bbot_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"DELETE\", \"/bot-security/v0.9/%7Borganization_id%7D/bots/%7Bbot_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/{organization_id}/bot-managers":{"servers":[{"url":"https://edgioapis.com/bot-security/v0.9"}],"security":[{"oAuthCC":["app.app.bot_security"]}],"post":{"operationId":"create-bot-manager","tags":["Bot Managers"],"summary":"Create Bot Manager Configuration","description":"Creates a bot manager configuration.","parameters":[{"$ref":"#/components/parameters/organization_id"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BotManager"}}},"required":true},"responses":{"200":{"description":"OK. A bot manager configuration was created.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseObj"}}}},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bot-managers',\n  body: {\n    actions: {\n      ALERT: {id: 'string', name: 'string', enf_type: 'ALERT'},\n      CUSTOM_RESPONSE: {\n        id: 'string',\n        name: 'string',\n        enf_type: 'CUSTOM_RESPONSE',\n        response_body_base64: 'string',\n        status: 0,\n        response_headers: {property1: 'string', property2: 'string'}\n      },\n      BLOCK_REQUEST: {id: 'string', name: 'string', enf_type: 'BLOCK_REQUEST'},\n      REDIRECT_302: {id: 'string', name: 'string', enf_type: 'REDIRECT_302', url: 'string'},\n      BROWSER_CHALLENGE: {\n        id: 'string',\n        name: 'string',\n        enf_type: 'BROWSER_CHALLENGE',\n        is_custom_challenge: true,\n        response_body_base64: 'string',\n        valid_for_sec: 0,\n        status: 0\n      },\n      RECAPTCHA: {\n        id: 'string',\n        name: 'string',\n        enf_type: 'RECAPTCHA',\n        valid_for_sec: 0,\n        status: 0,\n        failed_action_type: 'ALERT'\n      }\n    },\n    bots_prod_id: 'string',\n    exception_cookie: ['string'],\n    exception_ja3: ['string'],\n    exception_url: ['string'],\n    exception_user_agent: ['string'],\n    inspect_known_bots: true,\n    known_bots: [{action_type: 'ALERT', bot_token: 'string'}],\n    customer_id: 'string',\n    last_modified_date: 'string',\n    last_modified_by: 'string',\n    name: 'string',\n    spoof_bot_action_type: 'ALERT',\n    team_config: true\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"actions\": {\n    \"ALERT\": {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"enf_type\": \"ALERT\"\n    },\n    \"CUSTOM_RESPONSE\": {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"enf_type\": \"CUSTOM_RESPONSE\",\n      \"response_body_base64\": \"string\",\n      \"status\": 0,\n      \"response_headers\": {\n        \"property1\": \"string\",\n        \"property2\": \"string\"\n      }\n    },\n    \"BLOCK_REQUEST\": {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"enf_type\": \"BLOCK_REQUEST\"\n    },\n    \"REDIRECT_302\": {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"enf_type\": \"REDIRECT_302\",\n      \"url\": \"string\"\n    },\n    \"BROWSER_CHALLENGE\": {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"enf_type\": \"BROWSER_CHALLENGE\",\n      \"is_custom_challenge\": true,\n      \"response_body_base64\": \"string\",\n      \"valid_for_sec\": 0,\n      \"status\": 0\n    },\n    \"RECAPTCHA\": {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"enf_type\": \"RECAPTCHA\",\n      \"valid_for_sec\": 0,\n      \"status\": 0,\n      \"failed_action_type\": \"ALERT\"\n    }\n  },\n  \"bots_prod_id\": \"string\",\n  \"exception_cookie\": [\n    \"string\"\n  ],\n  \"exception_ja3\": [\n    \"string\"\n  ],\n  \"exception_url\": [\n    \"string\"\n  ],\n  \"exception_user_agent\": [\n    \"string\"\n  ],\n  \"inspect_known_bots\": true,\n  \"known_bots\": [\n    {\n      \"action_type\": \"ALERT\",\n      \"bot_token\": \"string\"\n    }\n  ],\n  \"customer_id\": \"string\",\n  \"last_modified_date\": \"string\",\n  \"last_modified_by\": \"string\",\n  \"name\": \"string\",\n  \"spoof_bot_action_type\": \"ALERT\",\n  \"team_config\": true\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bot-managers\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request POST \\\n  --url https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bot-managers \\\n  --data '{\"actions\":{\"ALERT\":{\"id\":\"string\",\"name\":\"string\",\"enf_type\":\"ALERT\"},\"CUSTOM_RESPONSE\":{\"id\":\"string\",\"name\":\"string\",\"enf_type\":\"CUSTOM_RESPONSE\",\"response_body_base64\":\"string\",\"status\":0,\"response_headers\":{\"property1\":\"string\",\"property2\":\"string\"}},\"BLOCK_REQUEST\":{\"id\":\"string\",\"name\":\"string\",\"enf_type\":\"BLOCK_REQUEST\"},\"REDIRECT_302\":{\"id\":\"string\",\"name\":\"string\",\"enf_type\":\"REDIRECT_302\",\"url\":\"string\"},\"BROWSER_CHALLENGE\":{\"id\":\"string\",\"name\":\"string\",\"enf_type\":\"BROWSER_CHALLENGE\",\"is_custom_challenge\":true,\"response_body_base64\":\"string\",\"valid_for_sec\":0,\"status\":0},\"RECAPTCHA\":{\"id\":\"string\",\"name\":\"string\",\"enf_type\":\"RECAPTCHA\",\"valid_for_sec\":0,\"status\":0,\"failed_action_type\":\"ALERT\"}},\"bots_prod_id\":\"string\",\"exception_cookie\":[\"string\"],\"exception_ja3\":[\"string\"],\"exception_url\":[\"string\"],\"exception_user_agent\":[\"string\"],\"inspect_known_bots\":true,\"known_bots\":[{\"action_type\":\"ALERT\",\"bot_token\":\"string\"}],\"customer_id\":\"string\",\"last_modified_date\":\"string\",\"last_modified_by\":\"string\",\"name\":\"string\",\"spoof_bot_action_type\":\"ALERT\",\"team_config\":true}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"actions\\\":{\\\"ALERT\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"enf_type\\\":\\\"ALERT\\\"},\\\"CUSTOM_RESPONSE\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"enf_type\\\":\\\"CUSTOM_RESPONSE\\\",\\\"response_body_base64\\\":\\\"string\\\",\\\"status\\\":0,\\\"response_headers\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"}},\\\"BLOCK_REQUEST\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"enf_type\\\":\\\"BLOCK_REQUEST\\\"},\\\"REDIRECT_302\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"enf_type\\\":\\\"REDIRECT_302\\\",\\\"url\\\":\\\"string\\\"},\\\"BROWSER_CHALLENGE\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"enf_type\\\":\\\"BROWSER_CHALLENGE\\\",\\\"is_custom_challenge\\\":true,\\\"response_body_base64\\\":\\\"string\\\",\\\"valid_for_sec\\\":0,\\\"status\\\":0},\\\"RECAPTCHA\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"enf_type\\\":\\\"RECAPTCHA\\\",\\\"valid_for_sec\\\":0,\\\"status\\\":0,\\\"failed_action_type\\\":\\\"ALERT\\\"}},\\\"bots_prod_id\\\":\\\"string\\\",\\\"exception_cookie\\\":[\\\"string\\\"],\\\"exception_ja3\\\":[\\\"string\\\"],\\\"exception_url\\\":[\\\"string\\\"],\\\"exception_user_agent\\\":[\\\"string\\\"],\\\"inspect_known_bots\\\":true,\\\"known_bots\\\":[{\\\"action_type\\\":\\\"ALERT\\\",\\\"bot_token\\\":\\\"string\\\"}],\\\"customer_id\\\":\\\"string\\\",\\\"last_modified_date\\\":\\\"string\\\",\\\"last_modified_by\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"spoof_bot_action_type\\\":\\\"ALERT\\\",\\\"team_config\\\":true}\"\n\nconn.request(\"POST\", \"/bot-security/v0.9/%7Borganization_id%7D/bot-managers\", payload)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"get":{"operationId":"get-bot-managers","tags":["Bot Managers"],"summary":"Get All Bot Manager Configurations","description":"Retrieves a list of bot manager configurations. A bot manager configuration can detect and mitigate undesired bot traffic.","parameters":[{"$ref":"#/components/parameters/organization_id"}],"responses":{"200":{"description":"OK. A list of bot manager configurations was retrieved.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ObjShort"}},"examples":{"response":{"value":[{"id":"e3mpHQY5","name":"sample_bot_manager_config"}]}}}}},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bot-managers'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bot-managers\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bot-managers"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/bot-security/v0.9/%7Borganization_id%7D/bot-managers\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/{organization_id}/bot-managers/{bot_manager_id}":{"servers":[{"url":"https://edgioapis.com/bot-security/v0.9"}],"security":[{"oAuthCC":["app.app.bot_security"]}],"parameters":[{"$ref":"#/components/parameters/organization_id"},{"$ref":"#/components/parameters/bot_manager_id"}],"get":{"operationId":"get-bot-manager","tags":["Bot Managers"],"summary":"Get Bot Manager Configuration","description":"Retrieves a bot manager configuration.","responses":{"200":{"description":"OK. A bot manager configuration was retrieved.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BotManager"}}}},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bot-managers/%7Bbot_manager_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bot-managers/%7Bbot_manager_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bot-managers/%7Bbot_manager_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/bot-security/v0.9/%7Borganization_id%7D/bot-managers/%7Bbot_manager_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"put":{"operationId":"update-bot-manager","tags":["Bot Managers"],"summary":"Update Bot Manager Configuration","description":"Updates a bot manager configuration.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BotManager"}}},"required":true},"responses":{"200":{"description":"OK. A bot manager configuration was updated.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseObj"}}}},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bot-managers/%7Bbot_manager_id%7D',\n  body: {\n    actions: {\n      ALERT: {id: 'string', name: 'string', enf_type: 'ALERT'},\n      CUSTOM_RESPONSE: {\n        id: 'string',\n        name: 'string',\n        enf_type: 'CUSTOM_RESPONSE',\n        response_body_base64: 'string',\n        status: 0,\n        response_headers: {property1: 'string', property2: 'string'}\n      },\n      BLOCK_REQUEST: {id: 'string', name: 'string', enf_type: 'BLOCK_REQUEST'},\n      REDIRECT_302: {id: 'string', name: 'string', enf_type: 'REDIRECT_302', url: 'string'},\n      BROWSER_CHALLENGE: {\n        id: 'string',\n        name: 'string',\n        enf_type: 'BROWSER_CHALLENGE',\n        is_custom_challenge: true,\n        response_body_base64: 'string',\n        valid_for_sec: 0,\n        status: 0\n      },\n      RECAPTCHA: {\n        id: 'string',\n        name: 'string',\n        enf_type: 'RECAPTCHA',\n        valid_for_sec: 0,\n        status: 0,\n        failed_action_type: 'ALERT'\n      }\n    },\n    bots_prod_id: 'string',\n    exception_cookie: ['string'],\n    exception_ja3: ['string'],\n    exception_url: ['string'],\n    exception_user_agent: ['string'],\n    inspect_known_bots: true,\n    known_bots: [{action_type: 'ALERT', bot_token: 'string'}],\n    customer_id: 'string',\n    last_modified_date: 'string',\n    last_modified_by: 'string',\n    name: 'string',\n    spoof_bot_action_type: 'ALERT',\n    team_config: true\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = JSON.stringify({\n  \"actions\": {\n    \"ALERT\": {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"enf_type\": \"ALERT\"\n    },\n    \"CUSTOM_RESPONSE\": {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"enf_type\": \"CUSTOM_RESPONSE\",\n      \"response_body_base64\": \"string\",\n      \"status\": 0,\n      \"response_headers\": {\n        \"property1\": \"string\",\n        \"property2\": \"string\"\n      }\n    },\n    \"BLOCK_REQUEST\": {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"enf_type\": \"BLOCK_REQUEST\"\n    },\n    \"REDIRECT_302\": {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"enf_type\": \"REDIRECT_302\",\n      \"url\": \"string\"\n    },\n    \"BROWSER_CHALLENGE\": {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"enf_type\": \"BROWSER_CHALLENGE\",\n      \"is_custom_challenge\": true,\n      \"response_body_base64\": \"string\",\n      \"valid_for_sec\": 0,\n      \"status\": 0\n    },\n    \"RECAPTCHA\": {\n      \"id\": \"string\",\n      \"name\": \"string\",\n      \"enf_type\": \"RECAPTCHA\",\n      \"valid_for_sec\": 0,\n      \"status\": 0,\n      \"failed_action_type\": \"ALERT\"\n    }\n  },\n  \"bots_prod_id\": \"string\",\n  \"exception_cookie\": [\n    \"string\"\n  ],\n  \"exception_ja3\": [\n    \"string\"\n  ],\n  \"exception_url\": [\n    \"string\"\n  ],\n  \"exception_user_agent\": [\n    \"string\"\n  ],\n  \"inspect_known_bots\": true,\n  \"known_bots\": [\n    {\n      \"action_type\": \"ALERT\",\n      \"bot_token\": \"string\"\n    }\n  ],\n  \"customer_id\": \"string\",\n  \"last_modified_date\": \"string\",\n  \"last_modified_by\": \"string\",\n  \"name\": \"string\",\n  \"spoof_bot_action_type\": \"ALERT\",\n  \"team_config\": true\n});\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"PUT\", \"https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bot-managers/%7Bbot_manager_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request PUT \\\n  --url https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bot-managers/%7Bbot_manager_id%7D \\\n  --data '{\"actions\":{\"ALERT\":{\"id\":\"string\",\"name\":\"string\",\"enf_type\":\"ALERT\"},\"CUSTOM_RESPONSE\":{\"id\":\"string\",\"name\":\"string\",\"enf_type\":\"CUSTOM_RESPONSE\",\"response_body_base64\":\"string\",\"status\":0,\"response_headers\":{\"property1\":\"string\",\"property2\":\"string\"}},\"BLOCK_REQUEST\":{\"id\":\"string\",\"name\":\"string\",\"enf_type\":\"BLOCK_REQUEST\"},\"REDIRECT_302\":{\"id\":\"string\",\"name\":\"string\",\"enf_type\":\"REDIRECT_302\",\"url\":\"string\"},\"BROWSER_CHALLENGE\":{\"id\":\"string\",\"name\":\"string\",\"enf_type\":\"BROWSER_CHALLENGE\",\"is_custom_challenge\":true,\"response_body_base64\":\"string\",\"valid_for_sec\":0,\"status\":0},\"RECAPTCHA\":{\"id\":\"string\",\"name\":\"string\",\"enf_type\":\"RECAPTCHA\",\"valid_for_sec\":0,\"status\":0,\"failed_action_type\":\"ALERT\"}},\"bots_prod_id\":\"string\",\"exception_cookie\":[\"string\"],\"exception_ja3\":[\"string\"],\"exception_url\":[\"string\"],\"exception_user_agent\":[\"string\"],\"inspect_known_bots\":true,\"known_bots\":[{\"action_type\":\"ALERT\",\"bot_token\":\"string\"}],\"customer_id\":\"string\",\"last_modified_date\":\"string\",\"last_modified_by\":\"string\",\"name\":\"string\",\"spoof_bot_action_type\":\"ALERT\",\"team_config\":true}'"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\npayload = \"{\\\"actions\\\":{\\\"ALERT\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"enf_type\\\":\\\"ALERT\\\"},\\\"CUSTOM_RESPONSE\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"enf_type\\\":\\\"CUSTOM_RESPONSE\\\",\\\"response_body_base64\\\":\\\"string\\\",\\\"status\\\":0,\\\"response_headers\\\":{\\\"property1\\\":\\\"string\\\",\\\"property2\\\":\\\"string\\\"}},\\\"BLOCK_REQUEST\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"enf_type\\\":\\\"BLOCK_REQUEST\\\"},\\\"REDIRECT_302\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"enf_type\\\":\\\"REDIRECT_302\\\",\\\"url\\\":\\\"string\\\"},\\\"BROWSER_CHALLENGE\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"enf_type\\\":\\\"BROWSER_CHALLENGE\\\",\\\"is_custom_challenge\\\":true,\\\"response_body_base64\\\":\\\"string\\\",\\\"valid_for_sec\\\":0,\\\"status\\\":0},\\\"RECAPTCHA\\\":{\\\"id\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"enf_type\\\":\\\"RECAPTCHA\\\",\\\"valid_for_sec\\\":0,\\\"status\\\":0,\\\"failed_action_type\\\":\\\"ALERT\\\"}},\\\"bots_prod_id\\\":\\\"string\\\",\\\"exception_cookie\\\":[\\\"string\\\"],\\\"exception_ja3\\\":[\\\"string\\\"],\\\"exception_url\\\":[\\\"string\\\"],\\\"exception_user_agent\\\":[\\\"string\\\"],\\\"inspect_known_bots\\\":true,\\\"known_bots\\\":[{\\\"action_type\\\":\\\"ALERT\\\",\\\"bot_token\\\":\\\"string\\\"}],\\\"customer_id\\\":\\\"string\\\",\\\"last_modified_date\\\":\\\"string\\\",\\\"last_modified_by\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"spoof_bot_action_type\\\":\\\"ALERT\\\",\\\"team_config\\\":true}\"\n\nconn.request(\"PUT\", \"/bot-security/v0.9/%7Borganization_id%7D/bot-managers/%7Bbot_manager_id%7D\", payload)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]},"delete":{"operationId":"delete-bot-manager","tags":["Bot Managers"],"summary":"Delete Bot Manager Configuration","description":"Deletes a bot manager configuration.","responses":{"200":{"description":"OK. A bot manager configuration was deleted."},"404":{"$ref":"#/components/responses/error_404"},"429":{"$ref":"#/components/responses/error_429"},"500":{"$ref":"#/components/responses/error_500"}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bot-managers/%7Bbot_manager_id%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"DELETE\", \"https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bot-managers/%7Bbot_manager_id%7D\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request DELETE \\\n  --url https://edgioapis.com/bot-security/v0.9/%7Borganization_id%7D/bot-managers/%7Bbot_manager_id%7D"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"DELETE\", \"/bot-security/v0.9/%7Borganization_id%7D/bot-managers/%7Bbot_manager_id%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}},"/known-bots/companies":{"servers":[{"url":"https://edgioapis.com/bot-security/v0.9"}],"security":[{"oAuthCC":{}}],"get":{"operationId":"get-known-companies","tags":["Known Bots"],"summary":"Get Available Known Bots","description":"Retrieves a list of all known bots. Each known bot is identified by a token (e.g., `google` and `yahoo`).","responses":{"200":{"description":"OK. A list of known bots was retrieved.","content":{"application/json":{"schema":{"type":"array","description":"Contains a list of known bots.","items":{"type":"string"}},"example":["ahrefs","apple","aspiegel","baidu","datadog","line","msn","neeva","pingdom","semrush","uptimerobot","yahoo","yandex","google","facebook","twitter","other"]}}}},"x-codeSamples":[{"lang":"Node + Request","source":"const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://edgioapis.com/bot-security/v0.9/known-bots/companies'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"},{"lang":"Javascript + Xhr","source":"const data = null;\n\nconst xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"https://edgioapis.com/bot-security/v0.9/known-bots/companies\");\n\nxhr.send(data);"},{"lang":"Shell + Curl","source":"curl --request GET \\\n  --url https://edgioapis.com/bot-security/v0.9/known-bots/companies"},{"lang":"Python + Python3","source":"import http.client\n\nconn = http.client.HTTPSConnection(\"edgioapis.com\")\n\nconn.request(\"GET\", \"/bot-security/v0.9/known-bots/companies\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"}]}}},"components":{"securitySchemes":{"oAuthCC":{"type":"oauth2","description":"This API uses OAuth 2 with the client credentials grant flow. [Learn more.](#section/Access-Tokens)","flows":{"clientCredentials":{"tokenUrl":"https://id.edgio.app/connect/token","scopes":{"app.cache":"Authorizes full access for purging cached content and retrieve purge status information.","app.config":"Authorizes full access for deploying CDN configurations, retrieving deployment information and log data, and managing environment variables.","app.accounts":"Authorizes full access to manage organizations, properties, and environments.","app.waf":"Authorizes full access to security apps, access rules, rate rules, custom rules, and managed rules.","app.bot_security":"Authorizes full access to Bot Manager.","app.api_security":"Authorizes full access to API Security."}}}}},"schemas":{"Config_V1_Entities_TlsCert":{"required":["@id","@type","id"],"type":"object","properties":{"@type":{"type":"string","description":"Resource type."},"@id":{"type":"string","description":"Used to specify the URI for the resource. Can be used by clients to navigate back to that specific resource."},"@links":{"type":"object","properties":{},"description":"Links to related resources."},"id":{"type":"string","description":"Resource unique identifier."},"environment_id":{"type":"string","description":"Environment ID"},"primary_cert":{"type":"string","description":"Primary certificate. Not returned for records in collection."},"intermediate_cert":{"type":"string","description":"Intermediate certificate. Not returned for records in collection"},"expiration":{"type":"string","description":"Expiration date","format":"date-time"},"status":{"type":"string","description":"Status"},"generated":{"type":"boolean","description":"Generated"},"serial":{"type":"string","description":"Serial"},"common_name":{"type":"string","description":"Common name"},"alternative_names":{"type":"array","description":"Alternative names","items":{"type":"string"}},"activation_error":{"type":"string","description":"Activation error"},"created_at":{"type":"string","description":"Created at","format":"date-time"},"updated_at":{"type":"string","description":"Updated at","format":"date-time"}},"description":"Config_V1_Entities_TlsCert model"},"BaseApi_Entities_UserErrorData":{"type":"object","properties":{"path":{"type":"string"},"message":{"type":"string"}}},"BaseApi_Entities_UserError":{"type":"object","properties":{"message":{"type":"string","description":"Error Message"},"details":{"type":"array","items":{"$ref":"#/components/schemas/BaseApi_Entities_UserErrorData"}}},"description":"BaseApi_Entities_UserError model"},"BaseApi_Entities_GeneralError":{"type":"object","properties":{"message":{"type":"string","description":"Error Message"}},"description":"BaseApi_Entities_GeneralError model"},"BaseApi_Entities_HyperionLink":{"type":"object","properties":{"href":{"type":"string"},"description":{"type":"string"},"base_path":{"type":"string"}}},"BaseApi_Entities_HyperionNavigationLinks":{"type":"object","properties":{"first":{"$ref":"#/components/schemas/BaseApi_Entities_HyperionLink"},"next":{"$ref":"#/components/schemas/BaseApi_Entities_HyperionLink"},"previous":{"$ref":"#/components/schemas/BaseApi_Entities_HyperionLink"},"last":{"$ref":"#/components/schemas/BaseApi_Entities_HyperionLink"}}},"Config_V1_Entities_TlsCert_Collection":{"required":["@id","@type"],"type":"object","properties":{"@type":{"type":"string","description":"Resource type."},"@id":{"type":"string","description":"Used to specify the URI for the resource. Can be used by clients to navigate back to that specific resource."},"@links":{"$ref":"#/components/schemas/BaseApi_Entities_HyperionNavigationLinks"},"total_items":{"type":"integer","description":"Total number of items.","format":"int32"},"items":{"type":"array","description":"Array of items.","items":{"$ref":"#/components/schemas/Config_V1_Entities_TlsCert"}}},"description":"Config_V1_Entities_TlsCert_Collection model"},"postConfigV01TlsCerts":{"required":["environment_id","intermediate_cert","primary_cert"],"type":"object","properties":{"environment_id":{"type":"string"},"primary_cert":{"type":"string"},"intermediate_cert":{"type":"string"},"private_key":{"type":"string"}},"description":"Upload and activate a new TLS certificate for an environment"},"Config_V1_Entities_Deployment_LogLine":{"type":"object","properties":{"message":{"type":"string","description":"Log message"},"level":{"type":"string","description":"Log level"},"timestamp":{"type":"string","description":"Log timestamp","format":"date-time"}}},"Config_V1_Entities_Deployment_Logs":{"required":["@id","@type"],"type":"object","properties":{"@type":{"type":"string","description":"Resource type."},"@id":{"type":"string","description":"Used to specify the URI for the resource. Can be used by clients to navigate back to that specific resource."},"@links":{"type":"object","properties":{},"description":"Links to related resources."},"logs":{"type":"array","description":"Array of logs","items":{"$ref":"#/components/schemas/Config_V1_Entities_Deployment_LogLine"}}},"description":"Config_V1_Entities_Deployment_Logs model"},"Config_V1_Entities_Deployment":{"required":["@id","@type","id"],"type":"object","properties":{"@type":{"type":"string","description":"Resource type."},"@id":{"type":"string","description":"Used to specify the URI for the resource. Can be used by clients to navigate back to that specific resource."},"@links":{"type":"object","properties":{},"description":"Links to related resources."},"id":{"type":"string","description":"Resource unique identifier."},"status":{"type":"string","description":"Indicates the status for the deployment.\nValid values are:\n  - `created`: Initial state.\n  - `uploading`: Waiting for CLI to upload the build. Only applicable for EdgeJS deployments.\n  - `provisioning`: Waiting for the CDN to provision the environment.\n  - `deploying`: Deploying the build to cloud & edge.\n  - `waiting`: Waiting for the edge propagation to complete.\n  - `completed`: Indicates that the deployment has been completed.\n  - `canceled`: Indicates that the deployment has been canceled.\n  - `failed`: Indicates that the deployment has failed.\n"},"created_at":{"type":"string","description":"Indicates the date and time (UTC) at which the deployment was submitted.","format":"date-time"},"completed_at":{"type":"string","description":"Indicates the date and time (UTC) at which the deployment was completed.","format":"date-time"}},"description":"Config_V1_Entities_Deployment model"},"Config_V1_Entities_Config":{"required":["@id","@type","id"],"type":"object","properties":{"@type":{"type":"string","description":"Resource type."},"@id":{"type":"string","description":"Used to specify the URI for the resource. Can be used by clients to navigate back to that specific resource."},"@links":{"type":"object","properties":{},"description":"Links to related resources."},"id":{"type":"string","description":"Resource unique identifier."},"origins":{"type":"string","description":"List of origins for the configuration.","example":""},"hostnames":{"type":"string","description":"List of hostnames for the configuration.","example":""},"rules":{"type":"string","description":"List of rules for the configuration.","example":""},"experiments":{"type":"string","description":"List of experiments for the configuration.","example":""}},"description":"Config_V1_Entities_Config model"},"postConfigV01Configs":{"required":["environment_id","hostnames","origins"],"type":"object","properties":{"environment_id":{"type":"string"},"origins":{"type":"array","description":"List of origins for the configuration.","example":[{"name":"Edgio","hosts":[{"location":[{"hostname":"https://test-origin.edgio.net"}]}]}],"items":{"type":"string"}},"hostnames":{"type":"array","description":"List of hostnames for the configuration.","example":[{"hostname":"test-origin.edgio.net"}],"items":{"type":"string"}},"rules":{"type":"array","description":"List of rules for the configuration.","example":[{"if":[{"==":[{"request":"path"},"/api/:path"]},{"caching":{"bypass_cache":true}}]}],"items":{"type":"string"}},"experiments":{"type":"array","description":"List of experiments for the configuration.","example":[{}],"items":{"type":"string"}}},"description":"Replace and deploy a complete edge configuration for the given environment"},"Cache_V1_Entities_PurgeRequest":{"required":["@id","@type","id"],"type":"object","properties":{"@type":{"type":"string","description":"Resource type."},"@id":{"type":"string","description":"Used to specify the URI for the resource. Can be used by clients to navigate back to that specific resource."},"@links":{"type":"object","properties":{},"description":"Links to related resources."},"id":{"type":"string","description":"Identifies a purge request by its unique ID and allows further tracking"},"status":{"type":"string","description":"Indicates the status for the purge requests defined in the bulk purge request.\nValid values are:\n  - `in_progress`: Indicates that the purge request has not yet been completed.\n  - `done`: Indicates that the purge request has been completed.\n"},"created_at":{"type":"string","description":"Indicates the date and time (UTC) at which the purge request was submitted.","format":"date-time"},"completed_at":{"type":"string","description":"Indicates the date and time (UTC) at which the purge request was completed.","format":"date-time"},"progress_percentage":{"type":"number","description":"Identifies the percentage of purge request completion.","format":"float"}},"description":"Cache_V1_Entities_PurgeRequest model"},"postCacheV01PurgeRequests":{"required":["environment_id","purge_type"],"type":"object","properties":{"environment_id":{"type":"string","description":"The ID of the environment you wish to purge cache for, also known as environment tenant ID."},"purge_type":{"type":"string","description":"- `all_entries`: Purges all cache\n- `path`: Purges paths from cache further specified via `values`\n- `surrogate_key`: Purges surrogate keys specified via `values`\n","enum":["all_entries","path","surrogate_key"]},"values":{"type":"array","description":"Depending on `purge_type` this parameter is used to specify further options:\n  - Leave empty if `purge_type` is `all_entries`.\n  - If `purge_type` is `path`, `values` specifies all the paths subject to purging.\n  - If `purge_type` is `surrogate_key`, `values` specifies all the surrogate keys subject to purging.\n","items":{"type":"string"}}},"description":"Request cache purge of environment"},"Accounts_V1_Entities_Environment":{"required":["@id","@type","id"],"type":"object","properties":{"@type":{"type":"string","description":"Resource type."},"@id":{"type":"string","description":"Used to specify the URI for the resource. Can be used by clients to navigate back to that specific resource."},"@links":{"type":"object","properties":{},"description":"Links to related resources."},"id":{"type":"string","description":"Resource unique identifier."},"property_id":{"type":"string","description":"Property ID"},"name":{"type":"string","description":"Environment name"},"can_members_deploy":{"type":"boolean","description":"Allow non-admin members to deploy to this environment"},"http_request_logging":{"type":"boolean","description":"Enable deep-request inspection for serverless logs"},"default_domain_name":{"type":"string","description":"Default hostname where the CDN serves the traffic, in addition to custom hostnames"},"pci_compliance":{"type":"boolean","description":"When true the environment is setup for the PCI network footprint."},"dns_domain_name":{"type":"string","description":"Configure your hostname CNAMEs to point to this domain"},"created_at":{"type":"string","description":"Created at","format":"date-time"},"updated_at":{"type":"string","description":"Updated at","format":"date-time"}},"description":"Accounts_V1_Entities_Environment model"},"patchAccountsV01EnvironmentsEnvironmentId":{"type":"object","properties":{"name":{"type":"string"},"can_members_deploy":{"type":"boolean"},"http_request_logging":{"type":"boolean"}},"description":"Update environment"},"Accounts_V1_Entities_Environment_Collection":{"required":["@id","@type"],"type":"object","properties":{"@type":{"type":"string","description":"Resource type."},"@id":{"type":"string","description":"Used to specify the URI for the resource. Can be used by clients to navigate back to that specific resource."},"@links":{"$ref":"#/components/schemas/BaseApi_Entities_HyperionNavigationLinks"},"total_items":{"type":"integer","description":"Total number of items.","format":"int32"},"items":{"type":"array","description":"Array of items.","items":{"$ref":"#/components/schemas/Accounts_V1_Entities_Environment"}}},"description":"Accounts_V1_Entities_Environment_Collection model"},"postAccountsV01Environments":{"required":["name","property_id"],"type":"object","properties":{"property_id":{"type":"string"},"name":{"type":"string"},"can_members_deploy":{"type":"boolean"},"http_request_logging":{"type":"boolean"}},"description":"Create a new environment"},"Accounts_V1_Entities_Property":{"required":["@id","@type","id"],"type":"object","properties":{"@type":{"type":"string","description":"Resource type."},"@id":{"type":"string","description":"Used to specify the URI for the resource. Can be used by clients to navigate back to that specific resource."},"@links":{"type":"object","properties":{},"description":"Links to related resources."},"id":{"type":"string","description":"Resource unique identifier."},"organization_id":{"type":"string","description":"Organization ID"},"slug":{"type":"string","description":"Property slug"},"created_at":{"type":"string","description":"Created at","format":"date-time"},"updated_at":{"type":"string","description":"Updated at","format":"date-time"}},"description":"Accounts_V1_Entities_Property model"},"patchAccountsV01PropertiesPropertyId":{"type":"object","properties":{"slug":{"type":"string"}},"description":"Update property"},"Accounts_V1_Entities_Property_Collection":{"required":["@id","@type"],"type":"object","properties":{"@type":{"type":"string","description":"Resource type."},"@id":{"type":"string","description":"Used to specify the URI for the resource. Can be used by clients to navigate back to that specific resource."},"@links":{"$ref":"#/components/schemas/BaseApi_Entities_HyperionNavigationLinks"},"total_items":{"type":"integer","description":"Total number of items.","format":"int32"},"items":{"type":"array","description":"Array of items.","items":{"$ref":"#/components/schemas/Accounts_V1_Entities_Property"}}},"description":"Accounts_V1_Entities_Property_Collection model"},"postAccountsV01Properties":{"required":["organization_id","slug"],"type":"object","properties":{"slug":{"type":"string"},"organization_id":{"type":"string"}},"description":"Create a new property"},"Accounts_V1_Entities_Organization":{"required":["@id","@type","id"],"type":"object","properties":{"@type":{"type":"string","description":"Resource type."},"@id":{"type":"string","description":"Used to specify the URI for the resource. Can be used by clients to navigate back to that specific resource."},"@links":{"type":"object","properties":{},"description":"Links to related resources."},"id":{"type":"string","description":"Resource unique identifier."},"partner_id":{"type":"string","description":"Partner ID"},"name":{"type":"string","description":"Organization name"},"pci_compliance":{"type":"string","description":"The overall PCI compliance based on the PCI settings of all environments in scope of this organization","enum":["pci","non_pci","mixed"]},"pci_dns_domain_name":{"type":"string","description":"The PCI-compliant DNS domain for this organization. Configure your hostname CNAMEs to point to this domain for environments configured with PCI footprint enabled."},"non_pci_dns_domain_name":{"type":"string","description":"The non PCI-compliant DNS domain for this organization. Configure your hostname CNAMEs to point to this domain for environments configured with PCI footprint disabled."},"created_at":{"type":"string","description":"Created at","format":"date-time"},"updated_at":{"type":"string","description":"Updated at","format":"date-time"}},"description":"Accounts_V1_Entities_Organization model"},"patchAccountsV01OrganizationsOrganizationId":{"type":"object","properties":{"name":{"type":"string"}},"description":"Update organization"},"Accounts_V1_Entities_Organization_Collection":{"required":["@id","@type"],"type":"object","properties":{"@type":{"type":"string","description":"Resource type."},"@id":{"type":"string","description":"Used to specify the URI for the resource. Can be used by clients to navigate back to that specific resource."},"@links":{"$ref":"#/components/schemas/BaseApi_Entities_HyperionNavigationLinks"},"total_items":{"type":"integer","description":"Total number of items.","format":"int32"},"items":{"type":"array","description":"Array of items.","items":{"$ref":"#/components/schemas/Accounts_V1_Entities_Organization"}}},"description":"Accounts_V1_Entities_Organization_Collection model"},"postAccountsV01Organizations":{"required":["name"],"type":"object","properties":{"name":{"type":"string"}},"description":"Create a new organization"},"Operation":{"title":"Operation","type":"object","properties":{"value":{"description":"Required for `RX` or `GLOB` type. The value that will be compared against the request.","type":"string"},"values":{"description":"Required for `EM` type. A list of value(s). Each value will be compared against the request.","type":"array","items":{"type":"string"}},"is_negated":{"type":"boolean","description":"Indicates whether this match condition will be satisfied when the request matches or does not match the value defined by the `value` or `values` property."},"is_case_insensitive":{"type":"boolean","description":"\n`EM` type only. Indicates whether the comparison between the request and the `values` property is case-sensitive.\n"},"type":{"type":"string","enum":["GLOB","EM","RX"],"description":"\nIndicates how the system will interpret the comparison between the request and the value defined within the `value` or `values` property. Valid values are:\n\n-   **EM:** Indicates that request element being compared (i.e., hostname or URL path) must be an exact match to one of the case-sensitive values specified in the `values` property.\n\n-   **GLOB:** Indicates that the request element being compared (i.e., hostname or URL path) must be an exact match to the wildcard pattern defined in the `value` property. \n\n-   **RX:** Indicates that the request element being compared (i.e., hostname or URL path) must be an exact match to the regular expression defined in the `value` property.\n\nIf you do not wish to restrict this Security App by the current request element (i.e., hostname or URL path), then you should set this property to `GLOB` and the `value` property to `*`. This is the default configuration.\n"}}},"WafAuditAction":{"title":"Waf Audit Action","type":"object","properties":{"id":{"type":"string","description":"The enforcement action configuration's system-defined ID."},"name":{"type":"string","description":"The enforcement action configuration's name."},"enf_type":{"description":"This property must be set to `ALERT`.","type":"string","enum":["ALERT"]}}},"ResponseHeader":{"title":"Response Header","type":"object","description":"\nThe set of headers for the custom response sent to the client. Each response header is specified as a name/value pair.\n\n**Example:**\n\n```\n\"x-custom-response\": \"acl-rejected\"\n```\n","additionalProperties":{"type":"string"}},"WafProdAction":{"title":"Waf Production Action","type":"object","properties":{"id":{"type":"string","description":"The enforcement action configuration's system-defined ID."},"name":{"type":"string","description":"The enforcement action configuration's name."},"url":{"type":"string","description":"\n`REDIRECT_302`: The URL to which requests identified as threats will be redirected.\n"},"status":{"type":"integer","format":"uint32","description":"\n`CUSTOM_RESPONSE`: The HTTP status code (e.g., `404`) for the custom response that will be sent to requests identified as threats.\n"},"response_body_base64":{"type":"string","description":"\n`CUSTOM_RESPONSE`: The Base64 encoded response body that will be sent to requests identified as threats.\n"},"enf_type":{"type":"string","description":"The enforcement action that will be applied to requests identified as threats.","enum":["REDIRECT_302","CUSTOM_RESPONSE","BLOCK_REQUEST","ALERT"]},"response_headers":{"type":"array","description":"\n`CUSTOM_RESPONSE`: The set of response headers that will be sent to requests identified as threats. Each response header is specified as a name/value pair. \n","items":{"allOf":[{"$ref":"#/components/schemas/ResponseHeader"}]}}}},"LimitsAction":{"title":"Action","type":"object","properties":{"id":{"type":"string","description":"The rate rule's system-defined ID."},"name":{"type":"string","description":"The rate rule's name."},"duration_sec":{"description":"The length of time, in seconds, that the action defined within this object will be applied to a client that violates the rate rule identified by the `id` property.","type":"integer","format":"uint32","enum":[10,60,300]},"url":{"type":"string","description":"\n`REDIRECT_302`: The URL to which rate limited requests will be redirected.\n"},"status":{"type":"integer","format":"uint32","description":"\n`CUSTOM_RESPONSE`: The HTTP status code (e.g., `404`) for the custom response sent to rate limited requests.\n"},"response_body_base64":{"type":"string","description":"\n`CUSTOM_RESPONSE`: The Base64 encoded response body that will be sent to rate limited requests. \n"},"enf_type":{"type":"string","description":"The enforcement action that will be applied to rate limited requests.","enum":["REDIRECT_302","CUSTOM_RESPONSE","DROP_REQUEST","ALERT"]},"response_headers":{"type":"array","description":"\n`CUSTOM_RESPONSE`: Contains the set of headers that will be included in the response sent to rate limited requests. \n\n**Syntax:**\n\n```\n\"Response Header\": \"Value\"\n```\n","items":{"$ref":"#/components/schemas/ResponseHeader"}}}},"ScopeLimit":{"title":"ScopeLimit","type":"object","properties":{"id":{"type":"string","description":"The system-defined ID for the rate rule that will be applied to this Security App."},"action":{"description":"Describes the action that will take place when the rate rule identified by the id property is enforced.","$ref":"#/components/schemas/LimitsAction"}}},"Scope":{"title":"Scope","type":"object","properties":{"id":{"type":"string","description":"The Security App's system-defined ID."},"name":{"type":"string","description":"The Security App's name."},"recaptcha_action_name":{"type":"string","description":"The reCAPTCHA configuration's name."},"recaptcha_secret_key":{"type":"string","description":"The reCAPTCHA secret key provided by Google."},"recaptcha_site_key":{"type":"string","description":"The reCAPTCHA site key provided by Google."},"host":{"description":"A hostname match condition.","allOf":[{"$ref":"#/components/schemas/Operation"}]},"path":{"description":"A URL path match condition.","allOf":[{"$ref":"#/components/schemas/Operation"}]},"acl_audit_id":{"type":"string","description":"The system-defined ID for the access rule that will audit your traffic."},"acl_audit_action":{"description":"The type of action that will take place when the access rule defined within the `acl_audit_id` property is violated.","allOf":[{"$ref":"#/components/schemas/WafAuditAction"}]},"acl_prod_id":{"type":"string","description":"The system-defined ID for the access rule that will be applied to your traffic."},"acl_prod_action":{"description":"The type of action that will take place when the access rule defined within the `acl_prod_id` property is violated.","allOf":[{"$ref":"#/components/schemas/WafProdAction"}]},"rules_audit_id":{"type":"string","description":"The system-defined ID for the custom rule that will audit your traffic."},"rules_audit_action":{"description":"Identifies the type of action that will take place when the access rule defined within the `rules_audit_id` property is violated.","allOf":[{"$ref":"#/components/schemas/WafAuditAction"}]},"rules_prod_id":{"type":"string","description":"The system-defined ID for the custom rule that will be applied to your traffic."},"rules_prod_action":{"description":"The type of action that will take place when the access rule defined within the `rules_prod_id` property is violated.","allOf":[{"$ref":"#/components/schemas/WafProdAction"}]},"profile_audit_id":{"type":"string","description":"The system-defined ID for the managed rule that will audit your traffic."},"profile_audit_action":{"description":"The type of action that will take place when the managed rule defined within the `profile_audit_id` property is violated.","allOf":[{"$ref":"#/components/schemas/WafAuditAction"}]},"profile_prod_id":{"type":"string","description":"The system-defined ID for the managed rule that will be applied to your traffic."},"profile_prod_action":{"description":"The type of action that will take place when the managed rule defined within the `profile_prod_id` property is violated.","allOf":[{"$ref":"#/components/schemas/WafProdAction"}]},"bot_manager_config_id":{"type":"string","description":"The system-defined ID for the bot manager configuration that will be applied to your traffic."},"limits":{"type":"array","description":"The set of rate rules that will be enforced for this Security App and the enforcement action that will be applied to rate limited requests.","items":{"allOf":[{"$ref":"#/components/schemas/ScopeLimit"}]}}}},"Scopes":{"title":"Scopes","type":"object","properties":{"version":{"type":"string","description":"Reserved for future use"},"id":{"type":"string","description":"The Security App's system-defined ID."},"name":{"type":"string","description":"The Security App's name."},"customer_id":{"type":"string","description":"\nYour organization's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab). \n\nFrom the Edgio Console, select your organization from the top menu and then click **Settings**. It is listed under **Organization ID**.\n"},"last_modified_date":{"type":"string","description":"The date and time at which a Security App returned by the `scopes` array was last modified."},"last_modified_by":{"type":"string","description":"The Edgio Console user that last modified this access rule. This field does not reflect updates performed through the REST API."},"scopes":{"type":"array","description":"Contains a list of Security Apps.","items":{"$ref":"#/components/schemas/Scope"}},"team_config":{"type":"boolean","description":"This property must always be `true`. If passed in the request, set it to `true`."}},"required":["team_config"]},"Error":{"properties":{"success":{"type":"boolean","description":"Returns `false`."},"errors":{"type":"array","description":"Describes the error.","items":{"type":"object","properties":{"message":{"type":"string","description":"A brief description of the error."},"code":{"type":"integer","description":"Error code."}}}}}},"ResponseObj":{"title":"Response Object","type":"object","properties":{"id":{"type":"string","description":"The resource's system-defined ID."},"status":{"type":"string","description":"Returns `success`."},"success":{"type":"boolean","description":"Returns `true`."}}},"ObjShort":{"title":"Object Short","type":"object","properties":{"id":{"type":"string","description":"The resource's system-defined ID."},"name":{"type":"string","description":"The name of the resource."},"last_modified_date":{"type":"string","description":"The date and time at which the resource was last modified."}},"required":["id","name","last_modified_date"]},"AclStrings":{"title":"ACL Strings","type":"object","properties":{"accesslist":{"type":"array","description":"Contains entries that identify traffic that may access your content upon passing a threat assessment. Cookie, referrer, URL, or user agent entries are regular expressions.","items":{"type":"string"}},"blacklist":{"type":"array","description":"Contains entries that identify traffic that will be blocked or for which an alert will be generated. Cookie, referrer, URL, or user agent entries are regular expressions.","items":{"type":"string"}},"whitelist":{"type":"array","description":"Contains entries that identify traffic that may access your content without undergoing threat assessment. Cookie, referrer, URL, or user agent entries are regular expressions.","items":{"type":"string"}}}},"AclAsns":{"title":"ACL ASNs","type":"object","properties":{"accesslist":{"type":"array","description":"Contains ASN entries that identify traffic that may access your content upon passing a threat assessment.","items":{"type":"integer","format":"uint32"}},"blacklist":{"type":"array","description":"Contains ASN entries that identify traffic that will be blocked or for which an alert will be generated.","items":{"type":"integer","format":"uint32"}},"whitelist":{"type":"array","description":"Contains ASN entries that identify traffic that may access your content without undergoing threat assessment.","items":{"type":"integer","format":"uint32"}}}},"Acl":{"title":"ACL","type":"object","properties":{"version":{"type":"string","description":"Reserved for future use."},"id":{"type":"string","description":"The access rule's system-defined ID."},"name":{"type":"string","description":"The access rule's name."},"customer_id":{"type":"string","description":"\nYour organization's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab). \n\nFrom the Edgio Console, select your organization from the top menu and then click **Settings**. It is listed under **Organization ID**.\n"},"last_modified_date":{"type":"string","description":"The date and time at which this configuration was last modified."},"last_modified_by":{"type":"string","description":"The Edgio Console user that last modified this access rule. This field does not reflect updates performed through the REST API."},"country":{"description":"Contains access controls for countries. Each country is identified by its <a href=\"https://docs.edg.io/guides/reference/country_codes\" target=\"_blank\">country code</a>.","allOf":[{"$ref":"#/components/schemas/AclStrings"}]},"sd_iso":{"description":"Contains access controls for country subdivisions. Each country subdivision is identified by its <a href=\"https://www.iso.org/obp/ui/#search/code/\" target=\"_blank\">ISO-3166-2 code</a>.","allOf":[{"$ref":"#/components/schemas/AclStrings"}]},"ip":{"description":"Contains access controls for IPv4 and/or IPv6 addresses. Each IP address is defined through standard IPv4/IPv6 and CIDR notation.","allOf":[{"$ref":"#/components/schemas/AclStrings"}]},"referer":{"description":"Contains access controls for referrers. All referrers defined within a whitelist, accesslist, or blacklist are regular expressions.","allOf":[{"$ref":"#/components/schemas/AclStrings"}]},"url":{"description":"Contains access controls for URL paths. This URL path starts directly after the hostname. All URL paths defined within a whitelist, accesslist, or blacklist are regular expressions.","allOf":[{"$ref":"#/components/schemas/AclStrings"}]},"cookie":{"description":"Contains access controls for cookie names. All cookies defined within a whitelist, accesslist, or blacklist are regular expressions.","allOf":[{"$ref":"#/components/schemas/AclStrings"}]},"user_agent":{"description":"Contains access controls for user agents. All user agents defined within a whitelist, accesslist, or blacklist are regular expressions.","allOf":[{"$ref":"#/components/schemas/AclStrings"}]},"ja3":{"description":"Requires Edgio Premier. Contains access controls for JA3 fingerprints.","allOf":[{"$ref":"#/components/schemas/AclStrings"}]},"asn":{"description":"Contains access controls for autonomous system numbers (ASNs).","allOf":[{"$ref":"#/components/schemas/AclAsns"}]},"allow_anonymous_proxy":{"type":"boolean","description":"Determines whether we will detect requests that use an anonymizer or anonymous proxy tool."},"super_capacity":{"type":"boolean","description":"Determines whether this access rule is restricted to 10,000 or 1,000 IP addresses or IP blocks. Edgio Premier and Standard customers are allowed to create up to 2 high-capacity access rules."},"allowed_http_methods":{"type":"array","description":"Identifies each allowed HTTP method (e.g., `GET`).","items":{"type":"string"}},"allowed_request_content_types":{"type":"array","description":"Identifies each allowed media type (e.g., `application/json`).","items":{"type":"string"}},"disallowed_extensions":{"type":"array","description":"A list of file extension(s) for which WAF will send an alert or block the request.","items":{"type":"string"}},"disallowed_headers":{"type":"array","description":"A list of request header(s) for which WAF will send an alert or block the request.","items":{"type":"string"}},"max_file_size":{"type":"integer","format":"uint64","description":"The maximum file size, in bytes, for a `POST` request body."},"response_header_name":{"type":"string","description":"The name of the response header that will be included with blocked requests."},"team_config":{"type":"boolean","description":"This property must always be `true`. If passed in the request, set it to `true`."}},"required":["team_config"]},"Match":{"title":"Match","type":"object","description":"Determines the comparison conditions for the request element identified by the `type` property.","properties":{"value":{"type":"string","description":"\nRestricts the match condition defined by the `type` property to the specified value. \n\n**Example:**\n\nIf the `type` property is set to `REQUEST_HEADERS` and this property is set to `User-Agent`, then this match condition is restricted to the `User-Agent` request header. If the `value` property is omitted, then this match condition applies to all request headers.\n"},"is_negated":{"type":"boolean","description":"\nDetermines whether this condition is satisfied when the request element identified by the `variable` object is found or not found.\n\n-   **True:** Not found. Enabling this property requires an initial object that sets both the `is_negated` and `is_regex` properties to `False`.\n\n    ```\n    ...\n    [{\n    \t\t\"is_negated\": false,\n  \t  \t\"is_regex\": false\n  \t  }, {\n  \t\t\"is_negated\": true,\n  \t\t...\t\n    ```\n\n    Omitting this initial object results in an invalid configuration.\n\n-   **False:** Found.\n"},"is_regex":{"type":"boolean","description":"Determines whether the `value` property will be interpreted as a regular expression or as a literal value."}}},"Variable":{"title":"Variable","type":"object","description":"Identifies a request element for which a comparison will be made.","properties":{"type":{"type":"string","enum":["REQUEST_HEADERS","REQUEST_URI","REQUEST_BODY","REQUEST_METHOD","REQUEST_COOKIES","QUERY_STRING","ARGS_POST","GEO","REMOTE_ADDR","REMOTE_ASN","REQUEST_FILENAME"],"description":"\nA variable that determines the type of request element that will be assessed. \n\n-   If a request element consists of one or more key-value pairs, then you may identify a key through a `match` object. \n\n-   If `is_count` has been disabled, then you may identify a specific value through the `operator` object. \n\n<a href=\"https://docs.edg.io/guides/v7/security/matched_on_variables\" target=\"_blank\">Learn more about matched on variables.</a>\n"},"match":{"description":"Contains comparison conditions for the request element identified by the `type` property. You may define up to 20 conditions.","type":"array","items":{"allOf":[{"$ref":"#/components/schemas/Match"}]}},"is_count":{"description":"\nDetermines whether a comparison will be performed between the operator object and a string value or the number of matches found. Valid values are:\n\n-   **true:** A counter will increment whenever the request element defined by this `variable` object is found. The `operator` object will perform a comparison against this number. If you enable `is_count`, then you must also set the `type` property to `EQ`.\n\n-   **false:** The `operator` object will perform a comparison against the string value derived from the request element defined by this `variable` object.\n","type":"boolean"}},"required":["type"]},"Operator":{"title":"Operator Object","type":"object","description":"Identifies the set of API requests that will be screened by URL path.","properties":{"type":{"type":"string","enum":["RX","STREQ","EQ","CONTAINS","BEGINSWITH","ENDSWITH","IPMATCH"],"description":"\nIndicates how Edgio will interpret the comparison between the request’s path and the `value` property. Valid values are:\n\n-   **RX:** Indicates that the request's path must satisfy the regular expression defined in the `value` property.\n\n-   **STREQ:** Indicates that the request's path must be an exact match to the `value` property.\n\n-   **CONTAINS:** Indicates that the `value` property must contain the request's path.\n\n-   **BEGINSWITH:** Indicates that the `value` property must start with the request's path.\n\n-   **ENDSWITH:** Indicates that the `value` property must end with the request's path.\n"},"value":{"type":"string","description":"\nA value that will be compared against the request’s path. Specify a URL path pattern that starts directly after the hostname. Exclude a protocol or a hostname when defining this property.\n\n**Sample value:** `/marketing`\n"},"is_negated":{"type":"boolean","description":"\nDetermines whether this condition is satisfied when the request’s path matches the pattern defined in the `value` property. Valid values are:\n\n-   **True:** Does not match\n\n-   **False:** Matches\n"}},"required":["type"]},"RulesAction":{"title":"Action Object","type":"object","description":"Determines whether the value derived from the request element identified in a `variable` object will be transformed and the metadata that will be used to identify malicious traffic.","properties":{"id":{"type":"string","description":"\nDetermines the custom ID that will be assigned to this custom rule. This custom ID is exposed through the Security dashboard. Valid values fall within this range: `66000000 - 66999999`. This field is only applicable for the `action` object that resides in the root of the `sec_rule` object. \n\n**Default value:** Random number\n"},"msg":{"type":"string","description":"\nDetermines the rule message that will be assigned to this custom rule. This message is exposed through the Security dashboard. This field is only applicable for the `action` object that resides in the root of the `sec_rule` object.\n\n**Default Value:** Blank\n"},"t":{"description":"\nDetermines the set of transformations that will be applied to the value derived from the request element identified in a `variable` object (i.e., source value). Transformations are always applied to the source value, regardless of the number of transformations that have been defined. Valid values are:\n\n-   **NONE:** Indicates that the source value should not be modified.\n\n-   **LOWERCASE:** Indicates that the source value should be converted to lowercase characters.\n\n-   **URLDECODE:** Indicates that the source value should be URL decoded. This transformation is useful when the source value has been URL encoded twice.\n\n-   **REMOVENULLS:** Indicates that null values should be removed from the source value.\n\nA criterion is satisfied if the source value or any of the modified string values meet the conditions defined by the `operator` object. \n","type":"array","items":{"type":"string","enum":["NONE","LOWERCASE","URLDECODE","REMOVENULLS"]}}}},"ChainedRule":{"title":"Chained Rule","type":"object","description":"Each object within the `chained_rule` array describes an additional set of criteria that must be satisfied in order to identify a malicious request.","properties":{"variable":{"type":"array","description":"Identifies each request element for which a comparison will be made.","items":{"$ref":"#/components/schemas/Variable"}},"operator":{"description":"Indicates the comparison that will be performed on the string value(s) derived from the request element(s) defined within the `variable` array.","$ref":"#/components/schemas/Operator"},"action":{"description":"Determines whether the string value derived from the request element identified in a `variable` object will be transformed and the metadata that will be used to identify malicious traffic.","$ref":"#/components/schemas/RulesAction"}}},"SecRuleObj":{"title":"Sec Rule Object","type":"object","description":"Describes a custom rule.","properties":{"id":{"type":"string","description":"The custom rule's system-defined ID."},"name":{"type":"string","description":"The custom rule's name."},"variable":{"description":"Contains criteria that identifies a request element. You may define up to 20 entries.","type":"array","items":{"$ref":"#/components/schemas/Variable"}},"operator":{"description":"The comparison that will be performed against the request element(s) identified within a `variable` object.","$ref":"#/components/schemas/Operator"},"action":{"description":"Determines whether the string identified in a `variable` object will be transformed and the metadata that will be assigned to malicious traffic.","$ref":"#/components/schemas/RulesAction"},"chained_rule":{"description":"Contains additional criteria that must be satisfied to identify a malicious request. You may add up to 5 `chained_rule` objects per custom rule.","type":"array","items":{"$ref":"#/components/schemas/ChainedRule"}}},"required":["variable","action","operator"]},"SecRule":{"title":"Security Rule","type":"object","properties":{"sec_rule":{"description":"Defines a custom rule.","$ref":"#/components/schemas/SecRuleObj"}},"required":["sec_rule"]},"Rule":{"title":"Rule","type":"object","properties":{"id":{"type":"string","description":"The custom rule's system-defined ID."},"directive":{"description":"Contains custom rules. Each `directive` object defines a custom rule through the `sec_rule` object. You may create up to 10 custom rules.","type":"array","items":{"allOf":[{"$ref":"#/components/schemas/SecRule"}]}},"customer_id":{"type":"string","description":"\nYour organization's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab). \n\nFrom the Edgio Console, select your organization from the top menu and then click **Settings**. It is listed under **Organization ID**.\n"},"last_modified_date":{"type":"string","description":"The date and time at which this configuration was last modified."},"name":{"type":"string","description":"The custom rule's name."},"team_config":{"type":"boolean","description":"This property must always be `true`. If passed in the request, set it to `true`."}},"required":["team_config"]},"LimitKeyType":{"type":"string","enum":["IP","USER_AGENT"]},"TargetType":{"type":"string","description":"Determines how requests will be identified.","enum":["FILE_EXT","REMOTE_ADDR","REMOTE_ASN","GEO","REQUEST_HEADERS","REQUEST_METHOD","REQUEST_URI"]},"Target":{"type":"object","description":"Describes the type of match condition.","properties":{"type":{"description":"Determines how requests will be identified.","$ref":"#/components/schemas/TargetType"},"value":{"description":"\nRequired for `REQUEST_HEADERS` type. The name of the request header through which requests will be identified. Valid values are: \n\n```\nHost | Referer User-Agent\n```\n","type":"string"}}},"OpType":{"type":"string","enum":["RX","EM","IPMATCH"]},"Op":{"type":"object","description":"Describes the comparison that will be performed.","properties":{"type":{"description":"\nIndicates how the system will interpret the comparison between the request and the `values` property.\n\nValid values are:\n\n-   **EM:** Requires that the request's attribute be set to one of the value(s) defined in the `values` property.\n\n-   **IPMATCH:** Requires that the request's IP address either be contained by an IP block or be an exact match to an IP address defined in the `values` property.\n\n    Only use `IPMATCH` with the `REMOTE_ADDR` match condition.\n\n-   **RX:** Requires that the request's attribute be an exact match to the regular expression defined in the `value` property.\n","allOf":[{"$ref":"#/components/schemas/OpType"}]},"value":{"description":"Required for `RX` type. Identifies a regular expression used to identify requests that are eligible for rate limiting.","type":"string"},"is_regex":{"type":"boolean"},"values":{"description":"Required for `IPMATCH` and `EM` type. Identifies one or more values used to identify requests that are eligible for rate limiting. You may define up to 200 entries for `IPMATCH` or 100 entries for `EM`.","type":"array","items":{"type":"string"}},"is_negated":{"type":"boolean","description":"\nIndicates whether this match condition will be satisfied when the request matches or does not match the value defined by the `values` property. Valid values are:\n\n-   **true:** Does not match\n\n-   **false:** Matches\n"},"is_case_insensitive":{"type":"boolean","description":"\nIndicates whether the comparison between the request and the `values` property is case-sensitive. Valid values are:\n\n-   **true:** Case-insensitive\n-   **false:** Case-sensitive\n"}}},"Condition":{"title":"Condition","type":"object","description":"Contains a list of match conditions. You may define up to 5 match conditions.","properties":{"target":{"description":"Describes the type of match condition.","$ref":"#/components/schemas/Target"},"op":{"description":"Describes the comparison that will be performed.","$ref":"#/components/schemas/Op"}}},"ConditionGroup":{"title":"ConditionGroup","type":"object","properties":{"id":{"type":"string","description":"The condition group's system-defined alphanumeric ID."},"name":{"type":"string","description":"The condition group's name."},"conditions":{"description":"Contains a list of match conditions. You may define up to 5 match conditions.","type":"array","items":{"$ref":"#/components/schemas/Condition"}}}},"Limit":{"title":"Limit","type":"object","properties":{"version":{"type":"integer","format":"uint32","description":"Reserved for future use."},"id":{"type":"string","description":"The rate rule's system-defined ID."},"name":{"type":"string","description":"The rate rule's name."},"customer_id":{"type":"string","description":"\nYour organization's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab). \n\nFrom the Edgio Console, select your organization from the top menu and then click **Settings**. It is listed under **Organization ID**.\n"},"last_modified_date":{"type":"string","description":"The date and time at which this configuration was last modified."},"last_modified_by":{"type":"string","description":"The Edgio Console user that last modified this access rule. This field does not reflect updates performed through the REST API."},"disabled":{"type":"boolean","description":"\nIndicates whether this rate rule will be enforced. Valid values are:\n\n-   **true:** Disabled. This rate limit will not be applied to traffic.\n\n-   false:** Enabled. Traffic is restricted to this rate limit.\n"},"duration_sec":{"description":"The length, in seconds, of the rolling window that tracks the number of requests eligible for rate limiting. The `num` property determines the maximum number of requests for this time period.","type":"integer","format":"uint32","enum":[1,5,10,30,60,120,300]},"num":{"type":"integer","format":"uint32","description":"The number of requests that will trigger rate limiting."},"keys":{"type":"array","description":"\nThe method by which requests will be grouped for the purposes of this rate rule. Valid values are:\n\n-   **Missing / Empty Array:** If the keys property is not defined or set to an empty array, all requests will be treated as a single group for the purpose of rate limiting.\n\n-   **IP:** Indicates that requests will be grouped by IP address. Each unique IP address is considered a separate group.\n\n-   **USER_AGENT:** Indicates that requests will be grouped by a client's user agent. Each unique combination of IP address and user agent is considered a separate group.\n","items":{"allOf":[{"$ref":"#/components/schemas/LimitKeyType"}]}},"condition_groups":{"type":"array","description":"Contains the set of condition groups associated with a rule.","items":{"allOf":[{"$ref":"#/components/schemas/ConditionGroup"}]}},"team_config":{"type":"boolean","description":"This property must always be `true`. If passed in the request, set it to `true`."}},"required":["team_config"]},"ProfileShort":{"title":"Profile Short","type":"object","properties":{"id":{"type":"string","description":"The managed rule's system-defined ID."},"name":{"type":"string","description":"The managed rule's name."},"created_date":{"type":"string","description":"The date and time at which the managed rule was created."},"last_modified_date":{"type":"string","description":"The date and time at which the managed rule was last modified."},"ruleset_id":{"type":"string","description":"The ID for the ruleset associated with this managed rule."},"ruleset_version":{"type":"string","description":"The version of the ruleset associated with this managed rule."}},"required":["id","name","created_date","last_modified_date","ruleset_id","ruleset_version"]},"GeneralSettings":{"title":"General Settings","type":"object","properties":{"arg_length":{"type":"integer","format":"uint32","description":"The maximum number of characters for any single query string parameter value."},"arg_name_length":{"type":"integer","format":"uint32","description":"The maximum number of characters for any single query string parameter name."},"max_num_args":{"type":"integer","format":"uint32","description":"The maximum number of query string parameters."},"total_arg_length":{"type":"integer","format":"uint32","description":"The maximum number of characters for the query string value."},"combined_file_sizes":{"type":"integer","format":"uint64","description":"The total file size for multipart message lengths."},"max_file_size":{"type":"integer","format":"uint64","description":"End-of-life. This property does not affect your security configuration. Use the [Add Access Rule](#tag/Access-Control-List-(ACL)/operation/create-acl-rule) and the [Update Access Rule](#tag/Access-Control-List-(ACL)/operation/update-acl-rule) operations to manage this setting."},"response_header_name":{"type":"string","description":"Determines the name of the response header that will be included with blocked requests."},"validate_utf8_encoding":{"type":"boolean","description":"\nIndicates whether WAF may check whether a request variable (e.g., ARGS, ARGS_NAMES, and REQUEST_FILENAME) is a valid UTF-8 string. This validation includes checking for missing bytes, invalid characters, and ASCII to UTF-8 character mapping. \n\nYou should only enable this validation if your web server or application uses UTF-8. Otherwise, this validation will result in many false positives.\n"},"xml_parser":{"type":"boolean","description":"Determines whether XML payloads will be inspected."},"process_request_body":{"type":"boolean","description":"Indicates whether WAF will inspect a POST request body."},"json_parser":{"type":"boolean","description":"Determines whether JSON payloads will be inspected."},"paranoia_level":{"type":"integer","format":"uint32","description":"\nThe balance between the level of protection and false positives. Valid values are:\n\n`1 | 2 | 3 | 4`\n"},"anomaly_threshold":{"type":"integer","format":"uint32","description":"The anomaly score threshold."},"ignore_cookie":{"type":"array","description":"Identifies each cookie that will be ignored for the purpose of determining whether a request is malicious traffic. Each entry is a regular expression.","items":{"type":"string"}},"ignore_header":{"type":"array","description":"Identifies each request header that will be ignored for the purpose of determining whether a request is malicious traffic. Each entry is a regular expression.","items":{"type":"string"}},"ignore_query_args":{"type":"array","description":"Identifies each query string argument that will be ignored for the purpose of determining whether a request is malicious traffic. Each entry is a regular expression.","items":{"type":"string"}}}},"DisabledRule":{"title":"Disabled Rule","type":"object","properties":{"policy_id":{"type":"string","description":"The system-defined ID for the policy associated with a disabled rule."},"rule_id":{"type":"string","description":"The rule's system-defined ID."}}},"RuleTargetUpdate":{"title":"Rule Target Update","type":"object","properties":{"target":{"type":"string","description":"Identifies the type of data source (e.g., `REQUEST_COOKIES`, `ARGS`, `GEO`, etc.) for which a target will be created. The maximum size of this value is 256 characters."},"target_match":{"type":"string","description":"Identifies a name or category (e.g., cookie name, query string name, country code, etc.) for the data source defined in the `target` parameter. The category defined by this parameter will be analyzed when identifying threats. The maximum size of this value is 256 characters."},"rule_id":{"type":"string","description":"Identifies a rule by its system-defined ID. The configuration defined within this object will alter the behavior of the rule identified by this parameter."},"is_regex":{"type":"boolean","description":"\nDetermines whether the value defined within the `target_match` parameter will be treated as a regular expression or a literal value.\n\n**Default Value:** false\n"},"is_negated":{"type":"boolean","description":"\nDetermines whether the target defined within this object will be ignored when identifying threats.\n\n**Default Value:** false\n"}}},"RedactedVariable":{"title":"Redacted Variable","type":"object","properties":{"match_on":{"type":"string","description":"A regular expression that identifies the <a href=\"https://docs.edg.io/guides/security/matched_on_variables\" target=\"_blank\">Matched On variable</a> whose value will be redacted."},"replacement_name":{"type":"string","description":"The new name for the variable identified by the `match_on` property."},"replacement_value":{"type":"string","description":"The value that will be assigned to the variable identified by the `match_on` property."}}},"Profile":{"title":"Profile","type":"object","properties":{"version":{"type":"string","description":"Reserved for future use."},"id":{"type":"string","description":"The managed rule's system-defined ID."},"name":{"type":"string","description":"The managed rule's name."},"customer_id":{"type":"string","description":"\nYour organization's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab). \n\nFrom the Edgio Console, select your organization from the top menu and then click **Settings**. It is listed under **Organization ID**.\n"},"last_modified_date":{"type":"string","description":"The date and time at which this configuration was last modified."},"last_modified_by":{"type":"string","description":"The Edgio Console user that last modified this managed rule. This field does not reflect updates performed through the REST API."},"ruleset_id":{"type":"string","description":"The ID for the ruleset associated with this managed rule."},"ruleset_version":{"type":"string","description":"The version of the ruleset associated with this managed rule."},"policies":{"type":"array","description":"Contains a list of policies that have been enabled on this managed rule.","items":{"type":"string"}},"general_settings":{"description":"Contains settings that define the profile for a valid request.","allOf":[{"$ref":"#/components/schemas/GeneralSettings"}]},"disabled_rules":{"type":"array","description":"\nContains all disabled rules. \n\n**Default Value:** Null\n","items":{"allOf":[{"$ref":"#/components/schemas/DisabledRule"}]}},"rule_target_updates":{"type":"array","description":"\nDefines one or more targets that will be ignored and/or replaced.\n\n**Key information:**\n\n-   If `is_negated` is set to `true`, then this target identifies rule criterion that will be ignored when identifying threats.\n\n-   The `replace_target` property defines criterion that will be used to identify threats instead of the existing criterion.\n\n-   If `is_regex` is set to `true`, then you may use regular expressions to define criteria for identifying multiple types of threats.\n\n-   A maximum of 25 target configurations may be created.\n","items":{"allOf":[{"$ref":"#/components/schemas/RuleTargetUpdate"}]}},"redacted_variables":{"type":"array","description":"Remove sensitive information from WAF log data.","items":{"allOf":[{"$ref":"#/components/schemas/RedactedVariable"}]}},"team_config":{"type":"boolean","description":"This property must always be `true`. If passed in the request, set it to `true`."}},"required":["team_config"]},"Ruleset":{"title":"Ruleset","type":"object","properties":{"id":{"type":"string","description":"The Edgio ruleset's system-defined ID."},"description":{"type":"string","description":"The Edgio ruleset's description."},"versions":{"type":"array","description":"The Edgio ruleset's available versions.","items":{"type":"string"}},"display":{"type":"string","description":"The Edgio ruleset's name."}}},"ApiRule":{"title":"API Rule Object","type":"object","properties":{"name":{"type":"string","description":"The rule's name."},"id":{"type":"string","description":"The rule's system-defined ID."},"methods":{"type":"array","description":"\nIdentifies the set of API requests that will be screened by one or more HTTP method(s). Valid values are: `GET | DELETE | PATCH | POST | PUT`\n","items":{"type":"string"}},"path":{"$ref":"#/components/schemas/Operator"},"schema_id":{"type":"string","description":"\nAn API schema's system-defined ID. \n\nUse the [Get All API Schemas operation](#tag/API-Schemas/operation/get-api-schemas) to retrieve a list of API schemas and their system-defined IDs.\n"}},"required":["schema_id"]},"ApiGateway":{"title":"API gateway object","type":"object","properties":{"id":{"type":"string","description":"The API Security ruleset's system-defined ID."},"name":{"type":"string","description":"The API Security ruleset's name."},"customer_id":{"type":"string","description":"An internal system-defined ID."},"last_modified_date":{"type":"string","description":"The date and time at which this configuration was last modified."},"last_modified_by":{"type":"string","description":"The Edgio Console user that last modified this access rule. This field does not reflect updates performed through the REST API."},"team_config":{"type":"boolean","description":"This property must always be `true`. If passed in the request, set it to `true`."},"rules":{"type":"array","description":"Contains one or more rule(s) that identify a set of requests and a JSON schema through which Edgio will screen that traffic.","items":{"$ref":"#/components/schemas/ApiRule"}}},"required":["team_config"]},"ApiSchema":{"title":"Api Schema","type":"object","properties":{"id":{"type":"string","description":"The API schema’s system-defined ID."},"api_gw_id":{"type":"string","description":"The API Security ruleset's system-defined ID."},"customer_id":{"type":"string","description":"An internal system-defined ID."},"last_modified_date":{"type":"string","description":"The date and time at which this configuration was last modified."}}},"RepDb":{"title":"Reputation DB Include","type":"object","properties":{"include":{"description":"Indicates that the bot rule that will use our reputation database. This type of rule is satisfied when the client’s IP address matches an IP address defined within our reputation database. Our reputation database contains a list of IP addresses known to be used by bots.","enum":["r3010_ec_bot_challenge_reputation.conf.json"]}}},"OperatorBot":{"title":"Operator Object","type":"object","properties":{"type":{"type":"string","description":"\nIndicates how the system will interpret the comparison between the `value` property and the value derived from the request element defined within a `variable` object. Valid values are:\n\n-   **RX:** Indicates that the string value derived from the request element must satisfy the regular expression defined in the `value` property.\n\n-   **STREQ:** Indicates that the string value derived from the request element must be an exact match to the `value` property.\n\n-   **CONTAINS:** Indicates that the `value` property must contain the string value derived from the request element.\n\n-   **BEGINSWITH:** Indicates that the `value` property must start with the string value derived from the request element.\n\n-   **ENDSWITH:** Indicates that the `value` property must end with the string value derived from the request element.\n\n-   **EQ:** Indicates that the number derived from the variable object must be an exact match to the `value` property. You should only use `EQ` when the `is_count` property has been enabled.\n\n-   **IPMATCH:** Requires that the request's IP address either be contained by an IP block or be an exact match to an IP address defined in the `value` property. Only use `IPMATCH` with the `REMOTE_ADDR` variable.\n","enum":["RX","STREQ","EQ","CONTAINS","BEGINSWITH","ENDSWITH","IPMATCH"]},"value":{"type":"string","description":"\nIndicates a value that will be compared against the string or number value derived from the request element defined within a `variable` object.\n\n-   If you are identifying traffic by URL path (`REQUEST_URI`), then you should specify a URL path pattern that starts directly after the hostname. Exclude a protocol or a hostname when defining this property.\n\n    **Examples:**\n\n    /marketing\n    /800001/mycustomerorigin\n\n-   If you are identifying traffic by IP address (`REMOTE_ADDR` and `IPMATCH`), then you should use a comma-delimited list to specify multiple IP blocks and IP addresses.\n\n    **Example:**\n\n    192.0.2.20,203.0.113.0/24,2001:DB8::/32\n"},"values":{"description":"Max 20 entries.","type":"array","items":{"type":"string"}},"is_negated":{"type":"boolean","description":"\nIndicates whether a condition will be satisfied when the value derived from the request element defined within a `variable` object matches or does not match the `value` property. Valid values are:\n\n-   **true:** Does not match\n\n-   **false:** Matches\n"}},"oneOf":[{"required":["value"]},{"required":["values"]}],"required":["type"]},"RulesActionBot":{"title":"Action Object","type":"object","properties":{"id":{"type":"string","description":"\nDetermines the custom ID that will be assigned to this bot rule. This custom ID is exposed through the Security dashboard. Valid values fall within this range: 77000000-77999999. This property is only applicable for the `action` object that resides in the root of the `sec_rule` object. \n\n**Default Value:** Random number\n"},"msg":{"type":"string","description":"\nDetermines the rule message that will be assigned to this bot rule. This message is exposed through the Security dashboard. This field is only applicable for the `action` object that resides in the root of the `sec_rule` object.\n\n**Default Value:** Blank\n"},"t":{"type":"array","items":{"type":"string","description":"\nDetermines the set of transformations that will be applied to the value derived from the request element identified in a variable object (i.e., source value). Transformations are always applied to the source value, regardless of the number of transformations that have been defined. Valid values are:\n\n-   **NONE:** Indicates that the source value should not be modified.\n\n-   **LOWERCASE:** Indicates that the source value should be converted to lowercase characters.\n\n-   **URLDECODE:** Indicates that the source value should be URL decoded. This transformation is useful when the source value has been URL encoded twice.\n\n-   **REMOVENULLS:** Indicates that null values should be removed from the source value.\n\nA criterion is satisfied if the source value or any of the modified string values meet the conditions defined by the `operator` object.\n","enum":["NONE","LOWERCASE","URLDECODE","REMOVENULLS"]}}}},"ChainedRuleBot":{"title":"Chained Rule","type":"object","properties":{"variable":{"type":"array","description":"Identifies each request element for which a comparison will be made.","items":{"$ref":"./VariableBot.yaml"}},"operator":{"$ref":"#/components/schemas/OperatorBot"},"action":{"$ref":"#/components/schemas/RulesActionBot"}}},"SecRuleObjBot":{"title":"Sec Rule Object","type":"object","description":"A configuration for a bot rule that uses custom match conditions.","properties":{"id":{"type":"string","description":"The bot rule's system-defined ID."},"name":{"type":"string","description":"The bot rule's name."},"variable":{"description":"Contains criteria that identifies a request element. You may define up to 20 entries.","type":"array","items":{"$ref":"./VariableBot.yaml"}},"operator":{"$ref":"#/components/schemas/OperatorBot"},"action":{"$ref":"#/components/schemas/RulesActionBot"},"chained_rule":{"description":"Contains additional criteria that must be satisfied to identify traffic to which this bot rule will be applied. You may add up to 5 `chained_rule` objects per bot rule.","type":"array","items":{"$ref":"#/components/schemas/ChainedRuleBot"}}},"required":["variable","action","operator"]},"SecRuleBot":{"title":"Security Rule","type":"object","description":"Indicates that the bot rule that will use custom match conditions. This type of rule is satisfied when a match is found for each of its conditions. A condition determines request identification by defining what will be matched (i.e., `variable`), how it will be matched (i.e., `operator`), and a match value.","properties":{"sec_rule":{"$ref":"#/components/schemas/SecRuleObjBot"}},"required":["sec_rule"]},"Bot":{"title":"Bot","type":"object","properties":{"id":{"type":"string","description":"The bot ruleset's system-defined ID."},"directive":{"description":"Contains the bot rules associated with this bot ruleset. You may create up to 10 bot rules per bot ruleset.","type":"array","items":{"anyOf":[{"$ref":"#/components/schemas/RepDb"},{"$ref":"#/components/schemas/SecRuleBot"}]}},"customer_id":{"type":"string","description":"\nYour organization's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab). \n\nFrom the Edgio Console, select your organization from the top menu and then click **Settings**. It is listed under **Organization ID**.\n"},"last_modified_date":{"type":"string","description":"The date and time at which this bot ruleset was last modified."},"name":{"type":"string","description":"The bot ruleset's name."},"team_config":{"type":"boolean","description":"This property must always be `true`. If passed in the request, set it to `true`."}},"required":["directive","team_config"]},"AlertAction":{"title":"Alert Action","type":"object","description":"Generates an alert.","properties":{"id":{"type":"string","description":"The enforcement action's system-defined ID."},"name":{"type":"string","description":"The enforcement action's name."},"enf_type":{"type":"string","description":"The type of enforcement action.","enum":["ALERT"]}}},"CustomResponseAction":{"title":"Custom Response Action","type":"object","description":"Returns a custom response.","properties":{"id":{"type":"string","description":"The enforcement action's system-defined ID."},"name":{"type":"string","description":"The enforcement action's name."},"enf_type":{"type":"string","description":"The type of enforcement action.","enum":["CUSTOM_RESPONSE"]},"response_body_base64":{"type":"string","description":"The Base64 encoded payload for the custom response sent to the client."},"status":{"type":"integer","format":"uint32","description":"The HTTP status code (e.g., `404`) for the custom response sent to the client."},"response_headers":{"$ref":"#/components/schemas/ResponseHeader"}}},"BlockRequestAction":{"title":"Block Action","type":"object","description":"Blocks the request.","properties":{"id":{"type":"string","description":"The enforcement action's system-defined ID."},"name":{"type":"string","description":"The enforcement action's name."},"enf_type":{"type":"string","description":"The type of enforcement action.","enum":["BLOCK_REQUEST"]}}},"RedirectAction":{"title":"Redirect Action","type":"object","description":"Redirects the request.","properties":{"id":{"type":"string","description":"The enforcement action's system-defined ID."},"name":{"type":"string","description":"The enforcement action's name."},"enf_type":{"type":"string","description":"The type of enforcement action.","enum":["REDIRECT_302"]},"url":{"type":"string","description":"The URL to which requests will be redirected."}}},"BrowserChallengeAction":{"title":"Browser Challenge Action","type":"object","description":"Requires clients to solve a browser challenge before honoring the request.","properties":{"id":{"type":"string","description":"The enforcement action's system-defined ID."},"name":{"type":"string","description":"The enforcement action's name."},"enf_type":{"type":"string","description":"The type of enforcement action.","enum":["BROWSER_CHALLENGE"]},"is_custom_challenge":{"type":"boolean","description":"Determines whether to serve a standard or custom browser challenge."},"response_body_base64":{"type":"string","description":"The Base64 encoded payload for the custom browser challenge sent to the client."},"valid_for_sec":{"type":"integer","format":"uint32","description":"The  number of minutes for which our CDN will serve content to a client that solves a browser challenge without requiring an additional browser challenge to be solved. Valid values are `1`-`1440`."},"status":{"type":"integer","format":"uint32","description":"The HTTP status code (e.g., `200`) for the response sent to the client. Certain status codes (e.g., `204`) may prevent clients that successfully solve a browser challenge from properly displaying your site."}}},"RecaptchaAction":{"title":"Recaptcha Action","type":"object","description":"Performs an automated assessment of a client’s interaction with your site. This assessment, which is performed without user interaction, requires <a href=\"https://www.google.com/recaptcha/about/\" target=\"_blank\">Google reCAPTCHA v3</a>.","properties":{"id":{"type":"string","description":"The enforcement action's system-defined ID."},"name":{"type":"string","description":"The enforcement action's name."},"enf_type":{"type":"string","description":"The type of enforcement action.","enum":["RECAPTCHA"]},"valid_for_sec":{"type":"integer","format":"uint32","description":"The  number of seconds for which our CDN will serve content to a client that passes a reCAPTCHA assessment without requiring an additional assessment. Valid values are `1`-`86400`."},"status":{"type":"integer","format":"uint32","description":"The HTTP status code (e.g., `200`) for the response sent to the client. Certain status codes (e.g., `204`) may prevent clients that successfully solve a reCAPTCHA from properly displaying your site."},"failed_action_type":{"type":"string","description":"The enforcement action that will be applied when the client’s reCAPTCHA score is unacceptable.","enum":["ALERT","BLOCK_REQUEST"]}}},"ActionObj":{"title":"Actions","type":"object","description":"Contains an object for each enforcement action associated with this bot manager configuration.","properties":{"ALERT":{"$ref":"#/components/schemas/AlertAction"},"CUSTOM_RESPONSE":{"$ref":"#/components/schemas/CustomResponseAction"},"BLOCK_REQUEST":{"$ref":"#/components/schemas/BlockRequestAction"},"REDIRECT_302":{"$ref":"#/components/schemas/RedirectAction"},"BROWSER_CHALLENGE":{"$ref":"#/components/schemas/BrowserChallengeAction"},"RECAPTCHA":{"$ref":"#/components/schemas/RecaptchaAction"}}},"KnownBotObj":{"title":"Known Bot Object","type":"object","description":"Contains the set of known bots that Edgio may automatically detect and the enforcement action that may be applied to them.","properties":{"action_type":{"type":"string","description":"\nThe type of enforcement action that will be applied to a known bot. \n\n<a href=\"https://docs.edg.io/guides/security/bot_rules#actions\" target=\"_blank\">Learn more about enforcement actions.</a>\n","enum":["ALERT","BLOCK_REQUEST","CUSTOM_RESPONSE","BROWSER_CHALLENGE","REDIRECT_302","RECAPTCHA"]},"bot_token":{"description":"A token that identifies a known bot.","type":"string"}},"required":["action_type","bot_token"]},"BotManager":{"title":"Bot Manager","type":"object","properties":{"actions":{"$ref":"#/components/schemas/ActionObj"},"bots_prod_id":{"type":"string","description":"\nThe system-defined ID for the bot ruleset that will be applied to production traffic when this bot manager configuration is applied to a Security App. \n\nUse the [Get All Bot Rulesets operation](#tag/Bot-Rules/operation/get-bot-rules) to retrieve a list of bot rulesets and their system-defined IDs.\n"},"exception_cookie":{"type":"array","description":"\nIdentifies traffic that will be exempt from bot detection by cookie. \n\n**Cookie syntax:** `<COOKIE NAME>:<COOKIE VALUE>`. \n\nEdgio treats the cookie’s value as a regular expression.\n","items":{"type":"string"}},"exception_ja3":{"type":"array","description":"Identifies traffic that will be exempt from bot detection by JA3 fingerprint. A JA3 fingerprint identifies a client using key characteristics from a TLS request.","items":{"type":"string"}},"exception_url":{"type":"array","description":"A regular expression that identifies traffic that will be exempt from bot detection by URL.","items":{"type":"string"}},"exception_user_agent":{"type":"array","description":"A regular expression that identifies traffic that will be exempt from bot detection by user agent.","items":{"type":"string"}},"inspect_known_bots":{"type":"boolean","description":"Determines whether Edgio will automatically detect the known bots defined within the `known_bots` array."},"known_bots":{"type":"array","description":"Contains the set of known bots that Edgio may automatically detect and the enforcement action that may be applied to them.","items":{"$ref":"#/components/schemas/KnownBotObj"}},"customer_id":{"type":"string","description":"\nYour organization's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab). \n\nFrom the Edgio Console, select your organization from the top menu and then click **Settings**. It is listed under **Organization ID**.\n"},"last_modified_date":{"type":"string","description":"The date and time at which this configuration was last modified."},"last_modified_by":{"type":"string","description":"The Edgio Console user that last modified this access rule. This field does not reflect updates performed through the REST API."},"name":{"type":"string","description":"The bot manager configuration's name."},"spoof_bot_action_type":{"type":"string","description":"\nThe enforcement action that will be applied to traffic spoofing a known bot defined within the `known_bots` array. \n\n<a href=\"https://docs.edg.io/guides/security/bot_rules#actions\" target=\"_blank\">Learn more about enforcement actions.</a>\n","enum":["ALERT","BLOCK_REQUEST","CUSTOM_RESPONSE","BROWSER_CHALLENGE","REDIRECT_302","RECAPTCHA"]},"team_config":{"type":"boolean","description":"This property must always be `true`. If passed in the request, set it to `true`."}},"required":["team_config"]}},"parameters":{"organization_id":{"name":"organization_id","in":"path","required":true,"description":"\nYour organization's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab). \n\nFrom the Edgio Console, select your organization from the top menu and then click **Settings**. It is listed under **Organization ID**.\n","schema":{"type":"string"}},"acl_id":{"name":"acl_id","in":"path","required":true,"description":"\nAn access rule's system-defined ID. \n\nUse the [Get All Access Rules operation](#tag/Access-Control-List-(ACL)/operation/get-acl-rules) to retrieve a list of access rules and their system-defined IDs.\n","schema":{"type":"string"}},"rule_id":{"name":"rule_id","in":"path","required":true,"description":"\nA custom rule's system-defined ID. \n\nUse the [Get All Custom Rules operation](#tag/Custom-Rules/operation/get-custom-rules) to retrieve a list of custom rules and their system-defined IDs.\n","schema":{"type":"string"}},"limit_id":{"name":"limit_id","in":"path","required":true,"description":"\nA rate rule's system-defined ID. \n\nUse the [Get All Rate Rules operation](#tag/Rate-Rules-(Limits)/operation/get-rate-rules) to retrieve a list of rate rules and their system-defined IDs.\n","schema":{"type":"string"}},"profile_id":{"name":"profile_id","in":"path","required":true,"description":"\nA managed rule's system-defined ID. \n\nUse the [Get All Managed Rules operation](#tag/Managed-Rules-(Profiles)/operation/get-managed-rules) to retrieve a list of managed rules and their system-defined IDs.\n","schema":{"type":"string"}},"api_gateway_id":{"name":"api_gateway_id","in":"path","required":true,"description":"\nAn API Security Ruleset's system-defined ID. \n\nUse the [Get All API Security Rulesets operation](#tag/API-Gateways/operation/get-api-gateways) to retrieve a list of API Security Rulesets and their system-defined IDs.\n","schema":{"type":"string"}},"api_schema_id":{"name":"api_schema_id","in":"path","required":true,"description":"\nAn API schema's system-defined ID. \n\nUse the [Get All API Schemas operation](#tag/API-Schemas/operation/get-api-schemas) to retrieve a list of API schemas and their system-defined IDs.\n","schema":{"type":"string"}},"bot_id":{"name":"bot_id","in":"path","required":true,"description":"\nA bot ruleset's system-defined ID. \n\nUse the [Get All Bot Rulesets operation](#tag/Bot-Rules/operation/get-bot-rules) to retrieve a list of bot rulesets and their system-defined IDs.\n","schema":{"type":"string"}},"bot_manager_id":{"name":"bot_manager_id","in":"path","required":true,"description":"\nA bot manager configuration's system-defined ID.\n\nUse the [Get All Bot Managers operation](#tag/Bot-Managers/operation/get-bot-managers) to retrieve a list of bot manager configurations and their system-defined IDs.\n","schema":{"type":"string"}}},"responses":{"error_429":{"description":"Too Many Requests. Rate limit exceeded.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"error_500":{"description":"Internal Server Error. An unexpected error occured.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"error_404":{"description":"Not Found. The requested resource does not exist.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"error_400":{"description":"Bad Request.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"error_403":{"description":"Forbidden.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}}},"requestBodies":{"Scopes":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Scopes"}}},"required":true},"Acl":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Acl"}}},"required":true},"Rule":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Rule"}}},"required":true},"Limit":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Limit"}}},"required":true},"Profile":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Profile"}}},"required":true},"APIGateway":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiGateway"}}},"required":true},"APISchema":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiSchema"}}},"required":true},"Bot":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Bot"}}},"required":true},"BotManager":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BotManager"}}},"required":true}}},"x-tagGroups":[{"name":"Cache","tags":["purge requests"]},{"name":"Deployments","tags":["configs","deployments"]},{"name":"TLS Certificates","tags":["tls-certs"]},{"name":"WAF (Security)","tags":["Access Control List (ACL)","API Gateways","API Schemas","Rate Rules (Limits)","Bot Managers","Bot Rules","Known Bots","Custom Rules","Managed Rules (Profiles)","Edgio Rulesets","Security Applications (Scopes)"]},{"name":"Organizations","tags":["organizations"]},{"name":"Properties","tags":["properties","environments"]}]}
