{
  "openapi": "3.0.1",
  "info": {
    "title": "Edgio REST API",
    "version": "0.0.4",
    "x-logo": {
      "url": "https://docs.edg.io/_next/static/media/edgio-dark.ea0d686f.webp",
      "backgroundColor": "#FFFFFF",
      "altText": "Logo",
      "href": "https://docs.edg.io"
    },
    "description": "Our REST-compliant web services facilitate the integration of our services into your workflow(s), applications, or interfaces.\n\n## Introduction\n\nKey information about our REST API services:\n\n-   **Protocol:** HTTPS\n    \n    Communication (i.e., request-response) with our web services is only permitted through HTTPS. This ensures the privacy and integrity of your data.\n\n-   **Authentication/Authorization:** `Authorization` Header\n    \n    Authenticate and authorize your requests by generating a token and then passing it through the `Authorization` header:\n       \n    ```\n    Authorization: Bearer <OAUTH 2.0 TOKEN>\n    ```\n    \n    [Get started.](#section/Quick-Start)\n\n-   **Request-Response (Accept and Content-Type):** JSON\n    \n    We expect the request body to use JavaScript Object Notation (JSON) format. Inform our web servers that the expected format for the request-response will be JSON through the `Accept` and `Content-Type` request headers.\n    \n-   **Programming Language:** Agnostic\n    \n    Our REST API services are designed to be programming language-agnostic. Feel free to use your preferred programming language (e.g., JavaScript, Python, C#, etc.).\n\n-   **Services:** Our REST API consists of the following services:\n\n    | Service      | Version | Functionality                                                                                                               |\n    | ------------ |-------- | --------------------------------------------------------------------------------------------------------------------------- |\n    | cache        | 0.1     | Purge cached content and find out purge status.                                                                             |\n    | config       | 0.1     | Deploy CDN configurations, retrieve deployment information and log data, and manage environment variables.                  |\n    | accounts     | 0.1     | Retrieve and manage organizations, properties, and environments.                                                            |\n    | waf          | 0.9     | Retrieve and manage the following configurations: security apps, access rules, rate rules, custom rules, and managed rules. |\n    | bot-security | 0.9     | Retrieve and manage bot manager configurations.                                                                             |\n    | api-security | 0.9     | Retrieve and manage API security configurations.                                                                            |\n\n    Each service is versioned independently. This allows us to apply major enhancements to a service without impacting other services.\n\n## Quick Start\n\nGet started with our latest APIs by performing the following steps:\n\n1. <a href=\"https://docs.edg.io/guides/develop/rest_api/authentication#administering-api-clients\" target=\"_blank\">Create an API client</a> for either your private space or the desired organization. Grant the set of scope(s) required by the endpoint(s) with which it will interact. Administer API clients from the <a href=\"https://edgio.app\" target=\"_blank\">Edgio Console's</a> **API Clients** page. \n2. Use this client's ID, secret key, and scopes to [generate a temporary access token](#section/Access-Tokens).\n3. Authorize your API requests by passing the temporary access token generated in the previous step through the `Authorization` request header.\n\n```\ncurl --request GET \\\n     --url https://edgioapis.com/waf/v0.9/12345678-1234-1234-1234-1234567890ab/scopes \\\n     --header 'Authorization: Bearer  A1bcbGciImtpZCI6Ij13N1VGQ01z...17cRRKYQ'\n```\n\n## Scopes\n\nA scope authorizes an API client to perform specific actions (e.g., create and retrieve configurations). One or more scope(s) must also be defined when requesting an access token. You may only specify a scope that has been explicitly granted or inherited from a broader scope. Common scopes are listed below.\n\n| Scope            | Description                                                                                                                                  |\n| ---------------- | -------------------------------------------------------------------------------------------------------------------------------------------- |\n| app.cache        | Authorizes full access for purging cached content and retrieve purge status information.                                                     |\n| app.config       | Authorizes full access for deploying CDN configurations, retrieving deployment information and log data, and managing environment variables. |\n| app.accounts     | Authorizes full access to manage organizations, properties, and environments.                                                                |\n| app.waf          | Authorizes full access to security apps, access rules, rate rules, custom rules, and managed rules.                                          |\n| app.bot_security | Authorizes full access to Bot Manager.                                                                                                       |\n| app.api_security | Authorizes full access to API Security.                                                                                                      |\n\n## Access Tokens \n\nEach request to a REST API service must be authorized by passing an access token to the `Authorization` request header. Access tokens provide temporary authorization (e.g., 1 minute) to our REST API service. Once an access token expires, it may no longer be used to authorize requests. Attempting to authorize a request with an expired token will result in a `401 Unauthenticated Access` response.\n\nRequesting an access token requires:\n\n-   Submitting a `POST` request to the following URL:\n\n    `https://id.edgio.app/connect/token`\n\n-   A `Content-Type` header set to `application/x-www-form-urlencoded`.\n-   A request body set to:\n\n    ```\n    client_id=<CLIENT ID>&client_secret=<SECRET>&grant_type=client_credentials&scope=<SCOPES>\n    ```\n\n    -   `<CLIENT ID>`**:** Represents the system-defined ID assigned to your <a href=\"https://docs.edg.io/guides/develop/rest_api/authentication#administering-api-clients\" target=\"_blank\">REST API client</a>.\n    -   `<SECRET>`**:** Represents the secret assigned to your REST API client.\n    -   `<SCOPES>`**:** Replace this term with one or more scopes. Use the plus symbol (+) to delimit each scope. \n\n**Sample access token request:**\n\n``` curl\ncurl --request POST \\\n  --url https://id.edgio.app/connect/token \\\n  --header 'content-type: application/x-www-form-urlencoded' \\\n  --data 'client_id=J23d...B2Cd&client_secret=Fdad...DF3v&grant_type=client_credentials&scope=app.waf'\n```\n\n**Sample response:**\n\n```\n{\n    \"access_token\": \"A1bcbGciImtpZCI6Ij13N1VGQ01z...17cRRKYQ\",\n    \"expires_in\": 300,\n    \"token_type\": \"Bearer\",\n    \"scope\": \"app.waf\"\n}\n```\n\n### Authorizing Requests\n\nPass an access token through the `Authorization` header when requesting the desired API operation.\n\n**Sample API request:**\n\n```\ncurl --request GET \\\n     --url https://edgioapis.com/waf/v0.9/12345678-1234-1234-1234-1234567890ab/scopes \\\n     --header 'Authorization: Bearer  A1bcbGciImtpZCI6Ij13N1VGQ01z...17cRRKYQ'\n```\n\n## HTTP Methods\n\nHTTP method is a critical component of a request to our REST API service as it determines the type of action being requested.\n\n-   **DELETE:** Deletes a resource (e.g., custom rule or managed rule configuration).\n-   **GET:** Retrieves all or a specific resource.\n-   **PATCH:** Partially updates a resource (e.g., environment).\n-   **POST:** Creates a resource (e.g., custom rule or managed rule configuration).\n-   **PUT:** Updates a resource (e.g., custom rule or managed rule configuration).\n\nOur REST API service may return a `405 Method Not Allowed` response for requests submitted with an unsupported HTTP method.\n  \n## Request URL\n\nThe base URL for our REST API follows this basic pattern:\n\n`https://edgioapis.com/<SERVICE>/<VERSION>/`\n\n-   `<SERVICE>`**:** Identifies the REST API web service (e.g., cache, waf, and bot-security) designed to manage requests for a specific set of resources.\n-   `<VERSION>`**:** Identifies the version of the REST API service that will be called.\n\n**Sample Request URL:** \n\n```\nhttps://edgioapis.com/cache/v0.1/purge-requests\n```\n\n## Request Headers\n\nRequest headers provide information about your request to a REST API service. This information allows our server to authenticate your request and provides information that allows it to receive and translate the request body.\n\n**Key information:**\n-   The use of a Byte Order Mark (BOM) in a request to the REST API is not supported. Some user agents are configured to automatically include a BOM. Please either configure the user agent to exclude the BOM or use a different user agent.\n-   Request header values are case-insensitive.\n\n| Request Header | Description                                                                                                                                                                                                         |\n| -------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Authorization  | Authorize requests through the `Authorization` request header. <a href=\"https://docs.edg.io/guides/develop/rest_api/authentication#authorizing-requests\" target=\"_blank\">Learn more about authorization.</a>                                                       |\n| Accept         | This header should indicate the format in which the response will be returned. If you pass this header, set it to: `application/json`.                                                                |\n| Content-Type   | This header should indicate the format of the request body. If you pass this header, set it to: `application/json`. <br />You may omit this header when an endpoint does not have request properties. |\n| Host           | This header, which is set by the user agent, indicates the host name corresponding to the requested endpoint (i.e., edgioapis.com or id.edgio.app).                                                                               |\n| Content-Length | This header, which is set by the user agent, indicates the number of bytes contained in the request body.                                                                                                           |\n\n## Request Body\n\n`POST`, `PUT`, and `PATCH` requests typically require request body properties that describe the action that will take place. These request body properties are case-sensitive.\n\n## Response Headers\n\nResponse headers provide information about the response to your request to the REST API service. A brief description is provided for the response headers that are returned by most endpoints. Standard HTTP response headers are typically returned along with these common response headers.\n\n| Response Header | Description                                                                          |\n| --------------- | ------------------------------------------------------------------------------------ |\n| Cache-Control   | Indicates the cache-control policy for the response body.                            |\n| Content-Length  | Indicates the number of bytes in the response body.                                  |\n| Content-Type    | Indicates the format of the response body (e.g., `application/json; charset=utf-8`). |\n| I_am            | This header is reserved for internal use.                                            |\n| Date            | Identifies the date and time (UTC) at which your request was processed.              |\n"
  },
  "tags": [
    {
      "name": "tls-certs",
      "x-displayName": "TLS Certificates",
      "description": "Automate TLS certificate management."
    },
    {
      "name": "deployments",
      "x-displayName": "Deployment Info",
      "description": "Retrieve information and log data for a previous deployment."
    },
    {
      "name": "configs",
      "x-displayName": "CDN Configuration",
      "description": "Deploy or retrieve a CDN configuration."
    },
    {
      "name": "environment-variables",
      "x-displayName": "Environment Variables",
      "description": "Automate environment variable management."
    },
    {
      "name": "purge requests",
      "x-displayName": "Purge",
      "description": "Purge cached content and retrieve information about previously submitted purge requests."
    },
    {
      "name": "environments",
      "x-displayName": "Environments",
      "description": "\nAutomate environment management.\n\nYou may also [manage environment variables](#tag/environment-variables) through our REST API.\n"
    },
    {
      "name": "properties",
      "x-displayName": "Properties",
      "description": "Automate property management."
    },
    {
      "name": "organizations",
      "x-displayName": "Organizations",
      "description": "Automate organization management."
    },
    {
      "name": "Security Applications (Scopes)",
      "x-displayName": "Security Apps",
      "description": "\nA Security App:\n\n-   Identifies the set of traffic to which it applies by hostname, a URL path, or both.\n\n-   Defines how threats will be detected through access rules, API security ruleset, rate rules, bot manager configuration, custom ruleset, and managed rules.\n\n-   Audit new access rules, API Security rules, custom rules, and managed rules.\n\n-   Defines the production and audit enforcement action that will be applied to the requests identified as threats by access rules, API security ruleset, rate rules, custom ruleset, and managed rules.\n\n<a href=\"https://docs.edg.io/guides/security/security_applications\" target=\"_blank\">Learn more about Security Apps.</a>\n"
    },
    {
      "name": "Access Control List (ACL)",
      "x-displayName": "Access Rules",
      "description": "\nAn access rule identifies legitimate traffic and threats through access controls.\n\n<a href=\"https://docs.edg.io/guides/security/access_rules\" target=\"_blank\">Learn more about access rules.</a>\n"
    },
    {
      "name": "Custom Rules",
      "x-displayName": "Custom Rules",
      "description": "\nA custom rule tailors how Edgio Security identifies a threat.\n\n<a href=\"https://docs.edg.io/guides/security/custom_rules\" target=\"_blank\">Learn more about custom rules.</a>\n"
    },
    {
      "name": "Rate Rules (Limits)",
      "x-displayName": "Rate Rules",
      "description": "\nA rate rule restricts the flow of site traffic.\n\n<a href=\"https://docs.edg.io/guides/security/rate_rules\" target=\"_blank\">Learn more about rate rules.</a>\n"
    },
    {
      "name": "Managed Rules (Profiles)",
      "x-displayName": "Managed Rules (Profiles)",
      "description": "\nA managed rule identifies threats through predefined security policies. You may fine-tune these security policies to prevent false positives. \n\n\n<a href=\"https://docs.edg.io/guides/security/managed_rules\" target=\"_blank\">Learn more about managed rules.</a>\n"
    },
    {
      "name": "Edgio Rulesets",
      "x-displayName": "Edgio Rulesets",
      "description": "\nAn Edgio ruleset contains a set of managed security policies that identifies threats and provides generic protection against a variety of unknown vulnerabilities. Edgio rulesets are versioned. A new version is released whenever an Edgio ruleset is updated.\n"
    },
    {
      "name": "Bot Rules",
      "x-displayName": "Bot Ruleset",
      "description": "\nA bot ruleset contains one or more rule(s) for determining how bots will be identified. \n      \n<a href=\"https://docs.edg.io/guides/security/bot_rules#bot-manager-configuration\" target=\"_blank\">Learn more about bot rulesets.</a>\n"
    },
    {
      "name": "Bot Managers",
      "x-displayName": "Bot Manager Configuration",
      "description": "\nA bot manager configuration:\n\n  -   Identifies a bot ruleset.\n  \n  -   The enforcement action that will be applied to traffic identified as a bot.\n  \n  -   Determines whether known bots will be automatically detected and the enforcement action that will be applied to that traffic.\n  \n  -   Traffic that will be exempt from bot detection.\n\n<a href=\"https://docs.edg.io/guides/security/bot_rules\" target=\"_blank\">Learn more about bot manager.</a>\n"
    },
    {
      "name": "Known Bots",
      "x-displayName": "Known Bots",
      "description": "Lists all known bots."
    },
    {
      "name": "API Gateways",
      "x-displayName": "API Security Ruleset",
      "description": "\nAn API Security ruleset contains one or more API Security rule(s). Each of these rules identifies an API schema and the conditions under which it will be enforced.\n\nBy default, Edgio validates all `POST`, `PUT`, and `PATCH` requests that satisfy your security app’s hostname and URL path requirements. If your website uses those HTTP methods for non-API requests, then it is strongly recommended to define one or more URL path(s) within your API Security rule.\n\n<a href=\"https://docs.edg.io/guides/security/api_security#api-security-rule\" target=\"_blank\">Learn more about API Security rules.</a>\n"
    },
    {
      "name": "API Schemas",
      "x-displayName": "API Schemas",
      "description": "\nAn API schema is a JSON schema that describes the structure for a valid API payload.\n\n<a href=\"https://docs.edg.io/guides/security/api_security#json-schema-syntax\" target=\"_blank\">Learn more about supported JSON schema syntax.</a>\n"
    }
  ],
  "paths": {
    "/config/v0.1/tls-certs/{cert_id}": {
      "servers": [
        {
          "url": "https://edgioapis.com"
        }
      ],
      "security": [
        {
          "configScope": [
            "app.config"
          ]
        }
      ],
      "get": {
        "tags": [
          "tls-certs"
        ],
        "summary": "Get TLS Certificate",
        "description": "Returns a TLS certificate.",
        "operationId": "getConfigV01TlsCertsCertId",
        "parameters": [
          {
            "name": "cert_id",
            "in": "path",
            "description": "The TLS certificate's system-defined ID. Use the [Get All Certificates operation](#tag/tls-certs/operation/getConfigV01TlsCerts) to retrieve a list of TLS certificates and their system-defined IDs.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a TLS certificate.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Config_V1_Entities_TlsCert"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        }
      }
    },
    "/config/v0.1/tls-certs": {
      "servers": [
        {
          "url": "https://edgioapis.com"
        }
      ],
      "security": [
        {
          "configScope": [
            "app.config"
          ]
        }
      ],
      "get": {
        "tags": [
          "tls-certs"
        ],
        "summary": "Get All TLS Certificates",
        "description": "Returns all TLS certificates associated with an environment.",
        "operationId": "getConfigV01TlsCerts",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results per page. Valid values are: 1 - 100. **Default value:** 20",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "environment_id",
            "in": "query",
            "description": "An environment's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab).\n\nFrom the Edgio Console, navigate to the desired environment and then click **Settings**. It is listed under **Environment ID**.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all TLS certificates associated with an environment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Config_V1_Entities_TlsCert_Collection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tls-certs"
        ],
        "summary": "Upload TLS Certificate",
        "description": "Upload your TLS certificate to activate it within a specific environment.",
        "operationId": "postConfigV01TlsCerts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postConfigV01TlsCerts"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Upload your TLS certificate to activate it within a specific environment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Config_V1_Entities_TlsCert"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "postConfigV01TlsCerts"
      }
    },
    "/config/v0.1/deployments/{deployment_id}/logs": {
      "servers": [
        {
          "url": "https://edgioapis.com"
        }
      ],
      "security": [
        {
          "configScope": [
            "app.config"
          ]
        }
      ],
      "get": {
        "tags": [
          "deployments"
        ],
        "summary": "Get Deployment Logs",
        "description": "Retrieve log data for a specific deployment.",
        "operationId": "getConfigV01DeploymentsDeploymentIdLogs",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "description": "The deployment's system-defined ID. This ID is returned by the [Deploy CDN Configuration operation's](#tag/configs/operation/postConfigV01Configs) `id` property.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve log data for a specific deployment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Config_V1_Entities_Deployment_Logs"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        }
      }
    },
    "/config/v0.1/deployments/{deployment_id}": {
      "servers": [
        {
          "url": "https://edgioapis.com"
        }
      ],
      "security": [
        {
          "configScope": [
            "app.config"
          ]
        }
      ],
      "get": {
        "tags": [
          "deployments"
        ],
        "summary": "Get Deployment",
        "description": "Retrieve information about a specific deployment.",
        "operationId": "getConfigV01DeploymentsDeploymentId",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "description": "The deployment's system-defined ID. This ID is returned by the [Deploy CDN Configuration operation's](#tag/configs/operation/postConfigV01Configs) `id` property.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve information about a specific deployment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Config_V1_Entities_Deployment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        }
      }
    },
    "/config/v0.1/configs/{config_id}": {
      "servers": [
        {
          "url": "https://edgioapis.com"
        }
      ],
      "security": [
        {
          "configScope": [
            "app.config"
          ]
        }
      ],
      "get": {
        "tags": [
          "configs"
        ],
        "summary": "Get CDN Configuration",
        "description": "Retrieve an environment's origin configurations, hostnames, rules, and experiments.\n\nUse the [Get Environment operation](#tag/environments/operation/getAccountsV01EnvironmentsEnvironmentId) to retrieve the system-defined ID (`@links.active_config.id`) for an environment's active configuration\n",
        "operationId": "getConfigV01ConfigsConfigId",
        "parameters": [
          {
            "name": "config_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve an environment's origin configurations, hostnames, rules, and experiments.\n\nUse the [Get Environment operation](#tag/environments/operation/getAccountsV01EnvironmentsEnvironmentId) to retrieve the system-defined ID (`@links.active_config.id`) for an environment's active configuration\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Config_V1_Entities_Config"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        }
      }
    },
    "/config/v0.1/configs": {
      "servers": [
        {
          "url": "https://edgioapis.com"
        }
      ],
      "security": [
        {
          "configScope": [
            "app.config"
          ]
        }
      ],
      "post": {
        "tags": [
          "configs"
        ],
        "summary": "Deploy CDN Configuration",
        "description": "Deploys your configuration to a specific environment. This deployment overwrites any existing origin configurations, hostnames, rules, and experiments.\n",
        "operationId": "postConfigV01Configs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postConfigV01Configs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Deploys your configuration to a specific environment. This deployment overwrites any existing origin configurations, hostnames, rules, and experiments.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Config_V1_Entities_Config"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "postConfigV01Configs"
      }
    },
    "/config/v0.1/environment-variables/{environment_variable_id}": {
      "servers": [
        {
          "url": "https://edgioapis.com"
        }
      ],
      "security": [
        {
          "configScope": [
            "app.config"
          ]
        }
      ],
      "get": {
        "tags": [
          "environment-variables"
        ],
        "summary": "Get Environment Variable",
        "description": "Returns an environment variable.",
        "operationId": "getConfigV01EnvironmentVariablesEnvironmentVariableId",
        "parameters": [
          {
            "name": "environment_variable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an environment variable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Config_V1_Entities_EnvironmentVariable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "environment-variables"
        ],
        "summary": "Delete Environment Variable",
        "description": "Deletes an environment variable.",
        "operationId": "deleteConfigV01EnvironmentVariablesEnvironmentVariableId",
        "parameters": [
          {
            "name": "environment_variable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deletes an environment variable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Config_V1_Entities_EnvironmentVariable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        }
      }
    },
    "/config/v0.1/environment-variables": {
      "servers": [
        {
          "url": "https://edgioapis.com"
        }
      ],
      "security": [
        {
          "configScope": [
            "app.config"
          ]
        }
      ],
      "get": {
        "tags": [
          "environment-variables"
        ],
        "summary": "Get All Environment Variables",
        "description": "Returns all environment variables associated with an environment.",
        "operationId": "getConfigV01EnvironmentVariables",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results per page. Valid values are: 1 - 100. **Default value:** 20",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "Find an environment variable by its key.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environment_id",
            "in": "query",
            "description": "An environment's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab).\n\nFrom the Edgio Console, navigate to the desired environment and then click **Settings**. It is listed under **Environment ID**.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all environment variables associated with an environment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Config_V1_Entities_EnvironmentVariable_Collection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "environment-variables"
        ],
        "summary": "Set Environment Variable",
        "description": "Creates or updates an environment variable.",
        "operationId": "putConfigV01EnvironmentVariables",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/putConfigV01EnvironmentVariables"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Creates or updates an environment variable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Config_V1_Entities_EnvironmentVariable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "putConfigV01EnvironmentVariables"
      }
    },
    "/cache/v0.1/purge-requests/{request_id}": {
      "servers": [
        {
          "url": "https://edgioapis.com"
        }
      ],
      "security": [
        {
          "oAuthCacheScope": [
            "app.cache"
          ]
        }
      ],
      "get": {
        "tags": [
          "purge requests"
        ],
        "summary": "Get Purge Request",
        "description": "Retrieves information, including status, about a purge request.",
        "operationId": "getCacheV01PurgeRequestsRequestId",
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "description": "The purge request's system-defined ID. This ID is returned by the [Purge Cache operation](#tag/purge-requests/operation/postCacheV01PurgeRequests).\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieves information, including status, about a purge request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cache_V1_Entities_PurgeRequest"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        }
      }
    },
    "/cache/v0.1/purge-requests": {
      "servers": [
        {
          "url": "https://edgioapis.com"
        }
      ],
      "security": [
        {
          "configScope": [
            "app.config"
          ]
        }
      ],
      "post": {
        "tags": [
          "purge requests"
        ],
        "summary": "Purge Cache",
        "description": "Submits a request to purge cached content from a specific environment. Purging content invalidates the cached version of an asset from our edge servers. You may submit up to 50 concurrent purge requests. For the purpose of concurrency, each value defined within the `values` property is considered a separate purge request. Find out the current status of your purge request by passing the purge request ID, which is returned by the `id` property, to the [Get Purge Request operation](#tag/purge-requests/operation/getCacheV01PurgeRequestsRequestId).\n",
        "operationId": "postCacheV01PurgeRequests",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postCacheV01PurgeRequests"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Submits a request to purge cached content from a specific environment. Purging content invalidates the cached version of an asset from our edge servers. You may submit up to 50 concurrent purge requests. For the purpose of concurrency, each value defined within the `values` property is considered a separate purge request. Find out the current status of your purge request by passing the purge request ID, which is returned by the `id` property, to the [Get Purge Request operation](#tag/purge-requests/operation/getCacheV01PurgeRequestsRequestId).\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cache_V1_Entities_PurgeRequest"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "postCacheV01PurgeRequests"
      }
    },
    "/accounts/v0.1/environments/{environment_id}": {
      "servers": [
        {
          "url": "https://edgioapis.com"
        }
      ],
      "security": [
        {
          "accountsScope": [
            "app.accounts"
          ]
        }
      ],
      "get": {
        "tags": [
          "environments"
        ],
        "summary": "Get Environment",
        "description": "Retrieves an environment's settings and metadata. The system-defined ID for the environment's active configuration is returned by the `@links.active_config.id` property.\"\n",
        "operationId": "getAccountsV01EnvironmentsEnvironmentId",
        "parameters": [
          {
            "name": "environment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieves an environment's settings and metadata. The system-defined ID for the environment's active configuration is returned by the `@links.active_config.id` property.\"\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Accounts_V1_Entities_Environment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "environments"
        ],
        "summary": "Delete Environment",
        "description": "Deletes an environment.",
        "operationId": "deleteAccountsV01EnvironmentsEnvironmentId",
        "parameters": [
          {
            "name": "environment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deletes an environment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Accounts_V1_Entities_Environment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "environments"
        ],
        "summary": "Update Environment",
        "description": "Updates an environment.",
        "operationId": "patchAccountsV01EnvironmentsEnvironmentId",
        "parameters": [
          {
            "name": "environment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/patchAccountsV01EnvironmentsEnvironmentId"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updates an environment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Accounts_V1_Entities_Environment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "patchAccountsV01EnvironmentsEnvironmentId"
      }
    },
    "/accounts/v0.1/environments": {
      "servers": [
        {
          "url": "https://edgioapis.com"
        }
      ],
      "security": [
        {
          "accountsScope": [
            "app.accounts"
          ]
        }
      ],
      "get": {
        "tags": [
          "environments"
        ],
        "summary": "Get All Environments",
        "description": "Returns all environments that belong to the specified property.",
        "operationId": "getAccountsV01Environments",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results per page. Valid values are: 1 - 100. **Default value:** 20",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "property_id",
            "in": "query",
            "description": "The property's system-defined ID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all environments that belong to the specified property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Accounts_V1_Entities_Environment_Collection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "environments"
        ],
        "summary": "Add Environment",
        "description": "Creates an environment.",
        "operationId": "postAccountsV01Environments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postAccountsV01Environments"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Creates an environment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Accounts_V1_Entities_Environment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "postAccountsV01Environments"
      }
    },
    "/accounts/v0.1/properties/{property_id}": {
      "servers": [
        {
          "url": "https://edgioapis.com"
        }
      ],
      "security": [
        {
          "accountsScope": [
            "app.accounts"
          ]
        }
      ],
      "get": {
        "tags": [
          "properties"
        ],
        "summary": "Get Property",
        "description": "Retrieve a property.",
        "operationId": "getAccountsV01PropertiesPropertyId",
        "parameters": [
          {
            "name": "property_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve a property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Accounts_V1_Entities_Property"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "properties"
        ],
        "summary": "Delete Property",
        "description": "Delete a property.",
        "operationId": "deleteAccountsV01PropertiesPropertyId",
        "parameters": [
          {
            "name": "property_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete a property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Accounts_V1_Entities_Property"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "properties"
        ],
        "summary": "Update Property",
        "description": "Update a property.",
        "operationId": "patchAccountsV01PropertiesPropertyId",
        "parameters": [
          {
            "name": "property_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/patchAccountsV01PropertiesPropertyId"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Update a property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Accounts_V1_Entities_Property"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "patchAccountsV01PropertiesPropertyId"
      }
    },
    "/accounts/v0.1/properties": {
      "servers": [
        {
          "url": "https://edgioapis.com"
        }
      ],
      "security": [
        {
          "accountsScope": [
            "app.accounts"
          ]
        }
      ],
      "get": {
        "tags": [
          "properties"
        ],
        "summary": "Get All Properties",
        "description": "Returns all properties.",
        "operationId": "getAccountsV01Properties",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "0-based page number.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results per page. Valid values are: 1 - 100. **Default value:** 20",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "An organization's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab).\n\nFrom the Edgio Console, navigate to the desired organization and then click **Settings**. It is listed under **Organization ID**.\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all properties.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Accounts_V1_Entities_Property_Collection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "properties"
        ],
        "summary": "Create Property",
        "description": "Create a property.",
        "operationId": "postAccountsV01Properties",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postAccountsV01Properties"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Create a property.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Accounts_V1_Entities_Property"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "postAccountsV01Properties"
      }
    },
    "/accounts/v0.1/organizations/{organization_id}": {
      "servers": [
        {
          "url": "https://edgioapis.com"
        }
      ],
      "security": [
        {
          "accountsScope": [
            "app.accounts"
          ]
        }
      ],
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "Get Organization",
        "description": "Retrieves information about an organization.",
        "operationId": "getAccountsV01OrganizationsOrganizationId",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieves information about an organization.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Accounts_V1_Entities_Organization"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "organizations"
        ],
        "summary": "Delete Organization",
        "description": "Deletes an organization.",
        "operationId": "deleteAccountsV01OrganizationsOrganizationId",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deletes an organization.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Accounts_V1_Entities_Organization"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "organizations"
        ],
        "summary": "Update Organization",
        "description": "Updates an organization.",
        "operationId": "patchAccountsV01OrganizationsOrganizationId",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/patchAccountsV01OrganizationsOrganizationId"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updates an organization.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Accounts_V1_Entities_Organization"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_UserError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApi_Entities_GeneralError"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "patchAccountsV01OrganizationsOrganizationId"
      }
    },
    "/{organization_id}/scopes": {
      "servers": [
        {
          "url": "https://edgioapis.com/waf/v0.9"
        }
      ],
      "security": [
        {
          "wafScope": [
            "app.waf"
          ]
        }
      ],
      "post": {
        "operationId": "create-security-applications",
        "tags": [
          "Security Applications (Scopes)"
        ],
        "summary": "Initialize Security App",
        "description": "Initializes Security App by creating your first Security App configuration. If one or more Security App(s) exist, you may only use the [Manage All Security Apps operation](#tag/Security-Applications-(Scopes)/operation/update-security-applications) to add, update, or delete Security Apps.",
        "security": [
          {
            "wafScope": [
              "app.waf"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organization_id"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Scopes"
        },
        "responses": {
          "200": {
            "description": "OK. A Security App was created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "get": {
        "operationId": "get-security-applications",
        "tags": [
          "Security Applications (Scopes)"
        ],
        "summary": "Get All Security Apps",
        "description": "Retrieves a list of Security Apps.",
        "security": [
          {
            "wafScope": [
              "app.waf"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organization_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. A list of Security Apps was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Scopes"
                },
                "example": {
                  "account_type": "E",
                  "bot_tier": "B",
                  "customer_id": "12345678-1234-1234-1234-1234567890ab",
                  "id": "aZC7ehsy",
                  "last_modified_by": "jsmith@example.com via Edgio AppOps Console",
                  "last_modified_date": "2023-09-29T19:47:25.334678Z",
                  "name": "New Name",
                  "scopes": [
                    {
                      "acl_audit_id": "6ZLms6Dh",
                      "acl_prod_action": {
                        "enf_type": "BLOCK_REQUEST",
                        "id": "4dXToEHF",
                        "name": "acl action"
                      },
                      "acl_prod_id": "xMKolMmb",
                      "bot_manager_config_id": "Ei2Zd66e",
                      "host": {
                        "is_case_insensitive": true,
                        "is_negated": false,
                        "type": "EM",
                        "values": [
                          "cdn.example.com"
                        ]
                      },
                      "id": "94kExYyx",
                      "limits": [
                        {
                          "action": {
                            "duration_sec": 300,
                            "enf_type": "CUSTOM_RESPONSE",
                            "id": "moHGmang",
                            "name": "limit action",
                            "response_body_base64": "Ym9keWJvZHlib2R5",
                            "status": 404
                          },
                          "id": "F60gu16u"
                        }
                      ],
                      "name": "Security App for cdn.example.com",
                      "path": {
                        "is_negated": false,
                        "type": "GLOB",
                        "value": "*"
                      },
                      "profile_audit_action": null,
                      "profile_audit_id": "YHtiNvh5",
                      "profile_prod_action": {
                        "enf_type": "BLOCK_REQUEST",
                        "id": "uohNJAQ6",
                        "name": "profile action"
                      },
                      "profile_prod_id": "YHtiNvh5"
                    },
                    {
                      "acl_audit_action": null,
                      "acl_audit_id": "VzhYZAMT",
                      "acl_prod_action": {
                        "enf_type": "BLOCK_REQUEST",
                        "id": "PHHBIEig",
                        "name": "acl action"
                      },
                      "acl_prod_id": "xMKolMmb",
                      "bot_manager_config_id": "Ei2Zd66e",
                      "host": {
                        "is_negated": false,
                        "type": "GLOB",
                        "value": "*"
                      },
                      "id": "Zcvn7YUS",
                      "limits": [
                        {
                          "action": {
                            "duration_sec": 300,
                            "enf_type": "REDIRECT_302",
                            "id": "1mJ8Sp9v",
                            "name": "limit action",
                            "url": "https://cdn2.example.com/waiting_room/"
                          },
                          "id": "F60gu16u"
                        }
                      ],
                      "name": "Security App for Resources",
                      "path": {
                        "is_negated": false,
                        "type": "GLOB",
                        "value": "/resources/*"
                      },
                      "profile_audit_action": null,
                      "profile_audit_id": "YHtiNvh5",
                      "profile_prod_action": {
                        "enf_type": "BLOCK_REQUEST",
                        "id": "8QZINnSu",
                        "name": "profile action"
                      },
                      "profile_prod_id": "IBXcaxuR",
                      "recaptcha_action_name": null,
                      "recaptcha_secret_key": null,
                      "recaptcha_site_key": null,
                      "rules_audit_action": null,
                      "rules_audit_id": null,
                      "rules_prod_action": null,
                      "rules_prod_id": null
                    }
                  ],
                  "team_config": true
                }
              }
            }
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "put": {
        "operationId": "update-security-applications",
        "tags": [
          "Security Applications (Scopes)"
        ],
        "summary": "Manage All Security Apps",
        "description": "\nCreates, updates, and deletes one or more Security App(s). Each Security App:\n\n-   Identifies the set of traffic to which it applies by hostname, a URL path, or both.\n\n-   Defines how threats will be detected through access rules, custom rules, managed rules, and rate rules.\n\n    If one or more condition group(s) have been defined within a rate rule, then traffic will only be rate limited when it also satisfies at least one of those condition groups.\n\n-   Defines how threats will be handled through a production enforcement action, audit enforcement action, or both.\n\n**Key information:**\n\n-   This operation allows you to quickly create, update, or delete one or more Security App(s). These actions cannot be undone.\n\n-   Create a Security App by adding a `scope` object to the request.\n\n-   Update a Security App by modifying the corresponding `scope` object in the request. The `id` property identifies the Security App that will be updated.\n\n-   Delete a Security App by excluding the corresponding `scope` object from the request.\n\n    All Security Apps that are not explicitly defined within the request will be deleted.\n\n-   The recommended method for updating your Security Apps is to perform the following steps:\n\n    1.  If you have not created at least one Security App, then you should do so either through the Edgio Console or through the [Initialize Security Apps operation](#tag/Security-Applications-(Scopes)/operation/create-security-applications).\n\n    2.  Retrieve your current set of Security Apps through the [Get All Security Apps operation](#tag/Security-Applications-(Scopes)/operation/get-security-applications).\n\n    3.  Add, modify, or remove Security App(s) from the response as needed.\n\n    4.  Pass the updated payload to this operation.\n",
        "security": [
          {
            "wafScope": [
              "app.waf"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organization_id"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Scopes"
        },
        "responses": {
          "200": {
            "description": "OK. A Security App was updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      }
    },
    "/{organization_id}/acls": {
      "servers": [
        {
          "url": "https://edgioapis.com/waf/v0.9"
        }
      ],
      "security": [
        {
          "wafScope": [
            "app.waf"
          ]
        }
      ],
      "post": {
        "operationId": "create-acl-rule",
        "tags": [
          "Access Control List (ACL)"
        ],
        "summary": "Add Access Rule",
        "description": "Creates an access rule that identifies threats through whitelists, accesslists, and blacklists.",
        "security": [
          {
            "wafScope": [
              "app.waf"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organization_id"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Acl"
        },
        "responses": {
          "200": {
            "description": "OK. An access rule was created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "get": {
        "operationId": "get-acl-rules",
        "tags": [
          "Access Control List (ACL)"
        ],
        "summary": "Get All Access Rules",
        "description": "Retrieves a list of access rules. An access rule identifies whether a request is a threat through whitelists, accesslists, and blacklists.",
        "security": [
          {
            "wafScope": [
              "app.waf"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organization_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. A list of access rules was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ObjShort"
                  }
                },
                "example": [
                  {
                    "id": "fMKolMmb",
                    "name": "My First Access Rule",
                    "super_capacity": false,
                    "last_modified_date": "2023-08-16T19:00:05.443647Z"
                  },
                  {
                    "id": "N2A2zH3K",
                    "name": "My Second Access Rule",
                    "super_capacity": false,
                    "last_modified_date": "2023-08-16T18:56:37.532190Z"
                  }
                ]
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      }
    },
    "/{organization_id}/acls/{acl_id}": {
      "servers": [
        {
          "url": "https://edgioapis.com/waf/v0.9"
        }
      ],
      "security": [
        {
          "wafScope": [
            "app.waf"
          ]
        }
      ],
      "parameters": [
        {
          "$ref": "#/components/parameters/organization_id"
        },
        {
          "$ref": "#/components/parameters/acl_id"
        }
      ],
      "get": {
        "operationId": "get-acl-rule",
        "tags": [
          "Access Control List (ACL)"
        ],
        "summary": "Get Access Rule",
        "description": "Retrieves an access rule that identifies threats through whitelists, accesslists, and blacklists.",
        "security": [
          {
            "wafScope": [
              "app.waf"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK. An access rule was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Acl"
                },
                "example": {
                  "allow_anonymous_proxy": true,
                  "allowed_http_methods": [
                    "GET",
                    "POST"
                  ],
                  "allowed_request_content_types": [
                    "application/json",
                    "application/x-amf",
                    "application/x-www-form-urlencoded",
                    "application/xml",
                    "multipart/form-data",
                    "text/html",
                    "text/plain",
                    "text/xml"
                  ],
                  "asn": {
                    "accesslist": [],
                    "blacklist": [],
                    "whitelist": []
                  },
                  "cookie": {
                    "accesslist": [],
                    "blacklist": [],
                    "whitelist": []
                  },
                  "country": {
                    "accesslist": [],
                    "blacklist": [],
                    "whitelist": []
                  },
                  "customer_id": "12345678-1234-1234-1234-1234567890ab",
                  "disallowed_extensions": [
                    ".asa",
                    ".asax",
                    ".ascx",
                    ".axd",
                    ".backup",
                    ".bak",
                    ".bat",
                    ".cdx",
                    ".cer",
                    ".cfg",
                    ".cmd",
                    ".conf",
                    ".config",
                    ".cs",
                    ".csproj",
                    ".csr",
                    ".dat",
                    ".db",
                    ".dbf",
                    ".dll",
                    ".dos",
                    ".exe",
                    ".htr",
                    ".htw",
                    ".ida",
                    ".idc",
                    ".idq",
                    ".inc",
                    ".ini",
                    ".key",
                    ".licx",
                    ".lnk",
                    ".log",
                    ".mdb",
                    ".old",
                    ".pass",
                    ".pdb",
                    ".pol",
                    ".printer",
                    ".pwd",
                    ".resources",
                    ".resx",
                    ".sql",
                    ".sys",
                    ".vb",
                    ".vbproj",
                    ".vbs",
                    ".vsdisco",
                    ".webinfo",
                    ".xsd",
                    ".xsx"
                  ],
                  "disallowed_headers": [],
                  "id": "6ZLms6Dh",
                  "ip": {
                    "accesslist": [],
                    "blacklist": [],
                    "whitelist": []
                  },
                  "last_modified_by": "jsernaque@edg.io via Edgio AppOps Console",
                  "last_modified_date": "2023-09-29T19:46:48.401989Z",
                  "max_file_size": 6291456,
                  "name": "My Access Rule",
                  "referer": {
                    "accesslist": [],
                    "blacklist": [],
                    "whitelist": []
                  },
                  "response_header_name": "",
                  "sd_iso": {
                    "accesslist": [],
                    "blacklist": [],
                    "whitelist": []
                  },
                  "super_capacity": false,
                  "team_config": true,
                  "url": {
                    "accesslist": [],
                    "blacklist": [],
                    "whitelist": []
                  },
                  "user_agent": {
                    "accesslist": [],
                    "blacklist": [],
                    "whitelist": []
                  },
                  "version": null
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "put": {
        "operationId": "update-acl-rule",
        "tags": [
          "Access Control List (ACL)"
        ],
        "summary": "Update Access Rule",
        "description": "Updates an access rule that identifies threats through whitelists, accesslists, and blacklists.",
        "security": [
          {
            "wafScope": [
              "app.waf"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Acl"
        },
        "responses": {
          "200": {
            "description": "OK. An access rule was updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "delete": {
        "operationId": "delete-acl-rule",
        "tags": [
          "Access Control List (ACL)"
        ],
        "summary": "Delete Access Rule",
        "description": "Deletes an access rule.",
        "security": [
          {
            "wafScope": [
              "app.waf"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK. An access rule was deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      }
    },
    "/{organization_id}/rules": {
      "servers": [
        {
          "url": "https://edgioapis.com/waf/v0.9"
        }
      ],
      "security": [
        {
          "wafScope": [
            "app.waf"
          ]
        }
      ],
      "post": {
        "operationId": "create-custom-rule",
        "tags": [
          "Custom Rules"
        ],
        "summary": "Add Custom Rule",
        "description": "Creates a custom rule that defines custom threat assessment criteria.",
        "security": [
          {
            "wafScope": [
              "app.waf"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organization_id"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Rule"
        },
        "responses": {
          "200": {
            "description": "OK. A custom rule was created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "get": {
        "operationId": "get-custom-rules",
        "tags": [
          "Custom Rules"
        ],
        "summary": "Get All Custom Rules",
        "description": "Retrieves a list of custom rules. A custom rule allows you to define custom threat assessment criterion.",
        "security": [
          {
            "wafScope": [
              "app.waf"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organization_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. A list of custom rules was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ObjShort"
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "id": "e3mpHQY5",
                        "name": "sample_rule_config",
                        "last_modified_date": "2023-09-29T22:28:09.790308Z"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      }
    },
    "/{organization_id}/rules/{rule_id}": {
      "servers": [
        {
          "url": "https://edgioapis.com/waf/v0.9"
        }
      ],
      "security": [
        {
          "wafScope": [
            "app.waf"
          ]
        }
      ],
      "parameters": [
        {
          "$ref": "#/components/parameters/organization_id"
        },
        {
          "$ref": "#/components/parameters/rule_id"
        }
      ],
      "get": {
        "operationId": "get-custom-rule",
        "tags": [
          "Custom Rules"
        ],
        "summary": "Get Custom Rule",
        "description": "Retrieves a custom rule. Use a custom rule to define custom threat assessment criteria.",
        "security": [
          {
            "wafScope": [
              "app.waf"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK. A custom rule was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rule"
                },
                "example": {
                  "customer_id": "ae2b89dc-b7a5-45bb-98af-5039ac0fe989",
                  "directive": [
                    {
                      "sec_rule": {
                        "action": {
                          "id": "66000001",
                          "msg": "Outside of North America",
                          "t": [
                            "NONE"
                          ]
                        },
                        "chained_rule": [],
                        "id": "R20zyMd4",
                        "name": "new custom rules 01",
                        "operator": {
                          "is_negated": true,
                          "is_regex": false,
                          "type": "EQ",
                          "value": "US, CA, MX"
                        },
                        "variable": [
                          {
                            "is_count": false,
                            "match": [
                              {
                                "is_negated": false,
                                "is_regex": false,
                                "value": "COUNTRY_CODE"
                              }
                            ],
                            "type": "GEO"
                          }
                        ]
                      }
                    }
                  ],
                  "id": "9kaZvYXo",
                  "last_modified_by": "jsmith@example.com via Edgio AppOps Console",
                  "last_modified_date": "2023-09-29T22:28:09.790308Z",
                  "name": "My Custom Rule",
                  "team_config": true
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "put": {
        "operationId": "update-custom-rule",
        "tags": [
          "Custom Rules"
        ],
        "summary": "Update Custom Rule",
        "description": "Updates a custom rule that defines custom threat assessment criteria.",
        "security": [
          {
            "wafScope": [
              "app.waf"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Rule"
        },
        "responses": {
          "200": {
            "description": "OK. A custom rule was updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "delete": {
        "operationId": "delete-custom-rule",
        "tags": [
          "Custom Rules"
        ],
        "summary": "Delete Custom Rule",
        "description": "Deletes a custom rule.",
        "security": [
          {
            "wafScope": [
              "app.waf"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK. A custom rule was deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      }
    },
    "/{organization_id}/limits": {
      "servers": [
        {
          "url": "https://edgioapis.com/waf/v0.9"
        }
      ],
      "security": [
        {
          "wafScope": [
            "app.waf"
          ]
        }
      ],
      "post": {
        "operationId": "create-rate-rule",
        "tags": [
          "Rate Rules (Limits)"
        ],
        "summary": "Add Rate Rule",
        "description": "Creates a rate rule that determines the maximum number of requests that will be allowed within a given time period.",
        "security": [
          {
            "wafScope": [
              "app.waf"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organization_id"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Limit"
        },
        "responses": {
          "200": {
            "description": "OK. A rate rule was created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/error_400"
          },
          "403": {
            "$ref": "#/components/responses/error_403"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "get": {
        "operationId": "get-rate-rules",
        "tags": [
          "Rate Rules (Limits)"
        ],
        "summary": "Get All Rate Rules",
        "description": "Retrieves a list of rate rules. A rate rule determines the maximum number of requests that will be allowed within a given time period.",
        "security": [
          {
            "wafScope": [
              "app.waf"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organization_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. A list of rate rules was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ObjShort"
                  }
                },
                "example": [
                  {
                    "id": "VzhYZAMT",
                    "name": "My Rate Rule",
                    "last_modified_date": "2023-09-28T00:16:18.589777Z"
                  },
                  {
                    "id": "F60gu16u",
                    "name": "CC Transactions",
                    "last_modified_date": "2023-09-27T00:16:12.389364Z"
                  }
                ]
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      }
    },
    "/{organization_id}/limits/{limit_id}": {
      "servers": [
        {
          "url": "https://edgioapis.com/waf/v0.9"
        }
      ],
      "security": [
        {
          "wafScope": [
            "app.waf"
          ]
        }
      ],
      "parameters": [
        {
          "$ref": "#/components/parameters/organization_id"
        },
        {
          "$ref": "#/components/parameters/limit_id"
        }
      ],
      "get": {
        "operationId": "get-rate-rule",
        "tags": [
          "Rate Rules (Limits)"
        ],
        "summary": "Get Rate Rule",
        "description": "Retrieves a rate rule. A rate rule determines the maximum number of requests that will be allowed within a given time period.",
        "security": [
          {
            "wafScope": [
              "app.waf"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK. A rate rule was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Limit"
                },
                "example": {
                  "condition_groups": [
                    {
                      "conditions": [
                        {
                          "op": {
                            "is_negated": true,
                            "type": "EM",
                            "values": [
                              "US",
                              "CA",
                              "MX"
                            ]
                          },
                          "target": {
                            "type": "GEO"
                          }
                        }
                      ],
                      "id": "VzhYZAMT",
                      "name": "Negative Country Match"
                    }
                  ],
                  "customer_id": "12345678-1234-1234-1234-1234567890ab",
                  "disabled": false,
                  "duration_sec": 60,
                  "id": "F60gu16u",
                  "keys": [
                    "IP"
                  ],
                  "last_modified_by": "jsmith@example.com via Edgio AppOps Console",
                  "last_modified_date": "2023-09-28T00:16:18.589777Z",
                  "name": "My Rate Rule",
                  "num": 200,
                  "team_config": true
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "put": {
        "operationId": "update-rate-rule",
        "tags": [
          "Rate Rules (Limits)"
        ],
        "summary": "Update Rate Rule",
        "description": "Updates a rate rule that determines the maximum number of requests that will be allowed within a given time period.",
        "requestBody": {
          "$ref": "#/components/requestBodies/Limit"
        },
        "responses": {
          "200": {
            "description": "OK. A rate rule was updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/error_400"
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "delete": {
        "operationId": "delete-rate-rule",
        "tags": [
          "Rate Rules (Limits)"
        ],
        "summary": "Delete Rate Rule",
        "description": "Deletes a rate rule.",
        "responses": {
          "200": {
            "description": "OK. A rate rule was deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/error_400"
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      }
    },
    "/{organization_id}/profiles": {
      "servers": [
        {
          "url": "https://edgioapis.com/waf/v0.9"
        }
      ],
      "security": [
        {
          "wafScope": [
            "app.waf"
          ]
        }
      ],
      "post": {
        "operationId": "create-managed-rule",
        "tags": [
          "Managed Rules (Profiles)"
        ],
        "summary": "Add Managed Rule",
        "description": "Creates a managed rule that identifies a ruleset configuration and describes a valid request.",
        "security": [
          {
            "wafScope": [
              "app.waf"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organization_id"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Profile"
        },
        "responses": {
          "200": {
            "description": "OK. A managed rule was created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "get": {
        "operationId": "get-managed-rules",
        "tags": [
          "Managed Rules (Profiles)"
        ],
        "summary": "Get All Managed Rules",
        "description": "Retrieves a list of managed rules. A managed rule identifies a ruleset configuration and describes a valid request.",
        "security": [
          {
            "wafScope": [
              "app.waf"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organization_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. A list of managed rules was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProfileShort"
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "id": "e3mpHQY5",
                        "name": "sample_profile_config",
                        "created_date": "06/10/2020 05:54:31 PM",
                        "ruleset_version": "2019-11-01",
                        "ruleset_id": "ECRS"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      }
    },
    "/{organization_id}/profiles/{profile_id}": {
      "servers": [
        {
          "url": "https://edgioapis.com/waf/v0.9"
        }
      ],
      "security": [
        {
          "wafScope": [
            "app.waf"
          ]
        }
      ],
      "parameters": [
        {
          "$ref": "#/components/parameters/organization_id"
        },
        {
          "$ref": "#/components/parameters/profile_id"
        }
      ],
      "get": {
        "operationId": "get-managed-rule",
        "tags": [
          "Managed Rules (Profiles)"
        ],
        "summary": "Get Managed Rule",
        "description": "Retrieves a managed rule that identifies a ruleset configuration and describes a valid request.",
        "security": [
          {
            "wafScope": [
              "app.waf"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK. A managed rule was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                },
                "example": {
                  "created_date": "09/27/2023 05:16:28 PM",
                  "customer_id": "12345678-1234-1234-1234-1234567890ab",
                  "general_settings": {
                    "anomaly_threshold": 4,
                    "arg_length": 8000,
                    "arg_name_length": 1024,
                    "ignore_cookie": [],
                    "ignore_header": [],
                    "ignore_query_args": [],
                    "json_parser": true,
                    "max_num_args": 512,
                    "paranoia_level": 1,
                    "process_request_body": true,
                    "process_response_body": false,
                    "response_header_name": "X-E-Security-Audit",
                    "total_arg_length": 64000,
                    "validate_utf8_encoding": true,
                    "xml_parser": true
                  },
                  "id": "VzhYZAMT",
                  "last_modified_date": "2023-09-27T17:16:28.114124Z",
                  "name": "My Managed Rule",
                  "policies": [
                    "r2000_ec_custom_rule.conf.json",
                    "r4000_tw_ip_reputation.conf.json",
                    "r4030_tw_iis.conf.json",
                    "r4080_tw_vbulletin.conf.json",
                    "r4120_tw_apache.conf.json",
                    "r4130_tw_java_spring.conf.json",
                    "r4140_tw_confluence.conf.json",
                    "r5010_scanner_detection.conf.json",
                    "r5020_http_protocol_violation.conf.json",
                    "r5021_http_attack.conf.json",
                    "r5030_local_file_inclusion.conf.json",
                    "r5031_remote_file_inclusion.conf.json",
                    "r5032_remote_code_execution.conf.json",
                    "r5033_php_injection.conf.json",
                    "r5034_generic_attack.conf.json",
                    "r5040_cross_site_scripting.conf.json",
                    "r5041_sql_injection.conf.json",
                    "r5042_session_fixation.conf.json",
                    "r5043_java_attack.conf.json",
                    "r9055_web_shells.conf.json",
                    "modsecurity_crs_23_request_limits.conf",
                    "modsecurity_crs_49_inbound_blocking.conf"
                  ],
                  "rule_target_updates": [],
                  "ruleset_id": "ERS",
                  "ruleset_version": "latest",
                  "team_config": true,
                  "version": null
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "put": {
        "operationId": "update-managed-rule",
        "tags": [
          "Managed Rules (Profiles)"
        ],
        "summary": "Update Managed Rule",
        "description": "Updates a managed rule that identifies a ruleset configuration and describes a valid request.",
        "security": [
          {
            "wafScope": [
              "app.waf"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Profile"
        },
        "responses": {
          "200": {
            "description": "OK. A managed rule was updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "delete": {
        "operationId": "delete-managed-rule",
        "tags": [
          "Managed Rules (Profiles)"
        ],
        "summary": "Delete Managed Rule",
        "description": "Deletes a managed rule.",
        "security": [
          {
            "wafScope": [
              "app.waf"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK. A managed rule was deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      }
    },
    "/rulesets": {
      "servers": [
        {
          "url": "https://edgioapis.com/waf/v0.9"
        }
      ],
      "security": [
        {
          "wafScope": [
            "app.waf"
          ]
        }
      ],
      "get": {
        "operationId": "get-rulesets",
        "tags": [
          "Edgio Rulesets"
        ],
        "summary": "Get Edgio Rulesets",
        "description": "Retrieve a list of available Edgio rulesets.",
        "security": [
          {
            "wafScope": [
              "app.waf"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK. A list of Edgio rulesets was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ruleset"
                  }
                },
                "example": [
                  {
                    "id": "ECRS",
                    "description": "NA",
                    "versions": [
                      "2018-09-14",
                      "2019-02-11",
                      "2019-08-07",
                      "2019-09-05",
                      "2019-10-01",
                      "2019-11-01",
                      "2020-01-09",
                      "2020-02-04",
                      "2020-03-06",
                      "2020-04-03",
                      "2020-05-01",
                      "2020-06-08",
                      "2020-08-01",
                      "2020-09-01",
                      "2020-10-05",
                      "2020-11-02",
                      "2020-12-04",
                      "2021-01-04",
                      "2021-02-05",
                      "2021-03-01",
                      "2021-03-09",
                      "2021-04-02",
                      "2021-05-03",
                      "2021-06-01",
                      "2021-07-01",
                      "2021-08-03",
                      "2021-09-07",
                      "2021-10-04",
                      "2021-11-04",
                      "2021-12-10",
                      "2021-12-13",
                      "2022-02-09",
                      "2022-03-08",
                      "2022-05-25",
                      "2022-06-03",
                      "2022-08-10",
                      "2022-11-04",
                      "2022-12-14",
                      "latest"
                    ],
                    "display": "ECRS"
                  },
                  {
                    "id": "ERS",
                    "description": "NA",
                    "versions": [
                      "2022-11-04",
                      "2022-12-14",
                      "2023-04-15",
                      "2023-07-15",
                      "latest"
                    ],
                    "display": "ERS"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/rulesets/{ruleset_id}": {
      "servers": [
        {
          "url": "https://edgioapis.com/waf/v0.9"
        }
      ],
      "security": [
        {
          "wafScope": [
            "app.waf"
          ]
        }
      ],
      "get": {
        "operationId": "get-ruleset-versions",
        "tags": [
          "Edgio Rulesets"
        ],
        "summary": "Get Edgio Ruleset Versions",
        "description": "Retrieve a list of the available versions for a specific Edgio ruleset.",
        "security": [
          {
            "wafScope": [
              "app.waf"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK. A list of the available versions for a specific Edgio ruleset was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "example": [
                  "2023-07-15",
                  "latest",
                  "2023-04-15",
                  "2022-11-04",
                  "2022-12-14"
                ]
              }
            }
          }
        }
      }
    },
    "/{organization_id}/api-gateways": {
      "servers": [
        {
          "url": "https://edgioapis.com/api-security/v0.9"
        }
      ],
      "security": [
        {
          "api_securityScope": [
            "app.api_security"
          ]
        }
      ],
      "post": {
        "operationId": "create-api-gateway-rule",
        "tags": [
          "API Gateways"
        ],
        "summary": "Add API Security Ruleset",
        "description": "Creates an API Security ruleset.",
        "security": [
          {
            "api_securityScope": [
              "app.api_security"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organization_id"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/APIGateway"
        },
        "responses": {
          "200": {
            "description": "OK. An API Security ruleset was created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "get": {
        "operationId": "get-api-gateways",
        "tags": [
          "API Gateways"
        ],
        "summary": "Get All API Security Rulesets",
        "description": "Retrieves a list of API Security rulesets.",
        "security": [
          {
            "api_securityScope": [
              "app.api_security"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organization_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. A list of API Security rulesets was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ObjShort"
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "id": "TGnXjOIc",
                        "name": "My API Security Ruleset",
                        "last_modified_date": "2023-09-29T23:31:39.402145Z"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      }
    },
    "/{organization_id}/api-gateways/{api_gateway_id}": {
      "servers": [
        {
          "url": "https://edgioapis.com/api-security/v0.9"
        }
      ],
      "security": [
        {
          "api_securityScope": [
            "app.api_security"
          ]
        }
      ],
      "parameters": [
        {
          "$ref": "#/components/parameters/organization_id"
        },
        {
          "$ref": "#/components/parameters/api_gateway_id"
        }
      ],
      "get": {
        "operationId": "get-api-gateway-rule",
        "tags": [
          "API Gateways"
        ],
        "summary": "Get API Security Ruleset",
        "description": "Retrieves an API Security ruleset.",
        "security": [
          {
            "api_securityScope": [
              "app.api_security"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK. An API Security ruleset was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiGateway"
                },
                "example": {
                  "customer_id": "12345678-1234-1234-1234-1234567890ab",
                  "id": "VzhYZAMT",
                  "last_modified_by": "jsmith@example.com via Edgio AppOps Console",
                  "last_modified_date": "2023-09-29T23:34:42.193976Z",
                  "name": "My API Security Ruleset",
                  "rules": [
                    {
                      "id": "uDS9SUgt",
                      "methods": [
                        "PUT",
                        "POST"
                      ],
                      "name": "API Security Rule 1",
                      "path": {
                        "type": "GLOB",
                        "value": "*"
                      },
                      "schema_id": "OTZ3opxX"
                    }
                  ],
                  "team_config": true
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "put": {
        "operationId": "update-api-gateway-rule",
        "tags": [
          "API Gateways"
        ],
        "summary": "Update API Security Ruleset",
        "description": "Updates an API Security ruleset.",
        "security": [
          {
            "api_securityScope": [
              "app.api_security"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/APIGateway"
        },
        "responses": {
          "200": {
            "description": "OK. An API Security ruleset was updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "delete": {
        "operationId": "delete-api-gateway-rule",
        "tags": [
          "API Gateways"
        ],
        "summary": "Delete API Security Ruleset",
        "description": "Deletes an API Security ruleset.",
        "security": [
          {
            "api_securityScope": [
              "app.api_security"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK. An API Security ruleset was deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      }
    },
    "/{organization_id}/api-gateways/{api_gateway_id}/schemas": {
      "servers": [
        {
          "url": "https://edgioapis.com/api-security/v0.9"
        }
      ],
      "security": [
        {
          "api_securityScope": [
            "app.api_security"
          ]
        }
      ],
      "parameters": [
        {
          "$ref": "#/components/parameters/organization_id"
        },
        {
          "$ref": "#/components/parameters/api_gateway_id"
        }
      ],
      "get": {
        "operationId": "get-api-gateway-rule-schemas",
        "tags": [
          "API Gateways"
        ],
        "summary": "Get API Security Ruleset's API Schemas",
        "description": "Retrieves a list of API schemas associated with an API Security ruleset.",
        "security": [
          {
            "api_securityScope": [
              "app.api_security"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK. A list of API schemas was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiSchema"
                  },
                  "example": [
                    {
                      "name": "Access Rules",
                      "schema": {
                        "type": "object",
                        "properties": {
                          "customer_id": {
                            "type": "string"
                          },
                          "directive": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "sec_rule": {
                                  "type": "object",
                                  "properties": {
                                    "action": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "msg": {
                                          "type": "string"
                                        },
                                        "t": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "chained_rule": {
                                      "type": "array"
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "object",
                                      "properties": {
                                        "is_negated": {
                                          "type": "boolean"
                                        },
                                        "is_regex": {
                                          "type": "boolean"
                                        },
                                        "type": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "variable": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "is_count": {
                                            "type": "boolean"
                                          },
                                          "match": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "is_negated": {
                                                  "type": "boolean"
                                                },
                                                "is_regex": {
                                                  "type": "boolean"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "team_config": {
                            "type": "boolean"
                          }
                        }
                      },
                      "api_gw_id": "TGnXjOIc",
                      "team_config": true,
                      "last_modified_by": "jsmith@example.com via Edgio AppOps Console",
                      "customer_id": "12345678-1234-1234-1234-1234567890ab",
                      "last_modified_date": "2023-09-29T23:31:41.193941Z",
                      "id": "OTZ3opxX"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      }
    },
    "/{organization_id}/api-schemas": {
      "servers": [
        {
          "url": "https://edgioapis.com/api-security/v0.9"
        }
      ],
      "security": [
        {
          "api_securityScope": [
            "app.api_security"
          ]
        }
      ],
      "post": {
        "operationId": "create-api-schema",
        "tags": [
          "API Schemas"
        ],
        "summary": "Add API Schema",
        "description": "\nCreates an API schema. An API schema contains a JSON schema (draft 4) that may be used to screen API requests. \n\n[View key configuration information.](https://docs.edg.io/guides/security/api_security#api-schema)\n",
        "security": [
          {
            "api_securityScope": [
              "app.api_security"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organization_id"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/APISchema"
        },
        "responses": {
          "200": {
            "description": "OK. An API schema was created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "get": {
        "operationId": "get-api-schemas",
        "tags": [
          "API Schemas"
        ],
        "summary": "Get All API Schemas",
        "description": "Retrieves a list of API schemas.",
        "security": [
          {
            "api_securityScope": [
              "app.api_security"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organization_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. A list of API schemas was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ObjShort"
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "id": "e3mpHQY5",
                        "name": "sample_api_schema_config",
                        "last_modified_date": "2023-09-29T23:31:41.193941Z"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      }
    },
    "/{organization_id}/api-schemas/{api_schema_id}": {
      "servers": [
        {
          "url": "https://edgioapis.com/api-security/v0.9"
        }
      ],
      "security": [
        {
          "api_securityScope": [
            "app.api_security"
          ]
        }
      ],
      "parameters": [
        {
          "$ref": "#/components/parameters/organization_id"
        },
        {
          "$ref": "#/components/parameters/api_schema_id"
        }
      ],
      "get": {
        "operationId": "get-api-schema",
        "tags": [
          "API Schemas"
        ],
        "summary": "Get API Schema",
        "description": "Retrieves an API schema. An API schema contains a JSON schema (draft 4) that may be used to screen API requests.",
        "security": [
          {
            "api_securityScope": [
              "app.api_security"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK. An API schema was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiSchema"
                },
                "example": {
                  "api_gw_id": "VzhYZAMT",
                  "customer_id": "12345678-1234-1234-1234-1234567890ab",
                  "id": "OTZ3opxX",
                  "last_modified_by": "jsmith@example.com via Edgio AppOps Console",
                  "last_modified_date": "2023-09-29T23:31:41.193941Z",
                  "name": "Access Rules",
                  "schema": {
                    "properties": {
                      "customer_id": {
                        "type": "string"
                      },
                      "directive": {
                        "items": {
                          "properties": {
                            "sec_rule": {
                              "properties": {
                                "action": {
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "msg": {
                                      "type": "string"
                                    },
                                    "t": {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                },
                                "chained_rule": {
                                  "type": "array"
                                },
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "team_config": {
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "team_config": true
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "put": {
        "operationId": "update-api-schema",
        "tags": [
          "API Schemas"
        ],
        "summary": "Update API Schema",
        "description": "\nUpdates an API schema. An API schema contains a JSON schema (draft 4) that may be used to screen API requests. \n\n[View key configuration information.](https://docs.edg.io/guides/security/api_security#api-schema)\n",
        "security": [
          {
            "api_securityScope": [
              "app.api_security"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/APISchema"
        },
        "responses": {
          "200": {
            "description": "OK. An API schema was updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "delete": {
        "operationId": "delete-api-schema",
        "tags": [
          "API Schemas"
        ],
        "summary": "Delete API Schema",
        "description": "Deletes an API schema.",
        "security": [
          {
            "api_securityScope": [
              "app.api_security"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK. An API Schema was deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      }
    },
    "/{organization_id}/bots": {
      "servers": [
        {
          "url": "https://edgioapis.com/bot-security/v0.9"
        }
      ],
      "security": [
        {
          "bot_securityScope": [
            "app.bot_security"
          ]
        }
      ],
      "post": {
        "operationId": "create-bot-rule",
        "tags": [
          "Bot Rules"
        ],
        "summary": "Add Bot Ruleset",
        "description": "Creates a bot ruleset. A bot ruleset defines criteria for bot identification.",
        "security": [
          {
            "bot_securityScope": [
              "app.bot_security"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organization_id"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Bot"
        },
        "responses": {
          "200": {
            "description": "OK. A bot ruleset was created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "get": {
        "operationId": "get-bot-rules",
        "tags": [
          "Bot Rules"
        ],
        "summary": "Get All Bot Rulesets",
        "description": "Lists all bot rulesets.",
        "security": [
          {
            "bot_securityScope": [
              "app.bot_security"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organization_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. A list of bot rulesets was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ObjShort"
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "id": "e3mpHQY5",
                        "name": "my_bot_ruleset",
                        "last_modified_date": "2023-09-29T23:31:39.402145Z"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      }
    },
    "/{organization_id}/bots/{bot_id}": {
      "servers": [
        {
          "url": "https://edgioapis.com/bot-security/v0.9"
        }
      ],
      "security": [
        {
          "bot_securityScope": [
            "app.bot_security"
          ]
        }
      ],
      "parameters": [
        {
          "$ref": "#/components/parameters/organization_id"
        },
        {
          "$ref": "#/components/parameters/bot_id"
        }
      ],
      "get": {
        "operationId": "get-bot-rule",
        "tags": [
          "Bot Rules"
        ],
        "summary": "Get Bot Ruleset",
        "description": "Retrieves a bot ruleset. A bot ruleset defines criteria for bot identification.",
        "security": [
          {
            "bot_securityScope": [
              "app.bot_security"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK. A bot ruleset was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bot"
                },
                "example": {
                  "customer_id": "ae2b89dc-b7a5-45bb-98af-5039ac0fe989",
                  "directive": [
                    {
                      "sec_rule": {
                        "action": {
                          "bot_action": "BLOCK_REQUEST",
                          "id": "77777777",
                          "msg": "Blocked",
                          "t": [
                            "NONE"
                          ]
                        },
                        "chained_rule": [],
                        "id": "Db0z7Gh5",
                        "name": "My second bot rule",
                        "operator": {
                          "is_negated": false,
                          "is_regex": false,
                          "type": "STREQ",
                          "value": "faux"
                        },
                        "variable": [
                          {
                            "is_count": false,
                            "match": [],
                            "type": "REQUEST_COOKIES"
                          }
                        ]
                      }
                    }
                  ],
                  "id": "vipDxgOV",
                  "last_modified_date": "2023-10-13T23:36:11.333280Z",
                  "name": "My first bot ruleset",
                  "team_config": true
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "put": {
        "operationId": "update-bot-rule",
        "tags": [
          "Bot Rules"
        ],
        "summary": "Update Bot Ruleset",
        "description": "Updates a bot ruleset. A bot ruleset defines criteria for bot identification.",
        "security": [
          {
            "bot_securityScope": [
              "app.bot_security"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Bot"
        },
        "responses": {
          "200": {
            "description": "OK. A bot ruleset was updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "delete": {
        "operationId": "delete-bot-rule",
        "tags": [
          "Bot Rules"
        ],
        "summary": "Delete Bot Ruleset",
        "description": "Deletes a bot ruleset. A bot ruleset defines criteria for bot identification.",
        "security": [
          {
            "bot_securityScope": [
              "app.bot_security"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK. A bot ruleset was deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      }
    },
    "/{organization_id}/bot-managers": {
      "servers": [
        {
          "url": "https://edgioapis.com/bot-security/v0.9"
        }
      ],
      "security": [
        {
          "bot_securityScope": [
            "app.bot_security"
          ]
        }
      ],
      "post": {
        "operationId": "create-bot-manager",
        "tags": [
          "Bot Managers"
        ],
        "summary": "Add Bot Manager Configuration",
        "description": "Creates a bot manager configuration.",
        "security": [
          {
            "bot_securityScope": [
              "app.bot_security"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organization_id"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/BotManager"
        },
        "responses": {
          "200": {
            "description": "OK. A bot manager configuration was created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "get": {
        "operationId": "get-bot-managers",
        "tags": [
          "Bot Managers"
        ],
        "summary": "Get All Bot Manager Configurations",
        "description": "Retrieves a list of bot manager configurations. A bot manager configuration can detect and mitigate undesired bot traffic.",
        "security": [
          {
            "bot_securityScope": [
              "app.bot_security"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/organization_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. A list of bot manager configurations was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ObjShort"
                  }
                },
                "examples": {
                  "response": {
                    "value": [
                      {
                        "id": "e3mpHQY5",
                        "name": "my_bot_manager_configuration",
                        "last_modified_date": "2023-09-29T23:31:39.402145Z"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      }
    },
    "/{organization_id}/bot-managers/{bot_manager_id}": {
      "servers": [
        {
          "url": "https://edgioapis.com/bot-security/v0.9"
        }
      ],
      "security": [
        {
          "bot_securityScope": [
            "app.bot_security"
          ]
        }
      ],
      "parameters": [
        {
          "$ref": "#/components/parameters/organization_id"
        },
        {
          "$ref": "#/components/parameters/bot_manager_id"
        }
      ],
      "get": {
        "operationId": "get-bot-manager",
        "tags": [
          "Bot Managers"
        ],
        "summary": "Get Bot Manager Configuration",
        "description": "Retrieves a bot manager configuration.",
        "security": [
          {
            "bot_securityScope": [
              "app.bot_security"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK. A bot manager configuration was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BotManager"
                },
                "example": {
                  "actions": {
                    "ALERT": {
                      "enf_type": "ALERT",
                      "id": "HJMoufdM",
                      "name": "known_bot action"
                    },
                    "BLOCK_REQUEST": {
                      "enf_type": "BLOCK_REQUEST",
                      "id": "1cwCQpgv",
                      "name": "known_bot action"
                    },
                    "BROWSER_CHALLENGE": {
                      "enf_type": "BROWSER_CHALLENGE",
                      "id": "lpqOMXaF",
                      "name": "known_bot action",
                      "status": 200,
                      "valid_for_sec": 200
                    }
                  },
                  "customer_id": "12345678-1234-1234-1234-1234567890ab",
                  "id": "e34YwKtg",
                  "inspect_known_bots": true,
                  "known_bots": [],
                  "last_modified_date": "2023-10-13T23:29:34.170006Z",
                  "name": "bot-manager-configuration-1",
                  "spoof_bot_action_type": "ALERT",
                  "team_config": true
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "put": {
        "operationId": "update-bot-manager",
        "tags": [
          "Bot Managers"
        ],
        "summary": "Update Bot Manager Configuration",
        "description": "Updates a bot manager configuration.",
        "security": [
          {
            "bot_securityScope": [
              "app.bot_security"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/BotManager"
        },
        "responses": {
          "200": {
            "description": "OK. A bot manager configuration was updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      },
      "delete": {
        "operationId": "delete-bot-manager",
        "tags": [
          "Bot Managers"
        ],
        "summary": "Delete Bot Manager Configuration",
        "description": "Deletes a bot manager configuration.",
        "security": [
          {
            "bot_securityScope": [
              "app.bot_security"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK. A bot manager configuration was deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObj"
                },
                "example": {
                  "id": "VzhYZAMT",
                  "status": "success",
                  "success": true
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/error_404"
          },
          "429": {
            "$ref": "#/components/responses/error_429"
          },
          "500": {
            "$ref": "#/components/responses/error_500"
          }
        }
      }
    },
    "/known-bots/companies": {
      "servers": [
        {
          "url": "https://edgioapis.com/bot-security/v0.9"
        }
      ],
      "security": [
        {
          "securityScope": {}
        }
      ],
      "get": {
        "operationId": "get-known-companies",
        "tags": [
          "Known Bots"
        ],
        "summary": "Get Available Known Bots",
        "description": "Retrieves a list of all known bots. Each known bot is identified by a token (e.g., `google` and `yahoo`).",
        "security": [
          {
            "bot_securityScope": [
              "app.bot_security"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK. A list of known bots was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Contains a list of known bots.",
                  "items": {
                    "type": "string"
                  }
                },
                "example": [
                  "ahrefs",
                  "apple",
                  "aspiegel",
                  "baidu",
                  "datadog",
                  "line",
                  "msn",
                  "neeva",
                  "pingdom",
                  "semrush",
                  "uptimerobot",
                  "yahoo",
                  "yandex",
                  "google",
                  "facebook",
                  "twitter",
                  "other"
                ]
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "cacheScope": {
        "type": "oauth2",
        "description": "Learn how to [generate and pass a token.](#section/Access-Tokens)",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://id.edgio.app/connect/token",
            "scopes": {
              "app.cache": "Authorizes full access for purging cached content and retrieve purge status information."
            }
          }
        }
      },
      "configScope": {
        "type": "oauth2",
        "description": "Learn how to [generate and pass a token.](#section/Access-Tokens)",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://id.edgio.app/connect/token",
            "scopes": {
              "app.config": "Authorizes full access for deploying CDN configurations, retrieving deployment information and log data, and managing environment variables."
            }
          }
        }
      },
      "accountsScope": {
        "type": "oauth2",
        "description": "Learn how to [generate and pass a token.](#section/Access-Tokens)",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://id.edgio.app/connect/token",
            "scopes": {
              "app.accounts": "Authorizes full access to manage organizations, properties, and environments."
            }
          }
        }
      },
      "wafScope": {
        "type": "oauth2",
        "description": "Learn how to [generate and pass a token.](#section/Access-Tokens)",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://id.edgio.app/connect/token",
            "scopes": {
              "app.waf": "Authorizes full access to security apps, access rules, rate rules, custom rules, and managed rules."
            }
          }
        }
      },
      "api_securityScope": {
        "type": "oauth2",
        "description": "Learn how to [generate and pass a token.](#section/Access-Tokens)",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://id.edgio.app/connect/token",
            "scopes": {
              "app.api_security": "Authorizes full access to API Security."
            }
          }
        }
      },
      "bot_securityScope": {
        "type": "oauth2",
        "description": "Learn how to [generate and pass a token.](#section/Access-Tokens)",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://id.edgio.app/connect/token",
            "scopes": {
              "app.bot_security": "Authorizes full access to Bot Manager."
            }
          }
        }
      }
    },
    "schemas": {
      "Config_V1_Entities_TlsCert": {
        "required": [
          "@id",
          "@type",
          "id"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "The resource's type."
          },
          "@id": {
            "type": "string",
            "description": "The resource's relative path."
          },
          "@links": {
            "type": "object",
            "properties": {},
            "description": "Links to related resources."
          },
          "id": {
            "type": "string",
            "description": "Resource unique identifier."
          },
          "environment_id": {
            "type": "string",
            "description": "An environment's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab).\n\nFrom the Edgio Console, navigate to the desired environment and then click **Settings**. It is listed under **Environment ID**.\n"
          },
          "primary_cert": {
            "type": "string",
            "description": "Primary certificate. Not returned for records in collection."
          },
          "intermediate_cert": {
            "type": "string",
            "description": "Intermediate certificate. Not returned for records in collection"
          },
          "expiration": {
            "type": "string",
            "description": "The TLS certificate's expiration date and time (UTC).",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "The TLS certificate's status. Returns one of the following states:\n\n-  `created`: The TLS certificate has been created, but it has not yet been activated.\n-  `activating:` Edgio is in the process of activating the TLS certificate.\n-  `activated:` The TLS certificate is currently active.\n-  `failed:` The activation of the TLS certificate failed.\n-  `expired:` The TLS certificate has expired.\n"
          },
          "generated": {
            "type": "boolean",
            "description": "Returns `true` for TLS certificates generated by Edgio. Returns `false` for existing TLS certificates that were uploaded to Edgio.\n"
          },
          "serial": {
            "type": "string",
            "description": "The TLS certificate's serial number."
          },
          "common_name": {
            "type": "string",
            "description": "The TLS certificate's common name (CN)."
          },
          "alternative_names": {
            "type": "array",
            "description": "The TLS certificate's Subject Alternative Names (SAN).",
            "items": {
              "type": "string"
            }
          },
          "activation_error": {
            "type": "string",
            "description": "Contains an error message if the TLS certificate could not be activated. "
          },
          "created_at": {
            "type": "string",
            "description": "The TLS certificate's creation date and time (UTC).",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "description": "The TLS certificate's last modification date and time (UTC).",
            "format": "date-time"
          }
        },
        "description": "Config_V1_Entities_TlsCert model"
      },
      "BaseApi_Entities_UserErrorData": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "The requested endpoint's path."
          },
          "message": {
            "type": "string",
            "description": "A brief description of the error."
          }
        }
      },
      "BaseApi_Entities_UserError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message."
          },
          "details": {
            "type": "array",
            "description": "Describes the error.",
            "items": {
              "$ref": "#/components/schemas/BaseApi_Entities_UserErrorData"
            }
          }
        },
        "description": "BaseApi_Entities_UserError model"
      },
      "BaseApi_Entities_GeneralError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error Message"
          }
        },
        "description": "BaseApi_Entities_GeneralError model"
      },
      "BaseApi_Entities_HyperionLink": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "base_path": {
            "type": "string"
          }
        }
      },
      "BaseApi_Entities_HyperionNavigationLinks": {
        "type": "object",
        "properties": {
          "first": {
            "$ref": "#/components/schemas/BaseApi_Entities_HyperionLink"
          },
          "next": {
            "$ref": "#/components/schemas/BaseApi_Entities_HyperionLink"
          },
          "previous": {
            "$ref": "#/components/schemas/BaseApi_Entities_HyperionLink"
          },
          "last": {
            "$ref": "#/components/schemas/BaseApi_Entities_HyperionLink"
          }
        }
      },
      "Config_V1_Entities_TlsCert_Collection": {
        "required": [
          "@id",
          "@type"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "The resource's type."
          },
          "@id": {
            "type": "string",
            "description": "The resource's relative path."
          },
          "@links": {
            "$ref": "#/components/schemas/BaseApi_Entities_HyperionNavigationLinks"
          },
          "total_items": {
            "type": "integer",
            "description": "Total number of items.",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "description": "List of TLS certificates associated with the specified environment.",
            "items": {
              "$ref": "#/components/schemas/Config_V1_Entities_TlsCert"
            }
          }
        },
        "description": "Config_V1_Entities_TlsCert_Collection model"
      },
      "postConfigV01TlsCerts": {
        "required": [
          "environment_id",
          "intermediate_cert",
          "primary_cert"
        ],
        "type": "object",
        "properties": {
          "environment_id": {
            "type": "string",
            "description": "An environment's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab).\n\nFrom the Edgio Console, navigate to the desired environment and then click **Settings**. It is listed under **Environment ID**.\n"
          },
          "primary_cert": {
            "type": "string",
            "description": "Your TLS certificate. We require this certificate to be issued by a Certificate Authority."
          },
          "intermediate_cert": {
            "type": "string",
            "description": "The intermediate certificates (IC) used by the CA, including the CA’s signing certificate."
          },
          "private_key": {
            "type": "string",
            "description": "The private key that was generated with the CSR."
          }
        },
        "description": "Upload your TLS certificate to activate it within a specific environment."
      },
      "Config_V1_Entities_Deployment_LogLine": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Log message."
          },
          "level": {
            "type": "string",
            "description": "Log level."
          },
          "timestamp": {
            "type": "string",
            "description": "The date and time (UTC) at which the message was logged.",
            "format": "date-time"
          }
        }
      },
      "Config_V1_Entities_Deployment_Logs": {
        "required": [
          "@id",
          "@type"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "The resource's type."
          },
          "@id": {
            "type": "string",
            "description": "The resource's relative path."
          },
          "@links": {
            "type": "object",
            "properties": {},
            "description": "Links to related resources."
          },
          "logs": {
            "type": "array",
            "description": "The deployment's log messages.",
            "items": {
              "$ref": "#/components/schemas/Config_V1_Entities_Deployment_LogLine"
            }
          }
        },
        "description": "Config_V1_Entities_Deployment_Logs model"
      },
      "Config_V1_Entities_Deployment": {
        "required": [
          "@id",
          "@type",
          "id"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "The resource's type."
          },
          "@id": {
            "type": "string",
            "description": "The resource's relative path."
          },
          "@links": {
            "type": "object",
            "properties": {},
            "description": "Links to related resources."
          },
          "id": {
            "type": "string",
            "description": "Resource unique identifier."
          },
          "status": {
            "type": "string",
            "description": "Indicates the deployment's status. Valid values are:\n  - `created`: The deployment has been created but has not yet been deployed.\n  - `uploading`: The CLI is uploading the build. This state is only applicable for EdgeJS deployments.\n  - `provisioning`: The CDN is provisioning the environment.\n  - `deploying`: The build is being deployed to our network.\n  - `waiting`: The build is being propagated throughout our network.\n  - `completed`: The build was deployed successfully to our network.\n  - `canceled`: The deployment was canceled.\n  - `failed`: The deployment has failed.\n"
          },
          "created_at": {
            "type": "string",
            "description": "The date and time (UTC) at which the deployment was submitted.",
            "format": "date-time"
          },
          "completed_at": {
            "type": "string",
            "description": "The date and time (UTC) at which the deployment was completed.",
            "format": "date-time"
          }
        },
        "description": "Config_V1_Entities_Deployment model"
      },
      "hostname": {
        "type": "string",
        "pattern": "^(((?:[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])|(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|\\[((?:[a-fA-F\\d]{1,4}:){7}(?:[a-fA-F\\d]{1,4}|:)|(?:[a-fA-F\\d]{1,4}:){6}(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|:[a-fA-F\\d]{1,4}|:)|(?:[a-fA-F\\d]{1,4}:){5}(?::(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(:[a-fA-F\\d]{1,4}){1,2}|:)|(?:[a-fA-F\\d]{1,4}:){4}(?:(:[a-fA-F\\d]{1,4}){0,1}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(:[a-fA-F\\d]{1,4}){1,3}|:)|(?:[a-fA-F\\d]{1,4}:){3}(?:(:[a-fA-F\\d]{1,4}){0,2}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(:[a-fA-F\\d]{1,4}){1,4}|:)|(?:[a-fA-F\\d]{1,4}:){2}(?:(:[a-fA-F\\d]{1,4}){0,3}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(:[a-fA-F\\d]{1,4}){1,5}|:)|(?:[a-fA-F\\d]{1,4}:){1}(?:(:[a-fA-F\\d]{1,4}){0,4}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(:[a-fA-F\\d]{1,4}){1,6}|:)|(?::((?::[a-fA-F\\d]{1,4}){0,5}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-fA-F\\d]{1,4}){1,7}|:)))(%[0-9a-zA-Z]{1,})?\\])$"
      },
      "origin_backends": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "location"
        ],
        "properties": {
          "weight": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "dns_max_ttl": {
            "type": "number",
            "minimum": 0,
            "maximum": 4294967295
          },
          "dns_preference": {
            "type": "string",
            "enum": [
              "prefv4",
              "prefv6",
              "onlyv4",
              "onlyv6"
            ]
          },
          "max_hard_pool": {
            "type": "integer",
            "minimum": 0,
            "maximum": 65535
          },
          "dns_min_ttl": {
            "type": "number",
            "minimum": 0,
            "maximum": 4294967295
          },
          "location": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "hostname"
                  ],
                  "properties": {
                    "port": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 65535
                    },
                    "hostname": {
                      "$ref": "#/components/schemas/hostname"
                    }
                  }
                },
                "maxItems": 10
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/hostname"
                },
                "maxItems": 10
              },
              {
                "$ref": "#/components/schemas/hostname",
                "$comment": "this is the super abbreviated case, where only a single hostname is specified"
              }
            ]
          },
          "max_pool": {
            "type": "integer",
            "minimum": 0,
            "maximum": 65535
          },
          "balancer": {
            "type": "string",
            "enum": [
              "carp",
              "sqf",
              "primary_failover",
              "round_robin"
            ]
          },
          "scheme": {
            "type": "string",
            "$comment": "'match' is default, and means put the same thing in http-backends and https-backends with 80/443 port respectively",
            "enum": [
              "http",
              "https",
              "match"
            ]
          }
        }
      },
      "origins": {
        "$comment": "this object translates to a few blocks of sf config, proxy-core.balancer and proxy-core.{http-,https-,}backends",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_.-]*$"
          },
          "type": {
            "$comment": "'customer_origin' is default, and means that the origin is a customer origin, 'cdn_storage' on the contrary means that the content is hosted in house.",
            "type": "string",
            "enum": [
              "customer_origin",
              "cdn_storage"
            ],
            "default": "customer_origin"
          },
          "hosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/origin_backends"
            }
          },
          "balancer": {
            "$comment": "this comes from http://sailfish.edgecast.com/ecdoc/mod-proxy-core.html#proxy-core-balancer",
            "type": "string",
            "enum": [
              "primary_failover",
              "round_robin",
              "carp",
              "carp64",
              "static_with_tags",
              "static_weighted",
              "static_nocache_bypass",
              "sqf"
            ]
          },
          "override_host_header": {
            "type": "string",
            "pattern": "^(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9]$"
          },
          "shields": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "global": {
                "type": "string",
                "pattern": "^[A-Z]{3}$"
              },
              "apac": {
                "type": "string",
                "pattern": "^([A-Z]{3}|bypass)$"
              },
              "emea": {
                "type": "string",
                "pattern": "^([A-Z]{3}|bypass)$"
              },
              "us_west": {
                "type": "string",
                "pattern": "^([A-Z]{3}|bypass)$"
              },
              "us_east": {
                "type": "string",
                "pattern": "^([A-Z]{3}|bypass)$"
              }
            },
            "minProperties": 1
          },
          "pci_certified_shields": {
            "type": "boolean"
          },
          "tls_verify": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "use_sni": {
                "type": "boolean"
              },
              "sni_hint_and_strict_san_check": {
                "$ref": "#/components/schemas/hostname"
              },
              "allow_self_signed_certs": {
                "type": "boolean"
              },
              "pinned_certs": {
                "type": "array",
                "items": {
                  "type": "string",
                  "minLength": 40,
                  "maxLength": 40,
                  "pattern": "^[0-9a-fA-F]+$"
                },
                "maxItems": 5
              }
            }
          }
        }
      },
      "properties-origins": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/origins"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "hostnames": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "hostname"
        ],
        "properties": {
          "hostname": {
            "$ref": "#/components/schemas/hostname"
          },
          "default_origin_name": {
            "type": "string"
          },
          "report_code": {
            "type": "number"
          },
          "tls": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "npn": {
                "type": "boolean"
              },
              "alpn": {
                "type": "boolean"
              },
              "protocols": {
                "type": "string"
              },
              "use_sigalgs": {
                "type": "boolean"
              },
              "sni": {
                "type": "boolean"
              },
              "sni_strict": {
                "type": "boolean"
              },
              "sni_host_match": {
                "type": "boolean"
              },
              "client_renegotiation": {
                "type": "boolean"
              },
              "options": {
                "type": "string"
              },
              "cipher_list": {
                "type": "string"
              },
              "named_curve": {
                "type": "string"
              },
              "oscp": {
                "type": "boolean"
              },
              "pem": {
                "type": "string"
              },
              "ca": {
                "type": "string"
              }
            }
          }
        }
      },
      "properties-hostnames": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/hostnames"
        },
        "minItems": 1
      },
      "matches": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "if": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$comment": "nested matches",
                  "$ref": "#/components/schemas/matches"
                },
                {
                  "$ref": "#/components/schemas/boolean"
                },
                {
                  "$comment": "this is the first/odd elements that define a conditional statement",
                  "$ref": "#/components/schemas/conditionals"
                },
                {
                  "$comment": "these are the actual features be enabled",
                  "$ref": "#/components/schemas/features"
                },
                {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "$comment": "these are the actual features be enabled",
                        "$ref": "#/components/schemas/features"
                      },
                      {
                        "$comment": "nested matches",
                        "$ref": "#/components/schemas/matches"
                      }
                    ]
                  }
                }
              ]
            },
            "minItems": 2,
            "$comment": "2 arguments is if-then.  3 is if-then-else.  anything more takes if-then elseif-then"
          },
          "comment": {
            "$ref": "#/components/schemas/comment"
          }
        }
      },
      "boolean": {
        "type": "object",
        "$comment": "this is all based on jsonlogic: http://jsonlogic.com/operations.html#logic-and-boolean-operations, and is separated from 'rules' so we can exclude features here, so you can't say 'if feature'",
        "additionalProperties": false,
        "patternProperties": {
          "^(or|and)$": {
            "type": "array",
            "items": {
              "$comment": "this is the list of what we need to give a logic comparison, needs to support both variables and static values",
              "anyOf": [
                {
                  "$ref": "#/definitions/boolean"
                },
                {
                  "$comment": "this is the first/odd elements that define a conditional statement",
                  "$ref": "#/definitions/conditionals"
                }
              ]
            },
            "minItems": 2
          }
        }
      },
      "conditionals": {
        "type": "object",
        "$comment": "this is all based on jsonlogic: http://jsonlogic.com/operations.html#logic-and-boolean-operations, and is separated from 'rules' so we can exclude features here, so you can't say 'if feature'",
        "additionalProperties": false,
        "patternProperties": {
          "^(==|!=|===|!==)$": {
            "type": "array",
            "items": {
              "$comment": "this is the list of what we need to give a logic comparison, needs to support both variables and static values",
              "anyOf": [
                {
                  "type": [
                    "integer",
                    "string",
                    "number",
                    "boolean"
                  ],
                  "$comment": "static values to compare with things"
                },
                {
                  "$ref": "#/definitions/rules_variables"
                }
              ]
            },
            "minItems": 2,
            "maxItems": 2,
            "$comment": "only ever two operands for a logical condition"
          },
          "^(<|<=)$": {
            "$comment": "numeric operations that can double as 'between' operations. 2 values is simple, 3 is 'between' like 1, 2, 3 -> true;  1, 4, 3 -> false;",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/rules_variables"
                },
                {
                  "type": [
                    "number",
                    "integer"
                  ]
                }
              ]
            },
            "minItems": 2,
            "maxItems": 3
          },
          "^(>|>=)$": {
            "$comment": "numeric operations",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/rules_variables"
                },
                {
                  "type": [
                    "number",
                    "integer"
                  ]
                }
              ]
            },
            "minItems": 2,
            "maxItems": 2
          },
          "^(in|not_in)$": {
            "$comment": "numeric operations",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/rules_variables"
                },
                {
                  "type": [
                    "string",
                    "array"
                  ]
                }
              ]
            },
            "minItems": 2
          },
          "^(=~|!~)$": {
            "$comment": "regex string match and not match",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/definitions/rules_variables"
                },
                {
                  "type": [
                    "string",
                    "integer"
                  ]
                }
              ]
            },
            "minItems": 2
          }
        }
      },
      "edge_function": {
        "type": "string"
      },
      "comment": {
        "type": "string",
        "maxLength": 2000
      },
      "http_status_code": {
        "type": "integer",
        "enum": [
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          207,
          208,
          226,
          300,
          301,
          302,
          304,
          305,
          306,
          307,
          308,
          400,
          401,
          402,
          403,
          404,
          405,
          406,
          407,
          408,
          409,
          410,
          411,
          412,
          413,
          414,
          415,
          416,
          417,
          418,
          421,
          422,
          423,
          424,
          425,
          426,
          428,
          429,
          431,
          440,
          444,
          451,
          499,
          500,
          501,
          502,
          503,
          504,
          505,
          506,
          507,
          508,
          509,
          510,
          511,
          530,
          531,
          532,
          533,
          534,
          535,
          536,
          537,
          538,
          539,
          540,
          541,
          542,
          543,
          544,
          545,
          546,
          547,
          548,
          549,
          888,
          893
        ]
      },
      "http_response_header": {
        "type": "object",
        "$comment": "key is the header name, + means append.  second pattern is to ensure that certain ones are never provided with a value",
        "additionalProperties": false,
        "patternProperties": {
          "^[+]?[-_a-zA-Z0-9 .]+$": {
            "anyOf": [
              {
                "$ref": "#/definitions/single_line_string",
                "$comment": "most commonly just a flat string"
              },
              {
                "$ref": "#/definitions/rules_variables",
                "$comment": "can also be a variable from another place"
              }
            ]
          },
          "^(Accept-Ranges|Age|Connection|Content-Encoding|Content-Length|Content-Range|Date|Server|Trailer|Transfer-Encoding|Upgrade|Vary|Via|Warning|X-EC.*)$": {
            "type": "null"
          }
        }
      },
      "http_response_no_body": {
        "type": "object",
        "$comment": "represent a simple response with code and header but no body",
        "additionalProperties": false,
        "properties": {
          "code": {
            "$ref": "#/components/schemas/http_status_code"
          },
          "headers": {
            "$ref": "#/components/schemas/http_response_header"
          }
        }
      },
      "access": {
        "type": "object",
        "properties": {
          "deny_access": {
            "type": "boolean"
          },
          "token_auth_denial_code": {
            "$ref": "#/components/schemas/http_response_no_body"
          },
          "token_auth_ignore_url_case": {
            "type": "boolean"
          },
          "token_auth": {
            "type": "boolean"
          }
        }
      },
      "header_treatment": {
        "type": "string",
        "enum": [
          "pass",
          "overwrite",
          "if_missing",
          "remove"
        ]
      },
      "time_interval": {
        "type": "string",
        "$comment": "this captures the acceptable format: https://gitlab.edgecastcdn.net/edgecast/http-dev/sailfish/-/blob/master/src/core/utils/conversions.cc#L46",
        "pattern": "^[0-9]+(s|m|h|d|w|y)$"
      },
      "regex_rewrite": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "source": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          }
        }
      },
      "header_name": {
        "type": "string",
        "pattern": "^[+]?[-_a-zA-Z0-9 .]+$"
      },
      "single_line_string": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_ :;.,\\\\'/\"?!()[\\]{}@<>=+#$&`|~^%*-]*$"
      },
      "generic_field": {
        "type": "string",
        "pattern": "[-_\\.a-zA-Z0-9]+"
      },
      "bytes": {
        "type": "string",
        "$comment": "captures acceptable formats for bytes: https://git.edgecastcdn.net/EdgeCast/sailfish-src/blob/master/src/conversions.cc#L81",
        "pattern": "^[0-9]+(k|M|G|T|ki|Mi|Gi|Ti)?B$"
      },
      "caching": {
        "type": "object",
        "properties": {
          "bandwidth_throttling": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "kbytes_per_sec": {
                "type": "integer"
              },
              "prebuf_seconds": {
                "type": "number"
              }
            },
            "required": [
              "kbytes_per_sec"
            ]
          },
          "bypass_cache": {
            "type": "boolean"
          },
          "cache_control_header_treatment": {
            "$ref": "#/components/schemas/header_treatment"
          },
          "expires_header_treatment": {
            "$ref": "#/components/schemas/header_treatment"
          },
          "client_max_age": {
            "$ref": "#/components/schemas/time_interval"
          },
          "cache_key_query_string": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "include_all": {
                "type": "boolean"
              },
              "exclude_all": {
                "type": "boolean"
              },
              "include": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "include_all_except": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "cache_key_rewrite": {
            "$ref": "#/components/schemas/regex_rewrite"
          },
          "cache_key": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "include_all_query_params": {
                "type": "boolean"
              },
              "exclude_all_query_params": {
                "type": "boolean"
              },
              "include_query_params": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "string"
                }
              },
              "include_all_query_params_except": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "string"
                }
              },
              "include_headers": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/header_name"
                }
              },
              "include_cookies": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/header_name"
                }
              },
              "include_expressions": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "$ref": "#/components/schemas/single_line_string"
                }
              }
            }
          },
          "max_age": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/time_interval",
                "$comment": "when just an interval, is for 200 status code"
              },
              {
                "type": "object",
                "additionalProperties": false,
                "patternProperties": {
                  "^[1-5][0-9][0-9]$": {
                    "$ref": "#/definitions/time_interval"
                  }
                }
              }
            ]
          },
          "h264_support": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "(\\.[^. ]+\\s*)+"
            }
          },
          "h264_support_video_seek_params": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "seek_start": {
                "$ref": "#/components/schemas/generic_field"
              },
              "seek_end": {
                "$ref": "#/components/schemas/generic_field"
              }
            },
            "required": [
              "seek_start"
            ]
          },
          "honor_no_cache_request_header": {
            "type": "boolean"
          },
          "ignore_origin_no_cache": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/http_status_code"
            }
          },
          "ignore_unsatisfiable_ranges": {
            "type": "boolean"
          },
          "revalidate_after_origin_unavailable": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/time_interval",
                "$comment": "when just an interval, is for 200 status code"
              },
              {
                "type": "object",
                "additionalProperties": false,
                "patternProperties": {
                  "^[1-5][0-9][0-9]$": {
                    "$ref": "#/definitions/time_interval"
                  }
                }
              }
            ]
          },
          "partial_cache_sharing_min_hit_size": {
            "type": "integer",
            "minimum": 0
          },
          "prevalidate_cached_content": {
            "$ref": "#/components/schemas/time_interval"
          },
          "refresh_zero_byte_cache_files": {
            "type": "boolean"
          },
          "cacheable_status_codes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/http_status_code"
            }
          },
          "stale_on_error": {
            "type": "boolean"
          },
          "stale_while_revalidate": {
            "$ref": "#/components/schemas/time_interval"
          },
          "enable_caching_for_methods": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "GET",
                "POST",
                "PUT"
              ]
            }
          },
          "cacheable_request_body_size": {
            "$ref": "#/components/schemas/bytes"
          },
          "revalidate_while_stale_timer": {
            "type": "integer"
          },
          "bypass_client_cache": {
            "type": "boolean"
          },
          "service_worker_max_age": {
            "$ref": "#/components/schemas/time_interval"
          },
          "allow_empty_query_in_cache_key": {
            "type": "boolean"
          },
          "first_hit_caching": {
            "type": "boolean"
          }
        }
      },
      "response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "set_status_code": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/http_status_code"
              },
              {
                "$ref": "#/components/schemas/single_line_string",
                "$comment": "most commonly just a flat string"
              }
            ]
          },
          "set_done": {
            "type": "boolean"
          },
          "set_response_body": {
            "type": "string",
            "$comment": "sets the response body to the base64 encoded string provided by the user"
          },
          "allow_prefetching_uncached_content": {
            "type": "boolean"
          },
          "compress_content_types": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "[-\\+a-zA-Z0-9]+/[-\\+\\.a-zA-Z0-9]+"
            }
          },
          "optimize_images": {
            "type": "boolean"
          },
          "retry_from_hostname": {
            "type": "string",
            "$comment": "sets the hostname dynamically"
          }
        }
      },
      "http_request_header": {
        "type": "object",
        "$comment": "key is the header name, + means append.  second pattern is to ensure that certain ones are never provided with a value",
        "additionalProperties": false,
        "patternProperties": {
          "^[+]?[-_a-zA-Z0-9 .]+$": {
            "$ref": "#/definitions/single_line_string"
          },
          "^(Forwarded-For|Host|Vary|Via|Warning|X-Forwarded-For|X-EC.*)$": {
            "type": "null"
          }
        }
      },
      "headers": {
        "type": "object",
        "properties": {
          "debug_header": {
            "type": "boolean"
          },
          "set_request_headers": {
            "$ref": "#/components/schemas/http_request_header"
          },
          "set_response_headers": {
            "$ref": "#/components/schemas/http_response_header"
          },
          "add_response_headers": {
            "$ref": "#/components/schemas/http_response_header"
          },
          "set_client_ip_custom_header": {
            "$ref": "#/components/schemas/generic_field"
          },
          "remove_response_headers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "remove_origin_response_headers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "server_timing_header": {
            "type": "boolean"
          },
          "set_origin_response_headers": {
            "$ref": "#/components/schemas/http_response_header"
          }
        }
      },
      "logs": {
        "type": "object",
        "properties": {
          "custom_log_field_format": {
            "type": "string"
          },
          "log_query_string": {
            "type": "boolean"
          },
          "mask_client_subnet": {
            "type": "boolean"
          }
        }
      },
      "origin": {
        "type": "object",
        "properties": {
          "max_keep_alive_requests": {
            "type": "integer",
            "minimum": 0
          },
          "proxy_special_headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/generic_field"
            }
          },
          "set_origin": {
            "type": "string"
          }
        }
      },
      "url": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "follow_redirects": {
            "type": "boolean"
          },
          "url_rewrite": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "source": {
                  "type": "string"
                },
                "destination": {
                  "type": "string"
                },
                "syntax": {
                  "type": "string",
                  "enum": [
                    "regexp",
                    "path-to-regexp"
                  ]
                }
              }
            }
          },
          "url_redirect": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "code": {
                "$ref": "#/components/schemas/http_status_code"
              },
              "source": {
                "type": "string"
              },
              "destination": {
                "type": "string"
              },
              "syntax": {
                "type": "string",
                "enum": [
                  "regexp",
                  "path-to-regexp"
                ]
              }
            }
          }
        }
      },
      "client": {
        "type": "object",
        "properties": {
          "quic": {
            "type": "boolean"
          }
        }
      },
      "set_variables": {
        "type": "object",
        "patternProperties": {
          "^[-_a-zA-Z0-9]+$": {
            "$ref": "#/definitions/single_line_string",
            "$comment": "most commonly just a flat string"
          }
        }
      },
      "features": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "edge_function": {
            "$ref": "#/components/schemas/edge_function"
          },
          "comment": {
            "$ref": "#/components/schemas/comment"
          },
          "access": {
            "unevaluatedProperties": false,
            "$ref": "#/components/schemas/access"
          },
          "caching": {
            "unevaluatedProperties": false,
            "$ref": "#/components/schemas/caching"
          },
          "response": {
            "unevaluatedProperties": false,
            "$ref": "#/components/schemas/response"
          },
          "headers": {
            "unevaluatedProperties": false,
            "$ref": "#/components/schemas/headers"
          },
          "logs": {
            "unevaluatedProperties": false,
            "$ref": "#/components/schemas/logs"
          },
          "origin": {
            "unevaluatedProperties": false,
            "$ref": "#/components/schemas/origin"
          },
          "url": {
            "unevaluatedProperties": false,
            "$ref": "#/components/schemas/url"
          },
          "client": {
            "unevaluatedProperties": false,
            "$ref": "#/components/schemas/client"
          },
          "set_variables": {
            "unevaluatedProperties": false,
            "$ref": "#/components/schemas/set_variables"
          }
        }
      },
      "rules": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/matches"
          },
          {
            "$comment": "we need to be able to drop all features in here too, to cover 'always' conditions natively",
            "$ref": "#/components/schemas/features"
          },
          {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/features"
                }
              ]
            }
          }
        ]
      },
      "properties-rules": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/rules"
        }
      },
      "Config_V1_Entities_Config": {
        "required": [
          "@id",
          "@type",
          "id"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "The resource's type."
          },
          "@id": {
            "type": "string",
            "description": "The resource's relative path."
          },
          "@links": {
            "type": "object",
            "properties": {},
            "description": "Links to related resources."
          },
          "id": {
            "type": "string",
            "description": "Resource unique identifier."
          },
          "origins": {
            "$ref": "#/components/schemas/properties-origins"
          },
          "hostnames": {
            "$ref": "#/components/schemas/properties-hostnames"
          },
          "rules": {
            "$ref": "#/components/schemas/properties-rules"
          },
          "experiments": {
            "type": "string",
            "description": "List of experiments.",
            "example": ""
          }
        },
        "description": "Config_V1_Entities_Config model"
      },
      "postConfigV01Configs": {
        "required": [
          "environment_id",
          "hostnames",
          "origins"
        ],
        "type": "object",
        "properties": {
          "environment_id": {
            "type": "string",
            "description": "An environment's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab).\n\nFrom the Edgio Console, navigate to the desired environment and then click **Settings**. It is listed under **Environment ID**.\n"
          },
          "origins": {
            "$ref": "#/components/schemas/properties-origins"
          },
          "hostnames": {
            "$ref": "#/components/schemas/properties-hostnames"
          },
          "rules": {
            "$ref": "#/components/schemas/properties-rules"
          },
          "experiments": {
            "type": "array",
            "description": "List of experiments.",
            "example": [
              {}
            ],
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Deploys your configuration to a specific environment. This deployment overwrites any existing origin configurations, hostnames, rules, and experiments.\n"
      },
      "Config_V1_Entities_EnvironmentVariable": {
        "required": [
          "@id",
          "@type",
          "id"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "The resource's type."
          },
          "@id": {
            "type": "string",
            "description": "The resource's relative path."
          },
          "@links": {
            "type": "object",
            "properties": {},
            "description": "Links to related resources."
          },
          "id": {
            "type": "string",
            "description": "Resource unique identifier."
          },
          "environment_id": {
            "type": "string",
            "description": "An environment's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab).\n\nFrom the Edgio Console, navigate to the desired environment and then click **Settings**. It is listed under **Environment ID**.\n"
          },
          "key": {
            "type": "string",
            "description": "The environment variable's name."
          },
          "value": {
            "type": "string",
            "description": "The environment variable's value."
          },
          "secret": {
            "type": "boolean",
            "description": "Determines whether the environment variable's value will be masked using asterisks. Once this property has been enabled, it cannot be unset.\n"
          },
          "created_at": {
            "type": "string",
            "description": "The environment variable's creation date and time (UTC).",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "description": "The environment variable's last modification date and time (UTC).",
            "format": "date-time"
          }
        },
        "description": "Config_V1_Entities_EnvironmentVariable model"
      },
      "Config_V1_Entities_EnvironmentVariable_Collection": {
        "required": [
          "@id",
          "@type"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "The resource's type."
          },
          "@id": {
            "type": "string",
            "description": "The resource's relative path."
          },
          "@links": {
            "$ref": "#/components/schemas/BaseApi_Entities_HyperionNavigationLinks"
          },
          "total_items": {
            "type": "integer",
            "description": "Total number of items.",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "description": "List of environment variables.",
            "items": {
              "$ref": "#/components/schemas/Config_V1_Entities_EnvironmentVariable"
            }
          }
        },
        "description": "Config_V1_Entities_EnvironmentVariable_Collection model"
      },
      "putConfigV01EnvironmentVariables": {
        "required": [
          "environment_id",
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "environment_id": {
            "type": "string",
            "description": "An environment's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab).\n\nFrom the Edgio Console, navigate to the desired environment and then click **Settings**. It is listed under **Environment ID**.\n"
          },
          "key": {
            "type": "string",
            "description": "The environment variable's name."
          },
          "value": {
            "type": "string",
            "description": "The environment variable's value."
          },
          "secret": {
            "type": "boolean",
            "description": "Determines whether the environment variable's value will be masked using asterisks. Once this property has been enabled, it cannot be unset.\n"
          }
        },
        "description": "Creates or updates an environment variable."
      },
      "Cache_V1_Entities_PurgeRequest": {
        "required": [
          "@id",
          "@type",
          "id"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "The resource's type."
          },
          "@id": {
            "type": "string",
            "description": "The resource's relative path."
          },
          "@links": {
            "type": "object",
            "properties": {},
            "description": "Links to related resources."
          },
          "id": {
            "type": "string",
            "description": "The purge request's system-defined ID."
          },
          "status": {
            "type": "string",
            "description": "The purge request's status. Valid values are:\n  - `in_progress`: Edgio is still purging content.\n  - `done`: Edgio has purged the requested content.\n"
          },
          "created_at": {
            "type": "string",
            "description": "The date and time (UTC) at which the purge request was submitted.",
            "format": "date-time"
          },
          "completed_at": {
            "type": "string",
            "description": "The date and time (UTC) at which the purge request was completed.",
            "format": "date-time"
          },
          "progress_percentage": {
            "type": "number",
            "description": "The purge request's completion percentage.",
            "format": "float"
          }
        },
        "description": "Cache_V1_Entities_PurgeRequest model"
      },
      "postCacheV01PurgeRequests": {
        "required": [
          "environment_id",
          "purge_type"
        ],
        "type": "object",
        "properties": {
          "environment_id": {
            "type": "string",
            "description": "An environment's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab).\n\nFrom the Edgio Console, navigate to the desired environment and then click **Settings**. It is listed under **Environment ID**.\n"
          },
          "purge_type": {
            "type": "string",
            "description": "- `all_entries`: Purge all cached content.\n- `path`: Purge one or more relative path(s) defined within the `values` property.\n- `surrogate_key`: Purge one or more surrogate key(s) defined within the `values` property.\n",
            "enum": [
              "all_entries",
              "path",
              "surrogate_key"
            ]
          },
          "values": {
            "type": "array",
            "description": "Defines the set of content to be purged. The `purge_type` property's value determines what should be passed.\n  - `all_entries`: Omit this property or pass an empty array.\n  - `path`: Pass one or more relative path(s). This relative path starts directly after the hostname. Use an `*` to represent zero or more characters.\n  - `surrogate_key`: Pass one or more surrogate key(s) (aka cache tags).\n",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Submits a request to purge cached content from a specific environment. Purging content invalidates the cached version of an asset from our edge servers. You may submit up to 50 concurrent purge requests. For the purpose of concurrency, each value defined within the `values` property is considered a separate purge request. Find out the current status of your purge request by passing the purge request ID, which is returned by the `id` property, to the [Get Purge Request operation](#tag/purge-requests/operation/getCacheV01PurgeRequestsRequestId).\n"
      },
      "Accounts_V1_Entities_Environment": {
        "required": [
          "@id",
          "@type",
          "id"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "The resource's type."
          },
          "@id": {
            "type": "string",
            "description": "The resource's relative path."
          },
          "@links": {
            "type": "object",
            "properties": {},
            "description": "Links to related resources."
          },
          "id": {
            "type": "string",
            "description": "Resource unique identifier."
          },
          "property_id": {
            "type": "string",
            "description": "Property ID"
          },
          "name": {
            "type": "string",
            "description": "The environment's name."
          },
          "can_members_deploy": {
            "type": "boolean",
            "description": "Determines whether all organization members may deploy to this environment. Disabling this option restricts deployments to admin users and the deploy token."
          },
          "http_request_logging": {
            "type": "boolean",
            "description": "Determines whether deep-request inspection for serverless logs will be enabled."
          },
          "default_domain_name": {
            "type": "string",
            "description": "The default hostname through which traffic for this environment is served."
          },
          "pci_compliance": {
            "type": "boolean",
            "description": "Determines whether this environment's traffic will be restricted to our PCI-compliant network or served through our entire network."
          },
          "dns_domain_name": {
            "type": "string",
            "description": "Serve traffic for this environment by pointing your CNAMEs to this domain."
          },
          "created_at": {
            "type": "string",
            "description": "The environment's creation date and time (UTC).",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "description": "The environment's last modification date and time (UTC).",
            "format": "date-time"
          }
        },
        "description": "Accounts_V1_Entities_Environment model"
      },
      "patchAccountsV01EnvironmentsEnvironmentId": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The environment's name. This name may only consist of lowercase characters, numbers, dashes, and underscores.\n"
          },
          "can_members_deploy": {
            "type": "boolean",
            "description": "Determines whether all organization memmbers may deploy to this environment. Disabling this option restricts deployments to admin users and the deploy token.\n"
          },
          "http_request_logging": {
            "type": "boolean",
            "description": "Determines whether deep-request inspection for serverless logs will be enabled."
          },
          "preserve_cache": {
            "type": "boolean",
            "description": "Determines whether deploying a new build to this environment will use the same cache as the previous deployment.\n"
          }
        },
        "description": "Updates an environment."
      },
      "Accounts_V1_Entities_Environment_Collection": {
        "required": [
          "@id",
          "@type"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "The resource's type."
          },
          "@id": {
            "type": "string",
            "description": "The resource's relative path."
          },
          "@links": {
            "$ref": "#/components/schemas/BaseApi_Entities_HyperionNavigationLinks"
          },
          "total_items": {
            "type": "integer",
            "description": "Total number of items.",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "description": "List of environments.",
            "items": {
              "$ref": "#/components/schemas/Accounts_V1_Entities_Environment"
            }
          }
        },
        "description": "Accounts_V1_Entities_Environment_Collection model"
      },
      "postAccountsV01Environments": {
        "required": [
          "name",
          "property_id"
        ],
        "type": "object",
        "properties": {
          "property_id": {
            "type": "string",
            "description": "The property's system-defined ID."
          },
          "name": {
            "type": "string",
            "description": "The environment's name. This name may only consist of lowercase characters, numbers, dashes, and underscores.\n"
          },
          "can_members_deploy": {
            "type": "boolean",
            "description": "Determines whether all organization memmbers may deploy to this environment. Disabling this option restricts deployments to admin users and the deploy token.\"\n"
          },
          "http_request_logging": {
            "type": "boolean",
            "description": "Determines whether deep-request inspection for serverless logs will be enabled."
          }
        },
        "description": "Creates an environment."
      },
      "Accounts_V1_Entities_Property": {
        "required": [
          "@id",
          "@type",
          "id"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "The resource's type."
          },
          "@id": {
            "type": "string",
            "description": "The resource's relative path."
          },
          "@links": {
            "type": "object",
            "properties": {},
            "description": "Links to related resources."
          },
          "id": {
            "type": "string",
            "description": "Resource unique identifier."
          },
          "organization_id": {
            "type": "string"
          },
          "slug": {
            "type": "string",
            "description": "The property's name."
          },
          "created_at": {
            "type": "string",
            "description": "The property's creation date and time (UTC).",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "description": "The property's last modification date and time (UTC).",
            "format": "date-time"
          }
        },
        "description": "Accounts_V1_Entities_Property model"
      },
      "patchAccountsV01PropertiesPropertyId": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "description": "The property's name. Space characters are converted to dashes."
          }
        },
        "description": "Update a property."
      },
      "Accounts_V1_Entities_Property_Collection": {
        "required": [
          "@id",
          "@type"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "The resource's type."
          },
          "@id": {
            "type": "string",
            "description": "The resource's relative path."
          },
          "@links": {
            "$ref": "#/components/schemas/BaseApi_Entities_HyperionNavigationLinks"
          },
          "total_items": {
            "type": "integer",
            "description": "Total number of items.",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "description": "List of properties.",
            "items": {
              "$ref": "#/components/schemas/Accounts_V1_Entities_Property"
            }
          }
        },
        "description": "Accounts_V1_Entities_Property_Collection model"
      },
      "postAccountsV01Properties": {
        "required": [
          "organization_id",
          "slug"
        ],
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "description": "The property's name. Space characters are converted to dashes."
          },
          "organization_id": {
            "type": "string",
            "description": "The system-defined ID for the organization under which this property will be created."
          }
        },
        "description": "Create a property."
      },
      "Accounts_V1_Entities_Organization": {
        "required": [
          "@id",
          "@type",
          "id"
        ],
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "The resource's type."
          },
          "@id": {
            "type": "string",
            "description": "The resource's relative path."
          },
          "@links": {
            "type": "object",
            "properties": {},
            "description": "Links to related resources."
          },
          "id": {
            "type": "string",
            "description": "Resource unique identifier."
          },
          "partner_id": {
            "type": "string",
            "description": "The system-defined ID for the partner account under which the organization was created."
          },
          "name": {
            "type": "string",
            "description": "Organization name"
          },
          "pci_compliance": {
            "type": "string",
            "description": "The organization's PCI compliance status. This state is determined by checking PCI-compliance across all environments associated with this organization. Valid values are:\n\n-   **pci:** All environments are PCI-compliant.\n-   **non_pci:** All environments use our entire network.\n-   **mixed:** Some environments are PCI-compliant.\n",
            "enum": [
              "pci",
              "non_pci",
              "mixed"
            ]
          },
          "pci_dns_domain_name": {
            "type": "string",
            "description": "The organization's PCI-compliant DNS domain.\n\nServe traffic through our PCI-compliant network by pointing your CNAMEs to this domain.\n"
          },
          "non_pci_dns_domain_name": {
            "type": "string",
            "description": "The organization's DNS domain for standard traffic. Standard traffic can use our entire network.\n\nServe traffic that does not require PCI-compliance by pointing your CNAMEs to this domain.\n"
          },
          "created_at": {
            "type": "string",
            "description": "The organization's creation date and time (UTC).",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "description": "The organization's last modification date and time (UTC).",
            "format": "date-time"
          }
        },
        "description": "Accounts_V1_Entities_Organization model"
      },
      "patchAccountsV01OrganizationsOrganizationId": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The organization's name."
          }
        },
        "description": "Updates an organization."
      },
      "Operation": {
        "title": "Operation",
        "type": "object",
        "properties": {
          "value": {
            "description": "Required for `RX` or `GLOB` type. The value that will be compared against the request.",
            "type": "string"
          },
          "values": {
            "description": "Required for `EM` type. A list of value(s). Each value will be compared against the request.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_negated": {
            "type": "boolean",
            "description": "Indicates whether this match condition will be satisfied when the request matches or does not match the value defined by the `value` or `values` property."
          },
          "is_case_insensitive": {
            "type": "boolean",
            "description": "\n`EM` type only. Indicates whether the comparison between the request and the `values` property is case-sensitive.\n"
          },
          "type": {
            "type": "string",
            "enum": [
              "GLOB",
              "EM",
              "RX"
            ],
            "description": "\nIndicates how the system will interpret the comparison between the request and the value defined within the `value` or `values` property. Valid values are:\n\n-   **EM:** Indicates that request element being compared (i.e., hostname or URL path) must be an exact match to one of the case-sensitive values specified in the `values` property.\n\n-   **GLOB:** Indicates that the request element being compared (i.e., hostname or URL path) must be an exact match to the wildcard pattern defined in the `value` property. \n\n-   **RX:** Indicates that the request element being compared (i.e., hostname or URL path) must be an exact match to the regular expression defined in the `value` property.\n\nIf you do not wish to restrict this Security App by the current request element (i.e., hostname or URL path), then you should set this property to `GLOB` and the `value` property to `*`. This is the default configuration.\n"
          }
        }
      },
      "WafAuditAction": {
        "title": "Waf Audit Action",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The enforcement action configuration's system-defined ID."
          },
          "name": {
            "type": "string",
            "description": "The enforcement action configuration's name."
          },
          "enf_type": {
            "description": "This property must be set to `ALERT`.",
            "type": "string",
            "enum": [
              "ALERT"
            ]
          }
        }
      },
      "ResponseHeader": {
        "title": "Response Header",
        "type": "object",
        "description": "\nThe set of headers for the custom response sent to the client. Each response header is specified as a name/value pair.\n\n**Example:**\n\n```\n\"x-custom-response\": \"acl-rejected\"\n```\n",
        "additionalProperties": {
          "type": "string"
        }
      },
      "WafProdAction": {
        "title": "Waf Production Action",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The enforcement action configuration's system-defined ID."
          },
          "name": {
            "type": "string",
            "description": "The enforcement action configuration's name."
          },
          "url": {
            "type": "string",
            "description": "\n`REDIRECT_302`: The URL to which requests identified as threats will be redirected.\n"
          },
          "status": {
            "type": "integer",
            "format": "uint32",
            "description": "\n`CUSTOM_RESPONSE`: The HTTP status code (e.g., `404`) for the custom response that will be sent to requests identified as threats.\n"
          },
          "response_body_base64": {
            "type": "string",
            "description": "\n`CUSTOM_RESPONSE`: The Base64 encoded response body that will be sent to requests identified as threats.\n"
          },
          "enf_type": {
            "type": "string",
            "description": "The enforcement action that will be applied to requests identified as threats.",
            "enum": [
              "REDIRECT_302",
              "CUSTOM_RESPONSE",
              "BLOCK_REQUEST",
              "ALERT"
            ]
          },
          "response_headers": {
            "type": "array",
            "description": "\n`CUSTOM_RESPONSE`: The set of response headers that will be sent to requests identified as threats. Each response header is specified as a name/value pair. \n",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ResponseHeader"
                }
              ]
            }
          }
        }
      },
      "LimitsAction": {
        "title": "Action",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The rate rule's system-defined ID."
          },
          "name": {
            "type": "string",
            "description": "The rate rule's name."
          },
          "duration_sec": {
            "description": "The length of time, in seconds, that the action defined within this object will be applied to a client that violates the rate rule identified by the `id` property.",
            "type": "integer",
            "format": "uint32",
            "enum": [
              10,
              60,
              300
            ]
          },
          "url": {
            "type": "string",
            "description": "\n`REDIRECT_302`: The URL to which rate limited requests will be redirected.\n"
          },
          "status": {
            "type": "integer",
            "format": "uint32",
            "description": "\n`CUSTOM_RESPONSE`: The HTTP status code (e.g., `404`) for the custom response sent to rate limited requests.\n"
          },
          "response_body_base64": {
            "type": "string",
            "description": "\n`CUSTOM_RESPONSE`: The Base64 encoded response body that will be sent to rate limited requests. \n"
          },
          "enf_type": {
            "type": "string",
            "description": "The enforcement action that will be applied to rate limited requests.",
            "enum": [
              "REDIRECT_302",
              "CUSTOM_RESPONSE",
              "DROP_REQUEST",
              "ALERT"
            ]
          },
          "response_headers": {
            "type": "array",
            "description": "\n`CUSTOM_RESPONSE`: Contains the set of headers that will be included in the response sent to rate limited requests. \n\n**Syntax:**\n\n```\n\"Response Header\": \"Value\"\n```\n",
            "items": {
              "$ref": "#/components/schemas/ResponseHeader"
            }
          }
        }
      },
      "ScopeLimit": {
        "title": "ScopeLimit",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The system-defined ID for the rate rule that will be applied to this Security App."
          },
          "action": {
            "description": "Describes the action that will take place when the rate rule identified by the id property is enforced.",
            "$ref": "#/components/schemas/LimitsAction"
          }
        }
      },
      "Scope": {
        "title": "Scope",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The Security App's system-defined ID."
          },
          "name": {
            "type": "string",
            "description": "The Security App's name."
          },
          "recaptcha_action_name": {
            "type": "string",
            "description": "The reCAPTCHA configuration's name."
          },
          "recaptcha_secret_key": {
            "type": "string",
            "description": "The reCAPTCHA secret key provided by Google."
          },
          "recaptcha_site_key": {
            "type": "string",
            "description": "The reCAPTCHA site key provided by Google."
          },
          "host": {
            "description": "A hostname match condition.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Operation"
              }
            ]
          },
          "path": {
            "description": "A URL path match condition.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Operation"
              }
            ]
          },
          "acl_audit_id": {
            "type": "string",
            "description": "The system-defined ID for the access rule that will audit your traffic."
          },
          "acl_audit_action": {
            "description": "The type of action that will take place when the access rule defined within the `acl_audit_id` property is violated.",
            "allOf": [
              {
                "$ref": "#/components/schemas/WafAuditAction"
              }
            ]
          },
          "acl_prod_id": {
            "type": "string",
            "description": "The system-defined ID for the access rule that will be applied to your traffic."
          },
          "acl_prod_action": {
            "description": "The type of action that will take place when the access rule defined within the `acl_prod_id` property is violated.",
            "allOf": [
              {
                "$ref": "#/components/schemas/WafProdAction"
              }
            ]
          },
          "rules_audit_id": {
            "type": "string",
            "description": "The system-defined ID for the custom rule that will audit your traffic."
          },
          "rules_audit_action": {
            "description": "The type of action that will take place when the access rule defined within the `rules_audit_id` property is violated.",
            "allOf": [
              {
                "$ref": "#/components/schemas/WafAuditAction"
              }
            ]
          },
          "rules_prod_id": {
            "type": "string",
            "description": "The system-defined ID for the custom rule that will be applied to your traffic."
          },
          "rules_prod_action": {
            "description": "The type of action that will take place when the access rule defined within the `rules_prod_id` property is violated.",
            "allOf": [
              {
                "$ref": "#/components/schemas/WafProdAction"
              }
            ]
          },
          "profile_audit_id": {
            "type": "string",
            "description": "The system-defined ID for the managed rule that will audit your traffic."
          },
          "profile_audit_action": {
            "description": "The type of action that will take place when the managed rule defined within the `profile_audit_id` property is violated.",
            "allOf": [
              {
                "$ref": "#/components/schemas/WafAuditAction"
              }
            ]
          },
          "profile_prod_id": {
            "type": "string",
            "description": "The system-defined ID for the managed rule that will be applied to your traffic."
          },
          "profile_prod_action": {
            "description": "The type of action that will take place when the managed rule defined within the `profile_prod_id` property is violated.",
            "allOf": [
              {
                "$ref": "#/components/schemas/WafProdAction"
              }
            ]
          },
          "bot_manager_config_id": {
            "type": "string",
            "description": "The system-defined ID for the bot manager configuration that will be applied to your traffic."
          },
          "limits": {
            "type": "array",
            "description": "The set of rate rules that will be enforced for this Security App and the enforcement action that will be applied to rate limited requests.",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ScopeLimit"
                }
              ]
            }
          }
        }
      },
      "Scopes": {
        "title": "Scopes",
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Reserved for future use"
          },
          "id": {
            "type": "string",
            "description": "The Security App's system-defined ID."
          },
          "name": {
            "type": "string",
            "description": "The Security App's name."
          },
          "customer_id": {
            "type": "string",
            "description": "\nYour organization's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab). \n\nFrom the Edgio Console, select your organization from the top menu and then click **Settings**. It is listed under **Organization ID**.\n"
          },
          "last_modified_date": {
            "type": "string",
            "description": "The date and time at which a Security App returned by the `scopes` array was last modified."
          },
          "last_modified_by": {
            "type": "string",
            "description": "The Edgio Console user that last modified this access rule. This field does not reflect updates performed through the REST API."
          },
          "scopes": {
            "type": "array",
            "description": "Contains a list of Security Apps.",
            "items": {
              "$ref": "#/components/schemas/Scope"
            }
          },
          "team_config": {
            "type": "boolean",
            "description": "This property must always be `true`. If passed in the request, set it to `true`."
          }
        },
        "required": [
          "team_config"
        ]
      },
      "Error": {
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Returns `false`."
          },
          "errors": {
            "type": "array",
            "description": "Describes the error.",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "A brief description of the error."
                },
                "code": {
                  "type": "integer",
                  "description": "Error code."
                }
              }
            }
          }
        }
      },
      "ResponseObj": {
        "title": "Response Object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The resource's system-defined ID."
          },
          "status": {
            "type": "string",
            "description": "Returns `success`."
          },
          "success": {
            "type": "boolean",
            "description": "Returns `true`."
          }
        }
      },
      "ObjShort": {
        "title": "Object Short",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The resource's system-defined ID."
          },
          "name": {
            "type": "string",
            "description": "The name of the resource."
          },
          "last_modified_date": {
            "type": "string",
            "description": "The date and time at which the resource was last modified."
          }
        },
        "required": [
          "id",
          "name",
          "last_modified_date"
        ]
      },
      "AclStrings": {
        "title": "ACL Strings",
        "type": "object",
        "properties": {
          "accesslist": {
            "type": "array",
            "description": "Contains entries that identify traffic that may access your content upon passing a threat assessment. Cookie, referrer, URL, or user agent entries are regular expressions.",
            "items": {
              "type": "string"
            }
          },
          "blacklist": {
            "type": "array",
            "description": "Contains entries that identify traffic that will be blocked or for which an alert will be generated. Cookie, referrer, URL, or user agent entries are regular expressions.",
            "items": {
              "type": "string"
            }
          },
          "whitelist": {
            "type": "array",
            "description": "Contains entries that identify traffic that may access your content without undergoing threat assessment. Cookie, referrer, URL, or user agent entries are regular expressions.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AclAsns": {
        "title": "ACL ASNs",
        "type": "object",
        "properties": {
          "accesslist": {
            "type": "array",
            "description": "Contains ASN entries that identify traffic that may access your content upon passing a threat assessment.",
            "items": {
              "type": "integer",
              "format": "uint32"
            }
          },
          "blacklist": {
            "type": "array",
            "description": "Contains ASN entries that identify traffic that will be blocked or for which an alert will be generated.",
            "items": {
              "type": "integer",
              "format": "uint32"
            }
          },
          "whitelist": {
            "type": "array",
            "description": "Contains ASN entries that identify traffic that may access your content without undergoing threat assessment.",
            "items": {
              "type": "integer",
              "format": "uint32"
            }
          }
        }
      },
      "Acl": {
        "title": "ACL",
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Reserved for future use."
          },
          "id": {
            "type": "string",
            "description": "The access rule's system-defined ID."
          },
          "name": {
            "type": "string",
            "description": "The access rule's name."
          },
          "customer_id": {
            "type": "string",
            "description": "\nYour organization's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab). \n\nFrom the Edgio Console, select your organization from the top menu and then click **Settings**. It is listed under **Organization ID**.\n"
          },
          "last_modified_date": {
            "type": "string",
            "description": "The date and time at which this configuration was last modified."
          },
          "last_modified_by": {
            "type": "string",
            "description": "The Edgio Console user that last modified this access rule. This field does not reflect updates performed through the REST API."
          },
          "country": {
            "description": "Contains access controls for countries. Each country is identified by its <a href=\"https://docs.edg.io/guides/reference/country_codes\" target=\"_blank\">country code</a>.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AclStrings"
              }
            ]
          },
          "sd_iso": {
            "description": "Contains access controls for country subdivisions. Each country subdivision is identified by its <a href=\"https://www.iso.org/obp/ui/#search/code/\" target=\"_blank\">ISO-3166-2 code</a>.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AclStrings"
              }
            ]
          },
          "ip": {
            "description": "Contains access controls for IPv4 and/or IPv6 addresses. Each IP address is defined through standard IPv4/IPv6 and CIDR notation.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AclStrings"
              }
            ]
          },
          "referer": {
            "description": "Contains access controls for referrers. All referrers defined within a whitelist, accesslist, or blacklist are regular expressions.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AclStrings"
              }
            ]
          },
          "url": {
            "description": "Contains access controls for URL paths. This URL path starts directly after the hostname. All URL paths defined within a whitelist, accesslist, or blacklist are regular expressions.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AclStrings"
              }
            ]
          },
          "cookie": {
            "description": "Contains access controls for cookie names. All cookies defined within a whitelist, accesslist, or blacklist are regular expressions.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AclStrings"
              }
            ]
          },
          "user_agent": {
            "description": "Contains access controls for user agents. All user agents defined within a whitelist, accesslist, or blacklist are regular expressions.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AclStrings"
              }
            ]
          },
          "ja3": {
            "description": "Requires Edgio Premier. Contains access controls for JA3 fingerprints.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AclStrings"
              }
            ]
          },
          "asn": {
            "description": "Contains access controls for autonomous system numbers (ASNs).",
            "allOf": [
              {
                "$ref": "#/components/schemas/AclAsns"
              }
            ]
          },
          "allow_anonymous_proxy": {
            "type": "boolean",
            "description": "Determines whether we will detect requests that use an anonymizer or anonymous proxy tool."
          },
          "super_capacity": {
            "type": "boolean",
            "description": "Determines whether this access rule is restricted to 10,000 or 1,000 IP addresses or IP blocks. Edgio Premier and Standard customers are allowed to create up to 2 high-capacity access rules."
          },
          "allowed_http_methods": {
            "type": "array",
            "description": "Identifies each allowed HTTP method (e.g., `GET`).",
            "items": {
              "type": "string"
            }
          },
          "allowed_request_content_types": {
            "type": "array",
            "description": "Identifies each allowed media type (e.g., `application/json`).",
            "items": {
              "type": "string"
            }
          },
          "disallowed_extensions": {
            "type": "array",
            "description": "A list of file extension(s) for which WAF will send an alert or block the request.",
            "items": {
              "type": "string"
            }
          },
          "disallowed_headers": {
            "type": "array",
            "description": "A list of request header(s) for which WAF will send an alert or block the request.",
            "items": {
              "type": "string"
            }
          },
          "max_file_size": {
            "type": "integer",
            "format": "uint64",
            "description": "The maximum file size, in bytes, for a `POST` request body."
          },
          "response_header_name": {
            "type": "string",
            "description": "The name of the response header that will be included with blocked requests."
          },
          "team_config": {
            "type": "boolean",
            "description": "This property must always be `true`. If passed in the request, set it to `true`."
          }
        },
        "required": [
          "team_config"
        ]
      },
      "Match": {
        "title": "Match",
        "type": "object",
        "description": "Determines the comparison conditions for the request element identified by the `type` property.",
        "properties": {
          "value": {
            "type": "string",
            "description": "\nRestricts the match condition defined by the `type` property to the specified value. \n\n**Example:**\n\nIf the `type` property is set to `REQUEST_HEADERS` and this property is set to `User-Agent`, then this match condition is restricted to the `User-Agent` request header. If the `value` property is omitted, then this match condition applies to all request headers.\n"
          },
          "is_negated": {
            "type": "boolean",
            "description": "\nDetermines whether this condition is satisfied when the request element identified by the `variable` object is found or not found.\n\n-   **True:** Not found. Enabling this property requires an initial object that sets both the `is_negated` and `is_regex` properties to `False`.\n\n    ```\n    ...\n    [{\n    \t\t\"is_negated\": false,\n  \t  \t\"is_regex\": false\n  \t  }, {\n  \t\t\"is_negated\": true,\n  \t\t...\t\n    ```\n\n    Omitting this initial object results in an invalid configuration.\n\n-   **False:** Found.\n"
          },
          "is_regex": {
            "type": "boolean",
            "description": "Determines whether the `value` property will be interpreted as a regular expression or as a literal value."
          }
        }
      },
      "Variable": {
        "title": "Variable",
        "type": "object",
        "description": "Identifies a request element for which a comparison will be made.",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "REQUEST_HEADERS",
              "REQUEST_URI",
              "REQUEST_BODY",
              "REQUEST_METHOD",
              "REQUEST_COOKIES",
              "QUERY_STRING",
              "ARGS_POST",
              "GEO",
              "REMOTE_ADDR",
              "REMOTE_ASN",
              "REQUEST_FILENAME"
            ],
            "description": "\nA variable that determines the type of request element that will be assessed. \n\n-   If a request element consists of one or more key-value pairs, then you may identify a key through a `match` object. \n\n-   If `is_count` has been disabled, then you may identify a specific value through the `operator` object. \n\n<a href=\"https://docs.edg.io/guides/v7/security/matched_on_variables\" target=\"_blank\">Learn more about matched on variables.</a>\n"
          },
          "match": {
            "description": "Contains comparison conditions for the request element identified by the `type` property. You may define up to 20 conditions.",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Match"
                }
              ]
            }
          },
          "is_count": {
            "description": "\nDetermines whether a comparison will be performed between the `operator` object and either a string value or the number of matches found. Valid values are:\n\n-   **true:** A counter will increment whenever the request element defined by this `variable` object is found. Our service will compare this value against `operator.value`.\n\n    If you enable the `is_count` property, then you must also set the `operator.type` property to `EQ`.\n\n-   **false:** Our service will compare the string value derived from the request element defined by this `variable` object against `operator.value`.\n",
            "type": "boolean"
          }
        },
        "required": [
          "type"
        ]
      },
      "Operator": {
        "title": "Operator Object",
        "type": "object",
        "description": "The comparison that will be performed against the request element(s) identified within a `variable` object.",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "RX",
              "STREQ",
              "EQ",
              "CONTAINS",
              "BEGINSWITH",
              "ENDSWITH",
              "IPMATCH"
            ],
            "description": "\nIndicates how the system will interpret the comparison between the `value` property and the value derived from the request element defined within a `variable` object. Valid values are:\n\n-   **RX:** The request's path must satisfy the regular expression defined in the `value` property.\n\n-   **STREQ:** The request's path must be an exact match to the `value` property.\n\n-   **CONTAINS:** The `value` property must contain the request's path.\n\n-   **BEGINSWITH:** The `value` property must start with the request's path.\n\n-   **ENDSWITH:** The `value` property must end with the request's path.\n\n-   **EQ:** The number derived from the `variable` object must be an exact match to the `value` property.\n\n    You should only use `EQ` when the `is_count` property has been enabled.\n\n-   **IPMATCH:** The request's IP address must either be contained by an IP block or be an exact match to an IP address defined in the `value` property. Only use `IPMATCH` with the `REMOTE_ADDR` variable. \n"
          },
          "value": {
            "type": "string",
            "description": "\nA value that will be compared against the string or number value derived from the request element defined within `variable.type`.\n\nIf you are identifying traffic by URL path (`REQUEST_URI`), then you should specify a URL path pattern that starts directly after the hostname. Exclude a protocol or a hostname when defining this property.\n\n**Example:** `/marketing`\n\nIf you are identifying traffic by IP address (`REMOTE_ADDR`), then you should use a comma-delimited list to specify multiple IP blocks and IP addresses.\n\n**Example:** `192.0.2.20,203.0.113.0/24,2001:DB8::/32`\n"
          },
          "is_negated": {
            "type": "boolean",
            "description": "\nDetermines whether this condition is satisfied when the value derived from the request element defined within a `variable` object matches or does not match the `value` property. Valid values are:\n\n-   **True:** Does not match\n\n-   **False:** Matches\n"
          }
        },
        "required": [
          "type"
        ]
      },
      "RulesAction": {
        "title": "Action Object",
        "type": "object",
        "description": "Determines whether the value derived from the request element identified in a `variable` object will be transformed and the metadata that will be used to identify malicious traffic.",
        "properties": {
          "id": {
            "type": "string",
            "description": "\nDetermines the custom ID that will be assigned to this custom rule. This custom ID is exposed through the Security dashboard. Valid values fall within this range: `66000000 - 66999999`. This field is only applicable for the `action` object that resides in the root of the `sec_rule` object. \n\n**Default value:** Random number\n"
          },
          "msg": {
            "type": "string",
            "description": "\nDetermines the rule message that will be assigned to this custom rule. This message is exposed through the Security dashboard. This field is only applicable for the `action` object that resides in the root of the `sec_rule` object.\n\n**Default Value:** Blank\n"
          },
          "t": {
            "description": "\nDetermines the set of transformations that will be applied to the value derived from the request element identified in a `variable` object (i.e., source value). Transformations are always applied to the source value, regardless of the number of transformations that have been defined. Valid values are:\n\n-   **NONE:** Indicates that the source value should not be modified.\n\n-   **LOWERCASE:** Indicates that the source value should be converted to lowercase characters.\n\n-   **URLDECODE:** Indicates that the source value should be URL decoded. This transformation is useful when the source value has been URL encoded twice.\n\n-   **REMOVENULLS:** Indicates that null values should be removed from the source value.\n\nA criterion is satisfied if the source value or any of the modified string values meet the conditions defined by the `operator` object. \n",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "NONE",
                "LOWERCASE",
                "URLDECODE",
                "REMOVENULLS"
              ]
            }
          }
        }
      },
      "ChainedRule": {
        "title": "Chained Rule",
        "type": "object",
        "description": "Each object within the `chained_rule` array describes an additional set of criteria that must be satisfied in order to identify a malicious request.",
        "properties": {
          "variable": {
            "type": "array",
            "description": "Identifies each request element for which a comparison will be made.",
            "items": {
              "$ref": "#/components/schemas/Variable"
            }
          },
          "operator": {
            "description": "Indicates the comparison that will be performed on the string value(s) derived from the request element(s) defined within the `variable` array.",
            "$ref": "#/components/schemas/Operator"
          },
          "action": {
            "description": "Determines whether the string value derived from the request element identified in a `variable` object will be transformed and the metadata that will be used to identify malicious traffic.",
            "$ref": "#/components/schemas/RulesAction"
          }
        }
      },
      "SecRuleObj": {
        "title": "Sec Rule Object",
        "type": "object",
        "description": "Defines how threats will be identified. The root of the `sec_rule` object defines the first set of criteria. Define additional criteria through `chained_rule` objects. A rule is satisfied when a match is found for one or more `variable`(s) for each condition defined within this `sec_rule` object.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The custom rule's system-defined ID."
          },
          "name": {
            "type": "string",
            "description": "The custom rule's name."
          },
          "variable": {
            "description": "Contains criteria that identifies a request element. You may define up to 20 entries.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Variable"
            }
          },
          "operator": {
            "description": "The comparison that will be performed against the request element(s) identified within a `variable` object.",
            "$ref": "#/components/schemas/Operator"
          },
          "action": {
            "description": "Determines whether the string identified in a `variable` object will be transformed and the metadata that will be assigned to identified threats.",
            "$ref": "#/components/schemas/RulesAction"
          },
          "chained_rule": {
            "description": "Contains additional criteria that must be satisfied to identify a threat. You may add up to 5 `chained_rule` objects per custom rule.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChainedRule"
            }
          }
        },
        "required": [
          "variable",
          "action",
          "operator"
        ]
      },
      "SecRule": {
        "title": "Security Rule",
        "type": "object",
        "properties": {
          "sec_rule": {
            "description": "Defines a custom rule.",
            "$ref": "#/components/schemas/SecRuleObj"
          }
        },
        "required": [
          "sec_rule"
        ]
      },
      "Rule": {
        "title": "Rule",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The custom rule's system-defined ID."
          },
          "directive": {
            "description": "Contains custom rules. Each `directive` object defines a custom rule through the `sec_rule` object. You may create up to 10 custom rules.",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SecRule"
                }
              ]
            }
          },
          "customer_id": {
            "type": "string",
            "description": "\nYour organization's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab). \n\nFrom the Edgio Console, select your organization from the top menu and then click **Settings**. It is listed under **Organization ID**.\n"
          },
          "last_modified_date": {
            "type": "string",
            "description": "The date and time at which this configuration was last modified."
          },
          "name": {
            "type": "string",
            "description": "The custom rule's name."
          },
          "team_config": {
            "type": "boolean",
            "description": "This property must always be `true`. If passed in the request, set it to `true`."
          }
        },
        "required": [
          "team_config"
        ]
      },
      "LimitKeyType": {
        "type": "string",
        "enum": [
          "IP",
          "USER_AGENT"
        ]
      },
      "TargetType": {
        "type": "string",
        "description": "Determines how requests will be identified.",
        "enum": [
          "FILE_EXT",
          "REMOTE_ADDR",
          "REMOTE_ASN",
          "GEO",
          "REQUEST_HEADERS",
          "REQUEST_METHOD",
          "REQUEST_URI"
        ]
      },
      "Target": {
        "type": "object",
        "description": "Describes the type of match condition.",
        "properties": {
          "type": {
            "description": "Determines how requests will be identified.",
            "$ref": "#/components/schemas/TargetType"
          },
          "value": {
            "description": "\nRequired for `REQUEST_HEADERS` type. The name of the request header through which requests will be identified. Valid values are: \n\n```\nHost | Referer User-Agent\n```\n",
            "type": "string"
          }
        }
      },
      "OpType": {
        "type": "string",
        "enum": [
          "RX",
          "EM",
          "IPMATCH"
        ]
      },
      "Op": {
        "type": "object",
        "description": "Describes the comparison that will be performed.",
        "properties": {
          "type": {
            "description": "\nIndicates how the system will interpret the comparison between the request and the `values` property.\n\nValid values are:\n\n-   **EM:** Requires that the request's attribute be set to one of the value(s) defined in the `values` property.\n\n-   **IPMATCH:** Requires that the request's IP address either be contained by an IP block or be an exact match to an IP address defined in the `values` property.\n\n    Only use `IPMATCH` with the `REMOTE_ADDR` match condition.\n\n-   **RX:** Requires that the request's attribute be an exact match to the regular expression defined in the `value` property.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/OpType"
              }
            ]
          },
          "value": {
            "description": "Required for `RX` type. Identifies a regular expression used to identify requests that are eligible for rate limiting.",
            "type": "string"
          },
          "is_regex": {
            "type": "boolean"
          },
          "values": {
            "description": "Required for `IPMATCH` and `EM` type. Identifies one or more values used to identify requests that are eligible for rate limiting. You may define up to 200 entries for `IPMATCH` or 100 entries for `EM`.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_negated": {
            "type": "boolean",
            "description": "\nIndicates whether this match condition will be satisfied when the request matches or does not match the value defined by the `values` property. Valid values are:\n\n-   **true:** Does not match\n\n-   **false:** Matches\n"
          },
          "is_case_insensitive": {
            "type": "boolean",
            "description": "\nIndicates whether the comparison between the request and the `values` property is case-sensitive. Valid values are:\n\n-   **true:** Case-insensitive\n-   **false:** Case-sensitive\n"
          }
        }
      },
      "Condition": {
        "title": "Condition",
        "type": "object",
        "description": "Contains a list of match conditions. You may define up to 5 match conditions.",
        "properties": {
          "target": {
            "description": "Describes the type of match condition.",
            "$ref": "#/components/schemas/Target"
          },
          "op": {
            "description": "Describes the comparison that will be performed.",
            "$ref": "#/components/schemas/Op"
          }
        }
      },
      "ConditionGroup": {
        "title": "ConditionGroup",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The condition group's system-defined alphanumeric ID."
          },
          "name": {
            "type": "string",
            "description": "The condition group's name."
          },
          "conditions": {
            "description": "Contains a list of match conditions. You may define up to 5 match conditions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Condition"
            }
          }
        }
      },
      "Limit": {
        "title": "Limit",
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "format": "uint32",
            "description": "Reserved for future use."
          },
          "id": {
            "type": "string",
            "description": "The rate rule's system-defined ID."
          },
          "name": {
            "type": "string",
            "description": "The rate rule's name."
          },
          "customer_id": {
            "type": "string",
            "description": "\nYour organization's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab). \n\nFrom the Edgio Console, select your organization from the top menu and then click **Settings**. It is listed under **Organization ID**.\n"
          },
          "last_modified_date": {
            "type": "string",
            "description": "The date and time at which this configuration was last modified."
          },
          "last_modified_by": {
            "type": "string",
            "description": "The Edgio Console user that last modified this access rule. This field does not reflect updates performed through the REST API."
          },
          "disabled": {
            "type": "boolean",
            "description": "\nIndicates whether this rate rule will be enforced. Valid values are:\n\n-   **true:** Disabled. This rate limit will not be applied to traffic.\n\n-   false:** Enabled. Traffic is restricted to this rate limit.\n"
          },
          "duration_sec": {
            "description": "The length, in seconds, of the rolling window that tracks the number of requests eligible for rate limiting. The `num` property determines the maximum number of requests for this time period.",
            "type": "integer",
            "format": "uint32",
            "enum": [
              1,
              5,
              10,
              30,
              60,
              120,
              300
            ]
          },
          "num": {
            "type": "integer",
            "format": "uint32",
            "description": "The number of requests that will trigger rate limiting."
          },
          "keys": {
            "type": "array",
            "description": "\nThe method by which requests will be grouped for the purposes of this rate rule. Valid values are:\n\n-   **Missing / Empty Array:** If the keys property is not defined or set to an empty array, all requests will be treated as a single group for the purpose of rate limiting.\n\n-   **IP:** Indicates that requests will be grouped by IP address. Each unique IP address is considered a separate group.\n\n-   **USER_AGENT:** Indicates that requests will be grouped by a client's user agent. Each unique combination of IP address and user agent is considered a separate group.\n",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LimitKeyType"
                }
              ]
            }
          },
          "condition_groups": {
            "type": "array",
            "description": "Contains the set of condition groups associated with a rule.",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ConditionGroup"
                }
              ]
            }
          },
          "team_config": {
            "type": "boolean",
            "description": "This property must always be `true`. If passed in the request, set it to `true`."
          }
        },
        "required": [
          "team_config"
        ]
      },
      "ProfileShort": {
        "title": "Profile Short",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The managed rule's system-defined ID."
          },
          "name": {
            "type": "string",
            "description": "The managed rule's name."
          },
          "created_date": {
            "type": "string",
            "description": "The date and time at which the managed rule was created."
          },
          "last_modified_date": {
            "type": "string",
            "description": "The date and time at which the managed rule was last modified."
          },
          "ruleset_id": {
            "type": "string",
            "description": "The ID for the ruleset associated with this managed rule."
          },
          "ruleset_version": {
            "type": "string",
            "description": "The version of the ruleset associated with this managed rule."
          }
        },
        "required": [
          "id",
          "name",
          "created_date",
          "last_modified_date",
          "ruleset_id",
          "ruleset_version"
        ]
      },
      "GeneralSettings": {
        "title": "General Settings",
        "type": "object",
        "properties": {
          "arg_length": {
            "type": "integer",
            "format": "uint32",
            "description": "The maximum number of characters for any single query string parameter value."
          },
          "arg_name_length": {
            "type": "integer",
            "format": "uint32",
            "description": "The maximum number of characters for any single query string parameter name."
          },
          "max_num_args": {
            "type": "integer",
            "format": "uint32",
            "description": "The maximum number of query string parameters."
          },
          "total_arg_length": {
            "type": "integer",
            "format": "uint32",
            "description": "The maximum number of characters for the query string value."
          },
          "combined_file_sizes": {
            "type": "integer",
            "format": "uint64",
            "description": "The total file size for multipart message lengths."
          },
          "max_file_size": {
            "type": "integer",
            "format": "uint64",
            "description": "End-of-life. This property does not affect your security configuration. Use the [Add Access Rule](#tag/Access-Control-List-(ACL)/operation/create-acl-rule) and the [Update Access Rule](#tag/Access-Control-List-(ACL)/operation/update-acl-rule) operations to manage this setting."
          },
          "response_header_name": {
            "type": "string",
            "description": "Determines the name of the response header that will be included with blocked requests."
          },
          "validate_utf8_encoding": {
            "type": "boolean",
            "description": "\nIndicates whether WAF may check whether a request variable (e.g., ARGS, ARGS_NAMES, and REQUEST_FILENAME) is a valid UTF-8 string. This validation includes checking for missing bytes, invalid characters, and ASCII to UTF-8 character mapping. \n\nYou should only enable this validation if your web server or application uses UTF-8. Otherwise, this validation will result in many false positives.\n"
          },
          "xml_parser": {
            "type": "boolean",
            "description": "Determines whether XML payloads will be inspected."
          },
          "process_request_body": {
            "type": "boolean",
            "description": "Indicates whether WAF will inspect a POST request body."
          },
          "json_parser": {
            "type": "boolean",
            "description": "Determines whether JSON payloads will be inspected."
          },
          "paranoia_level": {
            "type": "integer",
            "format": "uint32",
            "description": "\nThe balance between the level of protection and false positives. Valid values are:\n\n`1 | 2 | 3 | 4`\n"
          },
          "anomaly_threshold": {
            "type": "integer",
            "format": "uint32",
            "description": "The anomaly score threshold."
          },
          "ignore_cookie": {
            "type": "array",
            "description": "Identifies each cookie that will be ignored for the purpose of determining whether a request is malicious traffic. Each entry is a regular expression.",
            "items": {
              "type": "string"
            }
          },
          "ignore_header": {
            "type": "array",
            "description": "Identifies each request header that will be ignored for the purpose of determining whether a request is malicious traffic. Each entry is a regular expression.",
            "items": {
              "type": "string"
            }
          },
          "ignore_query_args": {
            "type": "array",
            "description": "Identifies each query string argument that will be ignored for the purpose of determining whether a request is malicious traffic. Each entry is a regular expression.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "DisabledRule": {
        "title": "Disabled Rule",
        "type": "object",
        "properties": {
          "policy_id": {
            "type": "string",
            "description": "The system-defined ID for the policy associated with a disabled rule."
          },
          "rule_id": {
            "type": "string",
            "description": "The rule's system-defined ID."
          }
        }
      },
      "RuleTargetUpdate": {
        "title": "Rule Target Update",
        "type": "object",
        "properties": {
          "target": {
            "type": "string",
            "description": "The type of data source (e.g., `REQUEST_COOKIES`, `ARGS`, `GEO`, etc.) for which a target will be created. The maximum size of this value is 256 characters."
          },
          "target_match": {
            "type": "string",
            "description": "The name or category (e.g., cookie name, query string name, country code, etc.) for the data source defined in the `target` parameter. The category defined by this parameter will be analyzed when identifying threats. The maximum size of this value is 256 characters."
          },
          "rule_id": {
            "type": "string",
            "description": "A rule's system-defined ID. The configuration defined within this object will alter the behavior of the rule identified by this parameter."
          },
          "is_regex": {
            "type": "boolean",
            "description": "\nDetermines whether the value defined within the `target_match` parameter will be treated as a regular expression or a literal value.\n\n**Default Value:** false\n"
          },
          "is_negated": {
            "type": "boolean",
            "description": "\nDetermines whether the target defined within this object will be ignored when identifying threats.\n\n**Default Value:** false\n"
          }
        }
      },
      "RedactedVariable": {
        "title": "Redacted Variable",
        "type": "object",
        "properties": {
          "match_on": {
            "type": "string",
            "description": "A regular expression that identifies the <a href=\"https://docs.edg.io/guides/security/matched_on_variables\" target=\"_blank\">Matched On variable</a> whose value will be redacted."
          },
          "replacement_name": {
            "type": "string",
            "description": "The new name for the variable identified by the `match_on` property."
          },
          "replacement_value": {
            "type": "string",
            "description": "The value that will be assigned to the variable identified by the `match_on` property."
          }
        }
      },
      "Profile": {
        "title": "Profile",
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Reserved for future use."
          },
          "id": {
            "type": "string",
            "description": "The managed rule's system-defined ID."
          },
          "name": {
            "type": "string",
            "description": "The managed rule's name."
          },
          "customer_id": {
            "type": "string",
            "description": "\nYour organization's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab). \n\nFrom the Edgio Console, select your organization from the top menu and then click **Settings**. It is listed under **Organization ID**.\n"
          },
          "last_modified_date": {
            "type": "string",
            "description": "The date and time at which this configuration was last modified."
          },
          "last_modified_by": {
            "type": "string",
            "description": "The Edgio Console user that last modified this managed rule. This field does not reflect updates performed through the REST API."
          },
          "ruleset_id": {
            "type": "string",
            "description": "\nThe ID for the ruleset associated with this managed rule.\n\nUse the [Get Edgio Rulesets endpoint](#tag/Edgio-Rulesets/operation/get-rulesets) to retrieve a list of Edgio rulesets and their system-defined IDs.\n"
          },
          "ruleset_version": {
            "type": "string",
            "description": "\nThe version of the ruleset associated with this managed rule.    \n\nUse the [Get Edgio Rulesets endpoint](#tag/Edgio-Rulesets/operation/get-rulesets) to retrieve a list of Edgio rulesets and their versions.\n"
          },
          "policies": {
            "type": "array",
            "description": "Contains a list of policies that have been enabled on this managed rule.",
            "items": {
              "type": "string"
            }
          },
          "general_settings": {
            "description": "Contains settings that define the profile for a valid request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralSettings"
              }
            ]
          },
          "disabled_rules": {
            "type": "array",
            "description": "\nContains all disabled rules. \n\n**Default Value:** Null\n",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DisabledRule"
                }
              ]
            }
          },
          "rule_target_updates": {
            "type": "array",
            "description": "\nDefines one or more targets that will be ignored and/or replaced.\n\n**Key information:**\n\n-   If `is_negated` is set to `true`, then this target identifies rule criterion that will be ignored when identifying threats.\n\n-   The `replace_target` property defines criterion that will be used to identify threats instead of the existing criterion.\n\n-   If `is_regex` is set to `true`, then you may use regular expressions to define criteria for identifying multiple types of threats.\n\n-   A maximum of 25 target configurations may be created.\n",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RuleTargetUpdate"
                }
              ]
            }
          },
          "redacted_variables": {
            "type": "array",
            "description": "Remove sensitive information from WAF log data.",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RedactedVariable"
                }
              ]
            }
          },
          "team_config": {
            "type": "boolean",
            "description": "This property must always be `true`. If passed in the request, set it to `true`."
          }
        },
        "required": [
          "team_config"
        ]
      },
      "Ruleset": {
        "title": "Ruleset",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The Edgio ruleset's system-defined ID."
          },
          "description": {
            "type": "string",
            "description": "The Edgio ruleset's description."
          },
          "versions": {
            "type": "array",
            "description": "The Edgio ruleset's available versions.",
            "items": {
              "type": "string"
            }
          },
          "display": {
            "type": "string",
            "description": "The Edgio ruleset's name."
          }
        }
      },
      "ApiRule": {
        "title": "API Rule Object",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The rule's name."
          },
          "id": {
            "type": "string",
            "description": "The rule's system-defined ID."
          },
          "methods": {
            "type": "array",
            "description": "\nIdentifies the set of API requests that will be screened by one or more HTTP method(s). Valid values are: `GET | DELETE | PATCH | POST | PUT`\n",
            "items": {
              "type": "string"
            }
          },
          "path": {
            "$ref": "#/components/schemas/Operator"
          },
          "schema_id": {
            "type": "string",
            "description": "\nAn API schema's system-defined ID. \n\nUse the [Get All API Schemas operation](#tag/API-Schemas/operation/get-api-schemas) to retrieve a list of API schemas and their system-defined IDs.\n"
          }
        },
        "required": [
          "schema_id"
        ]
      },
      "ApiGateway": {
        "title": "API gateway object",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The API Security ruleset's system-defined ID."
          },
          "name": {
            "type": "string",
            "description": "The API Security ruleset's name."
          },
          "customer_id": {
            "type": "string",
            "description": "An internal system-defined ID."
          },
          "last_modified_date": {
            "type": "string",
            "description": "The date and time at which this configuration was last modified."
          },
          "last_modified_by": {
            "type": "string",
            "description": "The Edgio Console user that last modified this access rule. This field does not reflect updates performed through the REST API."
          },
          "team_config": {
            "type": "boolean",
            "description": "This property must always be `true`. If passed in the request, set it to `true`."
          },
          "rules": {
            "type": "array",
            "description": "Contains one or more rule(s) that identify a set of requests and a JSON schema through which Edgio will screen that traffic.",
            "items": {
              "$ref": "#/components/schemas/ApiRule"
            }
          }
        },
        "required": [
          "team_config"
        ]
      },
      "ApiSchema": {
        "title": "Api Schema",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The API schema’s system-defined ID."
          },
          "api_gw_id": {
            "type": "string",
            "description": "The API Security ruleset's system-defined ID."
          },
          "customer_id": {
            "type": "string",
            "description": "An internal system-defined ID."
          },
          "last_modified_date": {
            "type": "string",
            "description": "The date and time at which this configuration was last modified."
          }
        }
      },
      "RepDb": {
        "title": "Reputation DB Include",
        "type": "object",
        "properties": {
          "include": {
            "description": "Indicates that the bot rule that will use our reputation database. This type of rule is satisfied when the client’s IP address matches an IP address defined within our reputation database. Our reputation database contains a list of IP addresses known to be used by bots.",
            "enum": [
              "r3010_ec_bot_challenge_reputation.conf.json"
            ]
          }
        }
      },
      "MatchBot": {
        "title": "Match",
        "type": "object",
        "description": "Contains comparison settings for the request element identified by the `type` property. You may define up to 20 entries.",
        "properties": {
          "value": {
            "type": "string",
            "description": null
          },
          "is_negated": {
            "type": "boolean",
            "description": "\nDetermines whether this condition is satisfied when the request element identified by the `variable` object is found or not found.\n\n-   **true:** Not found\n\n    If this property has been enabled, then the match array should contain an initial object that sets both the `is_negated` and `is_regex` properties to `false`.\n    \n    ```\n        ...\n        [{\n        \t\t\"is_negated\": false,\n        \t\t\"is_regex\": false\n        \t}, {\n        \t\t\"is_negated\": true,\n        \t\t...\t\n    ```\n\n-   **false:** Found\n"
          },
          "is_regex": {
            "type": "boolean",
            "description": null
          }
        }
      },
      "VariableBot": {
        "title": "Variable",
        "type": "object",
        "description": null,
        "properties": {
          "type": {
            "type": "string",
            "description": "\nDetermines the request element that will be assessed. \n\n<a href=\"https://docs.edg.io/guides/v7/security/matched_on_variables\" target=\"_blank\">Learn more about matched on variables.</a>\n",
            "enum": [
              "REQUEST_HEADERS",
              "REQUEST_URI",
              "REQUEST_METHOD",
              "REQUEST_COOKIES",
              "QUERY_STRING",
              "GEO",
              "REMOTE_ADDR"
            ]
          },
          "match": {
            "description": "Contains comparison settings for the request element identified by the `type` property. You may define up to 20 entries.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatchBot"
            }
          },
          "is_count": {
            "type": "boolean",
            "description": "\nDetermines whether a comparison will be performed between the `operator` object and either a string value or the number of matches found. Valid values are:\n\n-   **true:** A counter will increment whenever the request element defined by this `variable` object is found. Our service will compare this value against `operator.value`.\n\n    If you enable the `is_count` property, then you must also set the `operator.type` property to `EQ`.\n\n-   **false:** Our service will compare the string value derived from the request element defined by this `variable` object against `operator.value`.\n"
          }
        },
        "required": [
          "type"
        ]
      },
      "OperatorBot": {
        "title": "Operator Object",
        "type": "object",
        "description": "The comparison that will be performed against the request element(s) identified within a `variable` object.",
        "properties": {
          "type": {
            "type": "string",
            "description": "\nIndicates how the system will interpret the comparison between the `value` property and the value derived from the request element defined within a `variable` object. Valid values are:\n\n-   **RX:** The string value derived from the request element must satisfy the regular expression defined in the `value` property.\n\n-   **STREQ:** The string value derived from the request element must be an exact match to the `value` property.\n\n-   **CONTAINS:** The `value` property must contain the string value derived from the request element.\n\n-   **BEGINSWITH:** The `value` property must start with the string value derived from the request element.\n\n-   **ENDSWITH:** The `value` property must end with the string value derived from the request element.\n\n-   **EQ:** The number derived from the `variable` object must be an exact match to the `value` property. \n\n    You should only use `EQ` when the `is_count` property has been enabled.\n\n-   **IPMATCH:** The request's IP address must either be contained by an IP block or be an exact match to an IP address defined in the `value` property. Only use `IPMATCH` with the `REMOTE_ADDR` variable. \n",
            "enum": [
              "RX",
              "STREQ",
              "EQ",
              "CONTAINS",
              "BEGINSWITH",
              "ENDSWITH",
              "IPMATCH"
            ]
          },
          "value": {
            "type": "string",
            "description": "\nThe value that will be compared against the string or number value derived from the request element defined within a `variable` object.\n\n-   If you are identifying traffic by URL path (`REQUEST_URI`), then you should specify a URL path pattern that starts directly after the hostname. Exclude a protocol or a hostname when defining this property.\n\n    **Examples:**\n\n    /marketing\n    /800001/mycustomerorigin\n\n-   If you are identifying traffic by IP address (`REMOTE_ADDR` and `IPMATCH`), then you should use a comma-delimited list to specify multiple IP blocks and IP addresses.\n\n    **Example:**\n\n    192.0.2.20,203.0.113.0/24,2001:DB8::/32\n"
          },
          "values": {
            "description": "Max 20 entries.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is_negated": {
            "type": "boolean",
            "description": "\nDetermines whether this condition is satisfied when the value derived from the request element defined within a `variable` object matches or does not match the `value` property. Valid values are:\n\n-   **true:** Does not match\n\n-   **false:** Matches\n"
          }
        },
        "oneOf": [
          {
            "required": [
              "value"
            ]
          },
          {
            "required": [
              "values"
            ]
          }
        ],
        "required": [
          "type"
        ]
      },
      "RulesActionBot": {
        "title": "Action Object",
        "type": "object",
        "description": "Determines whether the string identified in a `variable` object will be transformed and metadata through which you may identify traffic to which this bot rule was applied.",
        "properties": {
          "id": {
            "type": "string",
            "description": "\nThe bot rule's custom ID. This custom ID is exposed through the Security dashboard. Valid values fall within this range: 77000000-77999999. This property is only applicable for the `action` object that resides in the root of the `sec_rule` object. \n\n**Default Value:** Random number\n"
          },
          "msg": {
            "type": "string",
            "description": "\nThe bot rule's message. This message is exposed through the Security dashboard. This field is only applicable for the `action` object that resides in the root of the `sec_rule` object.\n\n**Default Value:** Blank\n"
          },
          "t": {
            "type": "array",
            "description": "\nThe set of transformations that will be applied to the value derived from the request element identified in a `variable` object (i.e., source value). Transformations are always applied to the source value, regardless of the number of transformations that have been defined. Valid values are:\n\n-   **NONE:** Indicates that the source value should not be modified.\n\n-   **LOWERCASE:** Indicates that the source value should be converted to lowercase characters.\n\n-   **URLDECODE:** Indicates that the source value should be URL decoded. This transformation is useful when the source value has been URL encoded twice.\n\n-   **REMOVENULLS:** Indicates that null values should be removed from the source value.\n\n  A criterion is satisfied if the source value or any of the modified string values meet the conditions defined by the `operator` object.\n",
            "items": {
              "type": "string",
              "enum": [
                "NONE",
                "LOWERCASE",
                "URLDECODE",
                "REMOVENULLS"
              ]
            }
          }
        }
      },
      "ChainedRuleBot": {
        "title": "Chained Rule",
        "type": "object",
        "properties": {
          "variable": {
            "type": "array",
            "description": "Identifies each request element for which a comparison will be made.",
            "items": {
              "$ref": "#/components/schemas/VariableBot"
            }
          },
          "operator": {
            "$ref": "#/components/schemas/OperatorBot"
          },
          "action": {
            "$ref": "#/components/schemas/RulesActionBot"
          }
        }
      },
      "SecRuleObjBot": {
        "title": "Sec Rule Object",
        "type": "object",
        "description": "A configuration for a bot rule that uses custom match conditions.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The bot rule's system-defined ID."
          },
          "name": {
            "type": "string",
            "description": "The bot rule's name."
          },
          "variable": {
            "description": "Contains criteria that identifies a request element. You may define up to 20 entries.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VariableBot"
            }
          },
          "operator": {
            "$ref": "#/components/schemas/OperatorBot"
          },
          "action": {
            "$ref": "#/components/schemas/RulesActionBot"
          },
          "chained_rule": {
            "description": "Contains additional criteria that must be satisfied to identify traffic to which this bot rule will be applied. You may add up to 5 `chained_rule` objects per bot rule.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChainedRuleBot"
            }
          }
        },
        "required": [
          "variable",
          "action",
          "operator"
        ]
      },
      "SecRuleBot": {
        "title": "Security Rule",
        "type": "object",
        "description": "Indicates that the bot rule that will use custom match conditions. This type of rule is satisfied when a match is found for each of its conditions. A condition determines request identification by defining what will be matched (i.e., `variable`), how it will be matched (i.e., `operator`), and a match value.",
        "properties": {
          "sec_rule": {
            "$ref": "#/components/schemas/SecRuleObjBot"
          }
        },
        "required": [
          "sec_rule"
        ]
      },
      "Bot": {
        "title": "Bot",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The bot ruleset's system-defined ID."
          },
          "directive": {
            "description": "Contains the bot rules associated with this bot ruleset. You may create up to 10 bot rules per bot ruleset.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/RepDb"
                },
                {
                  "$ref": "#/components/schemas/SecRuleBot"
                }
              ]
            }
          },
          "customer_id": {
            "type": "string",
            "description": "\nYour organization's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab). \n\nFrom the Edgio Console, select your organization from the top menu and then click **Settings**. It is listed under **Organization ID**.\n"
          },
          "last_modified_date": {
            "type": "string",
            "description": "The date and time at which this bot ruleset was last modified."
          },
          "name": {
            "type": "string",
            "description": "The bot ruleset's name."
          },
          "team_config": {
            "type": "boolean",
            "description": "This property must always be `true`. If passed in the request, set it to `true`."
          }
        },
        "required": [
          "directive",
          "team_config"
        ]
      },
      "AlertAction": {
        "title": "Alert Action",
        "type": "object",
        "description": "Generates an alert.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The enforcement action's system-defined ID."
          },
          "name": {
            "type": "string",
            "description": "The enforcement action's name."
          },
          "enf_type": {
            "type": "string",
            "description": "The type of enforcement action.",
            "enum": [
              "ALERT"
            ]
          }
        }
      },
      "CustomResponseAction": {
        "title": "Custom Response Action",
        "type": "object",
        "description": "Returns a custom response.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The enforcement action's system-defined ID."
          },
          "name": {
            "type": "string",
            "description": "The enforcement action's name."
          },
          "enf_type": {
            "type": "string",
            "description": "The type of enforcement action.",
            "enum": [
              "CUSTOM_RESPONSE"
            ]
          },
          "response_body_base64": {
            "type": "string",
            "description": "The Base64 encoded payload for the custom response sent to the client."
          },
          "status": {
            "type": "integer",
            "format": "uint32",
            "description": "The HTTP status code (e.g., `404`) for the custom response sent to the client."
          },
          "response_headers": {
            "$ref": "#/components/schemas/ResponseHeader"
          }
        }
      },
      "BlockRequestAction": {
        "title": "Block Action",
        "type": "object",
        "description": "Blocks the request.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The enforcement action's system-defined ID."
          },
          "name": {
            "type": "string",
            "description": "The enforcement action's name."
          },
          "enf_type": {
            "type": "string",
            "description": "The type of enforcement action.",
            "enum": [
              "BLOCK_REQUEST"
            ]
          }
        }
      },
      "RedirectAction": {
        "title": "Redirect Action",
        "type": "object",
        "description": "Redirects the request.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The enforcement action's system-defined ID."
          },
          "name": {
            "type": "string",
            "description": "The enforcement action's name."
          },
          "enf_type": {
            "type": "string",
            "description": "The type of enforcement action.",
            "enum": [
              "REDIRECT_302"
            ]
          },
          "url": {
            "type": "string",
            "description": "The URL to which requests will be redirected."
          }
        }
      },
      "BrowserChallengeAction": {
        "title": "Browser Challenge Action",
        "type": "object",
        "description": "Requires clients to solve a browser challenge before honoring the request.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The enforcement action's system-defined ID."
          },
          "name": {
            "type": "string",
            "description": "The enforcement action's name."
          },
          "enf_type": {
            "type": "string",
            "description": "The type of enforcement action.",
            "enum": [
              "BROWSER_CHALLENGE"
            ]
          },
          "is_custom_challenge": {
            "type": "boolean",
            "description": "Determines whether to serve a standard or custom browser challenge."
          },
          "response_body_base64": {
            "type": "string",
            "description": "The Base64 encoded payload for the custom browser challenge sent to the client."
          },
          "valid_for_sec": {
            "type": "integer",
            "format": "uint32",
            "description": "The  number of minutes for which our CDN will serve content to a client that solves a browser challenge without requiring an additional browser challenge to be solved. Valid values are `1`-`1440`."
          },
          "status": {
            "type": "integer",
            "format": "uint32",
            "description": "The HTTP status code (e.g., `200`) for the response sent to the client. Certain status codes (e.g., `204`) may prevent clients that successfully solve a browser challenge from properly displaying your site."
          }
        }
      },
      "RecaptchaAction": {
        "title": "Recaptcha Action",
        "type": "object",
        "description": "Performs an automated assessment of a client’s interaction with your site. This assessment, which is performed without user interaction, requires <a href=\"https://www.google.com/recaptcha/about/\" target=\"_blank\">Google reCAPTCHA v3</a>.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The enforcement action's system-defined ID."
          },
          "name": {
            "type": "string",
            "description": "The enforcement action's name."
          },
          "enf_type": {
            "type": "string",
            "description": "The type of enforcement action.",
            "enum": [
              "RECAPTCHA"
            ]
          },
          "valid_for_sec": {
            "type": "integer",
            "format": "uint32",
            "description": "The  number of seconds for which our CDN will serve content to a client that passes a reCAPTCHA assessment without requiring an additional assessment. Valid values are `1`-`86400`."
          },
          "status": {
            "type": "integer",
            "format": "uint32",
            "description": "The HTTP status code (e.g., `200`) for the response sent to the client. Certain status codes (e.g., `204`) may prevent clients that successfully solve a reCAPTCHA from properly displaying your site."
          },
          "failed_action_type": {
            "type": "string",
            "description": "The enforcement action that will be applied when the client’s reCAPTCHA score is unacceptable.",
            "enum": [
              "ALERT",
              "BLOCK_REQUEST"
            ]
          }
        }
      },
      "ActionObj": {
        "title": "Actions",
        "type": "object",
        "description": "Contains an object for each enforcement action associated with this bot manager configuration.",
        "properties": {
          "ALERT": {
            "$ref": "#/components/schemas/AlertAction"
          },
          "CUSTOM_RESPONSE": {
            "$ref": "#/components/schemas/CustomResponseAction"
          },
          "BLOCK_REQUEST": {
            "$ref": "#/components/schemas/BlockRequestAction"
          },
          "REDIRECT_302": {
            "$ref": "#/components/schemas/RedirectAction"
          },
          "BROWSER_CHALLENGE": {
            "$ref": "#/components/schemas/BrowserChallengeAction"
          },
          "RECAPTCHA": {
            "$ref": "#/components/schemas/RecaptchaAction"
          }
        }
      },
      "KnownBotObj": {
        "title": "Known Bot Object",
        "type": "object",
        "description": "Contains the set of known bots that Edgio may automatically detect and the enforcement action that may be applied to them.",
        "properties": {
          "action_type": {
            "type": "string",
            "description": "\nThe type of enforcement action that will be applied to a known bot. \n\n<a href=\"https://docs.edg.io/guides/security/bot_rules#actions\" target=\"_blank\">Learn more about enforcement actions.</a>\n",
            "enum": [
              "ALERT",
              "BLOCK_REQUEST",
              "CUSTOM_RESPONSE",
              "BROWSER_CHALLENGE",
              "REDIRECT_302",
              "RECAPTCHA"
            ]
          },
          "bot_token": {
            "description": "A token that identifies a known bot.",
            "type": "string"
          }
        },
        "required": [
          "action_type",
          "bot_token"
        ]
      },
      "BotManager": {
        "title": "Bot Manager",
        "type": "object",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/ActionObj"
          },
          "bots_prod_id": {
            "type": "string",
            "description": "\nThe system-defined ID for the bot ruleset that will be applied to production traffic when this bot manager configuration is applied to a Security App. \n\nUse the [Get All Bot Rulesets operation](#tag/Bot-Rules/operation/get-bot-rules) to retrieve a list of bot rulesets and their system-defined IDs.\n"
          },
          "exception_cookie": {
            "type": "array",
            "description": "\nIdentifies traffic that will be exempt from bot detection by cookie. \n\n**Cookie syntax:** `<COOKIE NAME>:<COOKIE VALUE>`. \n\nEdgio treats the cookie’s value as a regular expression.\n",
            "items": {
              "type": "string"
            }
          },
          "exception_ja3": {
            "type": "array",
            "description": "Identifies traffic that will be exempt from bot detection by JA3 fingerprint. A JA3 fingerprint identifies a client using key characteristics from a TLS request.",
            "items": {
              "type": "string"
            }
          },
          "exception_url": {
            "type": "array",
            "description": "A regular expression that identifies traffic that will be exempt from bot detection by URL.",
            "items": {
              "type": "string"
            }
          },
          "exception_user_agent": {
            "type": "array",
            "description": "A regular expression that identifies traffic that will be exempt from bot detection by user agent.",
            "items": {
              "type": "string"
            }
          },
          "inspect_known_bots": {
            "type": "boolean",
            "description": "Determines whether Edgio will automatically detect the known bots defined within the `known_bots` array."
          },
          "known_bots": {
            "type": "array",
            "description": "Contains the set of known bots that Edgio may automatically detect and the enforcement action that may be applied to them.",
            "items": {
              "$ref": "#/components/schemas/KnownBotObj"
            }
          },
          "customer_id": {
            "type": "string",
            "description": "\nYour organization's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab). \n\nFrom the Edgio Console, select your organization from the top menu and then click **Settings**. It is listed under **Organization ID**.\n"
          },
          "last_modified_date": {
            "type": "string",
            "description": "The date and time at which this configuration was last modified."
          },
          "last_modified_by": {
            "type": "string",
            "description": "The Edgio Console user that last modified this access rule. This field does not reflect updates performed through the REST API."
          },
          "name": {
            "type": "string",
            "description": "The bot manager configuration's name."
          },
          "spoof_bot_action_type": {
            "type": "string",
            "description": "\nThe enforcement action that will be applied to traffic spoofing a known bot defined within the `known_bots` array. \n\n<a href=\"https://docs.edg.io/guides/security/bot_rules#actions\" target=\"_blank\">Learn more about enforcement actions.</a>\n",
            "enum": [
              "ALERT",
              "BLOCK_REQUEST",
              "CUSTOM_RESPONSE",
              "BROWSER_CHALLENGE",
              "REDIRECT_302",
              "RECAPTCHA"
            ]
          },
          "team_config": {
            "type": "boolean",
            "description": "This property must always be `true`. If passed in the request, set it to `true`."
          }
        },
        "required": [
          "team_config"
        ]
      }
    },
    "parameters": {
      "organization_id": {
        "name": "organization_id",
        "in": "path",
        "required": true,
        "description": "\nYour organization's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab). \n\nFrom the Edgio Console, select your organization from the top menu and then click **Settings**. It is listed under **Organization ID**.\n",
        "schema": {
          "type": "string"
        }
      },
      "acl_id": {
        "name": "acl_id",
        "in": "path",
        "required": true,
        "description": "\nAn access rule's system-defined ID. \n\nUse the [Get All Access Rules operation](#tag/Access-Control-List-(ACL)/operation/get-acl-rules) to retrieve a list of access rules and their system-defined IDs.\n",
        "schema": {
          "type": "string"
        }
      },
      "rule_id": {
        "name": "rule_id",
        "in": "path",
        "required": true,
        "description": "\nA custom rule's system-defined ID. \n\nUse the [Get All Custom Rules operation](#tag/Custom-Rules/operation/get-custom-rules) to retrieve a list of custom rules and their system-defined IDs.\n",
        "schema": {
          "type": "string"
        }
      },
      "limit_id": {
        "name": "limit_id",
        "in": "path",
        "required": true,
        "description": "\nA rate rule's system-defined ID. \n\nUse the [Get All Rate Rules operation](#tag/Rate-Rules-(Limits)/operation/get-rate-rules) to retrieve a list of rate rules and their system-defined IDs.\n",
        "schema": {
          "type": "string"
        }
      },
      "profile_id": {
        "name": "profile_id",
        "in": "path",
        "required": true,
        "description": "\nA managed rule's system-defined ID. \n\nUse the [Get All Managed Rules operation](#tag/Managed-Rules-(Profiles)/operation/get-managed-rules) to retrieve a list of managed rules and their system-defined IDs.\n",
        "schema": {
          "type": "string"
        }
      },
      "api_gateway_id": {
        "name": "api_gateway_id",
        "in": "path",
        "required": true,
        "description": "\nAn API Security Ruleset's system-defined ID. \n\nUse the [Get All API Security Rulesets operation](#tag/API-Gateways/operation/get-api-gateways) to retrieve a list of API Security Rulesets and their system-defined IDs.\n",
        "schema": {
          "type": "string"
        }
      },
      "api_schema_id": {
        "name": "api_schema_id",
        "in": "path",
        "required": true,
        "description": "\nAn API schema's system-defined ID. \n\nUse the [Get All API Schemas operation](#tag/API-Schemas/operation/get-api-schemas) to retrieve a list of API schemas and their system-defined IDs.\n",
        "schema": {
          "type": "string"
        }
      },
      "bot_id": {
        "name": "bot_id",
        "in": "path",
        "required": true,
        "description": "\nA bot ruleset's system-defined ID. \n\nUse the [Get All Bot Rulesets operation](#tag/Bot-Rules/operation/get-bot-rules) to retrieve a list of bot rulesets and their system-defined IDs.\n",
        "schema": {
          "type": "string"
        }
      },
      "bot_manager_id": {
        "name": "bot_manager_id",
        "in": "path",
        "required": true,
        "description": "\nA bot manager configuration's system-defined ID.\n\nUse the [Get All Bot Managers operation](#tag/Bot-Managers/operation/get-bot-managers) to retrieve a list of bot manager configurations and their system-defined IDs.\n",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "error_429": {
        "description": "Too Many Requests. Rate limit exceeded.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "error_500": {
        "description": "Internal Server Error. An unexpected error occured.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "error_404": {
        "description": "Not Found. The requested resource does not exist.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "error_400": {
        "description": "Bad Request.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "error_403": {
        "description": "Forbidden.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "requestBodies": {
      "Scopes": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Scopes"
            }
          }
        },
        "required": true
      },
      "Acl": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Acl"
            }
          }
        },
        "required": true
      },
      "Rule": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Rule"
            }
          }
        },
        "required": true
      },
      "Limit": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Limit"
            }
          }
        },
        "required": true
      },
      "Profile": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Profile"
            }
          }
        },
        "required": true
      },
      "APIGateway": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiGateway"
            }
          }
        },
        "required": true
      },
      "APISchema": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiSchema"
            }
          }
        },
        "required": true
      },
      "Bot": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Bot"
            }
          }
        },
        "required": true
      },
      "BotManager": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BotManager"
            }
          }
        },
        "required": true
      }
    }
  },
  "x-tagGroups": [
    {
      "name": "Cache",
      "tags": [
        "purge requests"
      ]
    },
    {
      "name": "Deployments",
      "tags": [
        "configs",
        "environment-variables",
        "deployments"
      ]
    },
    {
      "name": "TLS Certificates",
      "tags": [
        "tls-certs"
      ]
    },
    {
      "name": "WAF (Security)",
      "tags": [
        "Access Control List (ACL)",
        "API Gateways",
        "API Schemas",
        "Rate Rules (Limits)",
        "Bot Managers",
        "Bot Rules",
        "Known Bots",
        "Custom Rules",
        "Managed Rules (Profiles)",
        "Edgio Rulesets",
        "Security Applications (Scopes)"
      ]
    },
    {
      "name": "Organizations",
      "tags": [
        "organizations"
      ]
    },
    {
      "name": "Properties",
      "tags": [
        "properties",
        "environments"
      ]
    }
  ]
}