{
  "info": {
    "title": "Edgio Edgio APIs",
    "description": "API spec for Edgio APIs",
    "termsOfService": "https://edg.io/legal/terms-of-service/",
    "contact": {
      "name": "info@edg.io",
      "email": "info@edg.io",
      "url": "https://edg.io/contact-support/"
    },
    "version": "1.0.0-beta"
  },
  "swagger": "2.0",
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "configScope": {
      "type": "oauth2",
      "authorizationUrl": "http://swagger.io/api/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "app.config": "app.config"
      }
    },
    "cacheScope": {
      "type": "oauth2",
      "authorizationUrl": "http://swagger.io/api/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "app.cache.purge": "app.cache.purge"
      }
    },
    "accountsScope": {
      "type": "oauth2",
      "authorizationUrl": "http://swagger.io/api/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "app.accounts": "app.accounts"
      }
    }
  },
  "host": "edgioapis.com",
  "basePath": "/",
  "tags": [
    {
      "name": "environment-variables",
      "description": "Operations about environment-variables"
    },
    {
      "name": "tls-certs",
      "description": "Operations about tls-certs"
    },
    {
      "name": "deployments",
      "description": "Operations about deployments"
    },
    {
      "name": "configs",
      "description": "Operations about configs"
    },
    {
      "name": "purge-requests",
      "description": "Operations about purge-requests"
    },
    {
      "name": "members",
      "description": "Operations about members"
    },
    {
      "name": "environments",
      "description": "Operations about environments"
    },
    {
      "name": "properties",
      "description": "Operations about properties"
    },
    {
      "name": "organizations",
      "description": "Operations about organizations"
    },
    {
      "name": "bff",
      "description": "Operations about bffs"
    }
  ],
  "paths": {
    "/config/v0.1/environment-variables/{environment_variable_id}": {
      "delete": {
        "summary": "Delete Environment Variable",
        "description": "Deletes an environment variable.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "environment_variable_id",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "configScope": [
              "app.config"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Config_V1_Entities_EnvironmentVariable"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "environment-variables"
        ],
        "operationId": "deleteConfigV01EnvironmentVariablesEnvironmentVariableId"
      },
      "get": {
        "summary": "Get Environment Variable",
        "description": "Returns an environment variable.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "environment_variable_id",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "configScope": [
              "app.config"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Config_V1_Entities_EnvironmentVariable"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "environment-variables"
        ],
        "operationId": "getConfigV01EnvironmentVariablesEnvironmentVariableId"
      }
    },
    "/config/v0.1/environment-variables": {
      "put": {
        "summary": "Set Environment Variable",
        "description": "Creates or updates an environment variable.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "putConfigV01EnvironmentVariables",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putConfigV01EnvironmentVariables"
            }
          }
        ],
        "security": [
          {
            "configScope": [
              "app.config"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Config_V1_Entities_EnvironmentVariable"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "environment-variables"
        ],
        "operationId": "putConfigV01EnvironmentVariables"
      },
      "get": {
        "summary": "Get All Environment Variables",
        "description": "Returns all environment variables associated with an environment.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "0-based page number.",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "Number of results per page. Valid values are: 1 - 100. **Default value:** 20",
            "type": "integer",
            "format": "int32",
            "default": 20,
            "required": false
          },
          {
            "in": "query",
            "name": "key",
            "description": "Find an environment variable by its name.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "environment_id",
            "description": "An environment's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab).\n\nFrom the Edgio Console, navigate to the desired environment and then click **Settings**. It is listed under **Environment ID**.\n",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "configScope": [
              "app.config"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Config_V1_Entities_EnvironmentVariable_Collection"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "environment-variables"
        ],
        "operationId": "getConfigV01EnvironmentVariables"
      }
    },
    "/config/v0.1/tls-certs/{cert_id}": {
      "get": {
        "summary": "Get TLS Certificate",
        "description": "Returns a TLS certificate.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cert_id",
            "description": "The TLS certificate's system-defined ID. Use the [Get All Certificates operation](#tag/tls-certs/operation/getConfigV01TlsCerts) to retrieve a list of TLS certificates and their system-defined IDs.\n",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "configScope": [
              "app.config"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Config_V1_Entities_TlsCert"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "tls-certs"
        ],
        "operationId": "getConfigV01TlsCertsCertId"
      }
    },
    "/config/v0.1/tls-certs": {
      "post": {
        "summary": "Upload TLS Certificate",
        "description": "Upload your TLS certificate to activate it within a specific environment.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "postConfigV01TlsCerts",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postConfigV01TlsCerts"
            }
          }
        ],
        "security": [
          {
            "configScope": [
              "app.config"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Config_V1_Entities_TlsCert"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "tls-certs"
        ],
        "operationId": "postConfigV01TlsCerts"
      },
      "get": {
        "summary": "Get All TLS Certificates",
        "description": "Returns all TLS certificates associated with an environment.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "0-based page number.",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "Number of results per page. Valid values are: 1 - 100. **Default value:** 20",
            "type": "integer",
            "format": "int32",
            "default": 20,
            "required": false
          },
          {
            "in": "query",
            "name": "environment_id",
            "description": "An environment's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab).\n\nFrom the Edgio Console, navigate to the desired environment and then click **Settings**. It is listed under **Environment ID**.\n",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "configScope": [
              "app.config"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Config_V1_Entities_TlsCert_Collection"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "tls-certs"
        ],
        "operationId": "getConfigV01TlsCerts"
      }
    },
    "/config/v0.1/deployments/{deployment_id}/logs": {
      "get": {
        "summary": "Get Deployment Logs",
        "description": "Retrieve log data for a specific deployment.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deployment_id",
            "description": "The deployment's system-defined ID. This ID is returned by the [Deploy CDN Configuration operation's](#tag/configs/operation/postConfigV01Configs) `id` property.\n",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "configScope": [
              "app.config"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Config_V1_Entities_Deployment_Logs"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "deployments"
        ],
        "operationId": "getConfigV01DeploymentsDeploymentIdLogs"
      }
    },
    "/config/v0.1/deployments/{deployment_id}": {
      "get": {
        "summary": "Get Deployment",
        "description": "Retrieve information about a specific deployment.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deployment_id",
            "description": "The deployment's system-defined ID. This ID is returned by the [Deploy CDN Configuration operation's](#tag/configs/operation/postConfigV01Configs) `id` property.\n",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "configScope": [
              "app.config"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Config_V1_Entities_Deployment"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "deployments"
        ],
        "operationId": "getConfigV01DeploymentsDeploymentId"
      }
    },
    "/config/v0.1/configs/{config_id}": {
      "get": {
        "summary": "Get CDN Configuration",
        "description": "Retrieve an environment's origin configurations, hostnames, rules, and experiments.\n\nUse the [Get Environment operation](#tag/environments/operation/getAccountsV01EnvironmentsEnvironmentId) to retrieve the system-defined ID (`@links.active_config.id`) for an environment's active configuration\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "config_id",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "configScope": [
              "app.config"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Config_V1_Entities_Config"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "configs"
        ],
        "operationId": "getConfigV01ConfigsConfigId"
      }
    },
    "/config/v0.1/configs": {
      "post": {
        "summary": "Deploy CDN Configuration",
        "description": "Deploys your configuration to a specific environment. This deployment overwrites any existing origin configurations, hostnames, rules, and experiments.\n",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "postConfigV01Configs",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postConfigV01Configs"
            }
          }
        ],
        "security": [
          {
            "configScope": [
              "app.config"
            ]
          }
        ],
        "responses": {
          "202": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Config_V1_Entities_Config"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "configs"
        ],
        "operationId": "postConfigV01Configs"
      }
    },
    "/cache/v0.1/purge-requests/{request_id}": {
      "get": {
        "summary": "Get Purge Request",
        "description": "Retrieves information, including status, about a purge request.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "request_id",
            "description": "The purge request's system-defined ID. This ID is returned by the [Purge Cache operation](#tag/purge-requests/operation/postCacheV01PurgeRequests).\n",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "cacheScope": [
              "app.cache.purge"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cache_V1_Entities_PurgeRequest"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "purge-requests"
        ],
        "operationId": "getCacheV01PurgeRequestsRequestId"
      }
    },
    "/cache/v0.1/purge-requests": {
      "post": {
        "summary": "Purge Cache",
        "description": "Submits a request to purge cached content from a specific environment. Purging content invalidates the cached version of an asset from our edge servers. You may submit up to 50 concurrent purge requests. For the purpose of concurrency, each value defined within the `values` property is considered a separate purge request. Find out the current status of your purge request by passing the purge request ID, which is returned by the `id` property, to the [Get Purge Request operation](#tag/purge-requests/operation/getCacheV01PurgeRequestsRequestId).\n",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "postCacheV01PurgeRequests",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postCacheV01PurgeRequests"
            }
          }
        ],
        "security": [
          {
            "cacheScope": [
              "app.cache.purge"
            ]
          }
        ],
        "responses": {
          "202": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cache_V1_Entities_PurgeRequest"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "purge-requests"
        ],
        "operationId": "postCacheV01PurgeRequests"
      }
    },
    "/accounts/v0.1/members/{member_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "member_id",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "accountsScope": [
              "app.accounts"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Accounts_V1_Entities_Member"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "members"
        ],
        "operationId": "deleteAccountsV01MembersMemberId"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "member_id",
            "type": "string",
            "required": true
          },
          {
            "name": "patchAccountsV01MembersMemberId",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/patchAccountsV01MembersMemberId"
            }
          }
        ],
        "security": [
          {
            "accountsScope": [
              "app.accounts"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Accounts_V1_Entities_Member"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "members"
        ],
        "operationId": "patchAccountsV01MembersMemberId"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "member_id",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "accountsScope": [
              "app.accounts"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Accounts_V1_Entities_Member"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "members"
        ],
        "operationId": "getAccountsV01MembersMemberId"
      }
    },
    "/accounts/v0.1/members": {
      "post": {
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "postAccountsV01Members",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postAccountsV01Members"
            }
          }
        ],
        "security": [
          {
            "accountsScope": [
              "app.accounts"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Accounts_V1_Entities_Member"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "members"
        ],
        "operationId": "postAccountsV01Members"
      },
      "get": {
        "summary": " members",
        "description": " members",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "0-based page number.",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "Number of results per page. Valid values are: 1 - 100. **Default value:** 20",
            "type": "integer",
            "format": "int32",
            "default": 20,
            "required": false
          },
          {
            "in": "query",
            "name": "organization_id",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "accountsScope": [
              "app.accounts"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Accounts_V1_Entities_Member_Collection"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "members"
        ],
        "operationId": "getAccountsV01Members"
      }
    },
    "/accounts/v0.1/environments/{environment_id}": {
      "delete": {
        "summary": "Delete Environment",
        "description": "Deletes an environment.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "environment_id",
            "description": "The environment's system-defined ID.\n\nRetrieve a list of environments and their system-defined IDs through the [Get All Environments operation](#tag/environments/operation/getAccountsV01Environments).\n",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "accountsScope": [
              "app.accounts"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Accounts_V1_Entities_Environment"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "environments"
        ],
        "operationId": "deleteAccountsV01EnvironmentsEnvironmentId"
      },
      "patch": {
        "summary": "Update Environment",
        "description": "Updates an environment.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "environment_id",
            "description": "The environment's system-defined ID.\n\nRetrieve a list of environments and their system-defined IDs through the [Get All Environments operation](#tag/environments/operation/getAccountsV01Environments).\n",
            "type": "string",
            "required": true
          },
          {
            "name": "patchAccountsV01EnvironmentsEnvironmentId",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/patchAccountsV01EnvironmentsEnvironmentId"
            }
          }
        ],
        "security": [
          {
            "accountsScope": [
              "app.accounts"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Accounts_V1_Entities_Environment"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "environments"
        ],
        "operationId": "patchAccountsV01EnvironmentsEnvironmentId"
      },
      "get": {
        "summary": "Get Environment",
        "description": "Retrieves an environment's settings and metadata.\n\nThe system-defined ID for the environment's active configuration is returned by the `@links.active_config.id` property.\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "environment_id",
            "description": "The environment's system-defined ID.\n\nRetrieve a list of environments and their system-defined IDs through the [Get All Environments operation](#tag/environments/operation/getAccountsV01Environments).\n",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "accountsScope": [
              "app.accounts"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Accounts_V1_Entities_Environment"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "environments"
        ],
        "operationId": "getAccountsV01EnvironmentsEnvironmentId"
      }
    },
    "/accounts/v0.1/environments": {
      "post": {
        "summary": "Add Environment",
        "description": "Creates an environment.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "postAccountsV01Environments",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postAccountsV01Environments"
            }
          }
        ],
        "security": [
          {
            "accountsScope": [
              "app.accounts"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Accounts_V1_Entities_Environment"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "environments"
        ],
        "operationId": "postAccountsV01Environments"
      },
      "get": {
        "summary": "Get All Environments",
        "description": "Returns all environments that belong to the specified property.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "0-based page number.",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "Number of results per page. Valid values are: 1 - 100. **Default value:** 20",
            "type": "integer",
            "format": "int32",
            "default": 20,
            "required": false
          },
          {
            "in": "query",
            "name": "property_id",
            "description": "The property's system-defined ID.",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "accountsScope": [
              "app.accounts"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Accounts_V1_Entities_Environment_Collection"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "environments"
        ],
        "operationId": "getAccountsV01Environments"
      }
    },
    "/accounts/v0.1/properties/{property_id}": {
      "delete": {
        "summary": "Delete Property",
        "description": "Delete a property.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "property_id",
            "description": "The property's system-defined ID.\n\nRetrieve a list of properties and their system-defined IDs through the [Get All Properties operation](#tag/properties/operation/getAccountsV01Properties).\n",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "accountsScope": [
              "app.accounts"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Accounts_V1_Entities_Property"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "properties"
        ],
        "operationId": "deleteAccountsV01PropertiesPropertyId"
      },
      "patch": {
        "summary": "Update Property",
        "description": "Update a property.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "property_id",
            "description": "The property's system-defined ID.\n\nRetrieve a list of properties and their system-defined IDs through the [Get All Properties operation](#tag/properties/operation/getAccountsV01Properties).\n",
            "type": "string",
            "required": true
          },
          {
            "name": "patchAccountsV01PropertiesPropertyId",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/patchAccountsV01PropertiesPropertyId"
            }
          }
        ],
        "security": [
          {
            "accountsScope": [
              "app.accounts"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Accounts_V1_Entities_Property"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "properties"
        ],
        "operationId": "patchAccountsV01PropertiesPropertyId"
      },
      "get": {
        "summary": "Get Property",
        "description": "Retrieve a property.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "property_id",
            "description": "The property's system-defined ID.\n\nRetrieve a list of properties and their system-defined IDs through the [Get All Properties operation](#tag/properties/operation/getAccountsV01Properties).\n",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "accountsScope": [
              "app.accounts"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Accounts_V1_Entities_Property"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "properties"
        ],
        "operationId": "getAccountsV01PropertiesPropertyId"
      }
    },
    "/accounts/v0.1/properties": {
      "post": {
        "summary": "Create Property",
        "description": "Create a property.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "postAccountsV01Properties",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postAccountsV01Properties"
            }
          }
        ],
        "security": [
          {
            "accountsScope": [
              "app.accounts"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Accounts_V1_Entities_Property"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "properties"
        ],
        "operationId": "postAccountsV01Properties"
      },
      "get": {
        "summary": "Get All Properties",
        "description": "Returns all properties.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "0-based page number.",
            "type": "integer",
            "format": "int32",
            "default": 0,
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "description": "Number of results per page. Valid values are: 1 - 100. **Default value:** 20",
            "type": "integer",
            "format": "int32",
            "default": 20,
            "required": false
          },
          {
            "in": "query",
            "name": "organization_id",
            "description": "An organization's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab).\n\nFrom the Edgio Console, navigate to the desired organization and then click **Settings**. It is listed under **Organization ID**.\n",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "accountsScope": [
              "app.accounts"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Accounts_V1_Entities_Property_Collection"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "properties"
        ],
        "operationId": "getAccountsV01Properties"
      }
    },
    "/accounts/v0.1/organizations/{organization_id}": {
      "delete": {
        "summary": "Delete Organization",
        "description": "Deletes an organization.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization's system-defined ID.\n\nFrom the Edgio Console, navigate to the desired organization and then click **Settings**. It is listed under **Organization ID**.\n",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "accountsScope": [
              "app.accounts"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Accounts_V1_Entities_Organization"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "organizations"
        ],
        "operationId": "deleteAccountsV01OrganizationsOrganizationId"
      },
      "patch": {
        "summary": "Update Organization",
        "description": "Updates an organization.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization's system-defined ID.\n\nFrom the Edgio Console, navigate to the desired organization and then click **Settings**. It is listed under **Organization ID**.\n",
            "type": "string",
            "required": true
          },
          {
            "name": "patchAccountsV01OrganizationsOrganizationId",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/patchAccountsV01OrganizationsOrganizationId"
            }
          }
        ],
        "security": [
          {
            "accountsScope": [
              "app.accounts"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Accounts_V1_Entities_Organization"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "organizations"
        ],
        "operationId": "patchAccountsV01OrganizationsOrganizationId"
      },
      "get": {
        "summary": "Get Organization",
        "description": "Retrieves information about an organization.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "description": "The organization's system-defined ID.\n\nFrom the Edgio Console, navigate to the desired organization and then click **Settings**. It is listed under **Organization ID**.\n",
            "type": "string",
            "required": true
          }
        ],
        "security": [
          {
            "accountsScope": [
              "app.accounts"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Accounts_V1_Entities_Organization"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_UserError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/BaseApi_Entities_GeneralError"
            }
          }
        },
        "tags": [
          "organizations"
        ],
        "operationId": "getAccountsV01OrganizationsOrganizationId"
      }
    },
    "/bff/ids/teams/{team_id}/feature-scopes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "team_id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "get FeatureScope(s)"
          }
        },
        "tags": [
          "bff"
        ],
        "operationId": "getBffIdsTeamsTeamIdFeatureScopes"
      }
    },
    "/bff/ids/teams/{team_id}/clients/{client_id}/secrets/{secret_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "team_id",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "path",
            "name": "client_id",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "path",
            "name": "secret_id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "deleted Secret"
          }
        },
        "tags": [
          "bff"
        ],
        "operationId": "deleteBffIdsTeamsTeamIdClientsClientIdSecretsSecretId"
      }
    },
    "/bff/ids/teams/{team_id}/clients/{client_id}/secrets": {
      "post": {
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "team_id",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "path",
            "name": "client_id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "created Secret"
          }
        },
        "tags": [
          "bff"
        ],
        "operationId": "postBffIdsTeamsTeamIdClientsClientIdSecrets"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "team_id",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "path",
            "name": "client_id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "get Secret(s)"
          }
        },
        "tags": [
          "bff"
        ],
        "operationId": "getBffIdsTeamsTeamIdClientsClientIdSecrets"
      }
    },
    "/bff/ids/teams/{team_id}/clients/{client_id}": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "team_id",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "path",
            "name": "client_id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "deleted Client"
          }
        },
        "tags": [
          "bff"
        ],
        "operationId": "deleteBffIdsTeamsTeamIdClientsClientId"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "team_id",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          {
            "in": "path",
            "name": "client_id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "patched Client"
          }
        },
        "tags": [
          "bff"
        ],
        "operationId": "patchBffIdsTeamsTeamIdClientsClientId"
      }
    },
    "/bff/ids/teams/{team_id}/clients": {
      "post": {
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "team_id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "created Client"
          }
        },
        "tags": [
          "bff"
        ],
        "operationId": "postBffIdsTeamsTeamIdClients"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "team_id",
            "type": "integer",
            "format": "int32",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "get Client(s)"
          }
        },
        "tags": [
          "bff"
        ],
        "operationId": "getBffIdsTeamsTeamIdClients"
      }
    },
    "/bff/traffic/{query_name}": {
      "post": {
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "query_name",
            "type": "string",
            "enum": [
              "origins-countries",
              "origins-overtime",
              "data-usage-overtime",
              "routes"
            ],
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "created Traffic"
          }
        },
        "tags": [
          "bff"
        ],
        "operationId": "postBffTrafficQueryName"
      }
    }
  },
  "definitions": {
    "Config_V1_Entities_EnvironmentVariable": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The resource's type."
        },
        "@id": {
          "type": "string",
          "description": "The resource's relative path."
        },
        "@links": {
          "type": "object",
          "description": "Links to related resources."
        },
        "id": {
          "type": "string",
          "description": "The resource's system-defined ID."
        },
        "environment_id": {
          "type": "string",
          "description": "An environment's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab).\n\nFrom the Edgio Console, navigate to the desired environment and then click **Settings**. It is listed under **Environment ID**.\n"
        },
        "key": {
          "type": "string",
          "description": "The environment variable's name."
        },
        "value": {
          "type": "string",
          "description": "The environment variable's value."
        },
        "secret": {
          "type": "boolean",
          "description": "Determines whether the environment variable's value will be partially masked using asterisks.\n"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The environment variable's creation date and time (UTC)."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "The environment variable's last modification date and time (UTC)."
        }
      },
      "required": [
        "@type",
        "@id",
        "id"
      ],
      "description": "Config_V1_Entities_EnvironmentVariable model"
    },
    "BaseApi_Entities_UserError": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseApi_Entities_UserErrorData"
          },
          "description": "Describes the error."
        }
      },
      "description": "BaseApi_Entities_UserError model"
    },
    "BaseApi_Entities_UserErrorData": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "The requested endpoint's path."
        },
        "message": {
          "type": "string",
          "description": "A brief description of the error."
        }
      }
    },
    "BaseApi_Entities_GeneralError": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Error Message"
        }
      },
      "description": "BaseApi_Entities_GeneralError model"
    },
    "putConfigV01EnvironmentVariables": {
      "type": "object",
      "properties": {
        "environment_id": {
          "type": "string",
          "description": "An environment's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab).\n\nFrom the Edgio Console, navigate to the desired environment and then click **Settings**. It is listed under **Environment ID**.\n"
        },
        "key": {
          "type": "string",
          "description": "The environment variable's name."
        },
        "value": {
          "type": "string",
          "description": "The environment variable's value."
        },
        "secret": {
          "type": "boolean",
          "description": "Determines whether the environment variable's value will be partially masked using asterisks.\n"
        }
      },
      "required": [
        "environment_id",
        "key",
        "value"
      ],
      "description": "Creates or updates an environment variable."
    },
    "Config_V1_Entities_EnvironmentVariable_Collection": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The resource's type."
        },
        "@id": {
          "type": "string",
          "description": "The resource's relative path."
        },
        "@links": {
          "$ref": "#/definitions/BaseApi_Entities_HyperionNavigationLinks",
          "description": "Links to related resources."
        },
        "total_items": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of items."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Config_V1_Entities_EnvironmentVariable"
          },
          "description": "List of environment variables."
        }
      },
      "required": [
        "@type",
        "@id"
      ],
      "description": "Config_V1_Entities_EnvironmentVariable_Collection model"
    },
    "BaseApi_Entities_HyperionNavigationLinks": {
      "type": "object",
      "properties": {
        "first": {
          "$ref": "#/definitions/BaseApi_Entities_HyperionLink",
          "description": "Link to the first page of results."
        },
        "next": {
          "$ref": "#/definitions/BaseApi_Entities_HyperionLink",
          "description": "Link to the next page of results."
        },
        "previous": {
          "$ref": "#/definitions/BaseApi_Entities_HyperionLink",
          "description": "Link to the previous page of results."
        },
        "last": {
          "$ref": "#/definitions/BaseApi_Entities_HyperionLink",
          "description": "Link to the last page of results."
        }
      }
    },
    "BaseApi_Entities_HyperionLink": {
      "type": "object",
      "properties": {
        "href": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "base_path": {
          "type": "string"
        }
      }
    },
    "Config_V1_Entities_TlsCert": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The resource's type."
        },
        "@id": {
          "type": "string",
          "description": "The resource's relative path."
        },
        "@links": {
          "type": "object",
          "description": "Links to related resources."
        },
        "id": {
          "type": "string",
          "description": "The resource's system-defined ID."
        },
        "environment_id": {
          "type": "string",
          "description": "An environment's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab).\n\nFrom the Edgio Console, navigate to the desired environment and then click **Settings**. It is listed under **Environment ID**.\n"
        },
        "primary_cert": {
          "type": "string",
          "description": "Primary certificate. Not returned for records in collection."
        },
        "intermediate_cert": {
          "type": "string",
          "description": "Intermediate certificate. Not returned for records in collection"
        },
        "expiration": {
          "type": "string",
          "format": "date-time",
          "description": "The TLS certificate's expiration date and time (UTC)."
        },
        "status": {
          "type": "string",
          "description": "The TLS certificate's status. Returns one of the following states:\n\n-  `created`: The TLS certificate has been created, but it has not yet been activated.\n-  `activating:` Edgio is in the process of activating the TLS certificate.\n-  `activated:` The TLS certificate is currently active.\n-  `failed:` The activation of the TLS certificate failed.\n-  `expired:` The TLS certificate has expired.\n"
        },
        "generated": {
          "type": "boolean",
          "description": "Returns `true` for TLS certificates generated by Edgio. Returns `false` for existing TLS certificates that were uploaded to Edgio.\n"
        },
        "serial": {
          "type": "string",
          "description": "The TLS certificate's serial number."
        },
        "common_name": {
          "type": "string",
          "description": "The TLS certificate's common name (CN)."
        },
        "alternative_names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The TLS certificate's Subject Alternative Names (SAN)."
        },
        "activation_error": {
          "type": "string",
          "description": "Contains an error message if the TLS certificate could not be activated. "
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The TLS certificate's creation date and time (UTC)."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "The TLS certificate's last modification date and time (UTC)."
        }
      },
      "required": [
        "@type",
        "@id",
        "id"
      ],
      "description": "Config_V1_Entities_TlsCert model"
    },
    "postConfigV01TlsCerts": {
      "type": "object",
      "properties": {
        "environment_id": {
          "type": "string",
          "description": "An environment's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab).\n\nFrom the Edgio Console, navigate to the desired environment and then click **Settings**. It is listed under **Environment ID**.\n"
        },
        "primary_cert": {
          "type": "string",
          "description": "Your TLS certificate. We require this certificate to be issued by a Certificate Authority."
        },
        "intermediate_cert": {
          "type": "string",
          "description": "The intermediate certificates (IC) used by the CA, including the CA’s signing certificate."
        },
        "private_key": {
          "type": "string",
          "description": "The private key that was generated with the CSR."
        }
      },
      "required": [
        "environment_id",
        "primary_cert",
        "intermediate_cert"
      ],
      "description": "Upload your TLS certificate to activate it within a specific environment."
    },
    "Config_V1_Entities_TlsCert_Collection": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The resource's type."
        },
        "@id": {
          "type": "string",
          "description": "The resource's relative path."
        },
        "@links": {
          "$ref": "#/definitions/BaseApi_Entities_HyperionNavigationLinks",
          "description": "Links to related resources."
        },
        "total_items": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of items."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Config_V1_Entities_TlsCert"
          },
          "description": "List of TLS certificates associated with the specified environment."
        }
      },
      "required": [
        "@type",
        "@id"
      ],
      "description": "Config_V1_Entities_TlsCert_Collection model"
    },
    "Config_V1_Entities_Deployment_Logs": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The resource's type."
        },
        "@id": {
          "type": "string",
          "description": "The resource's relative path."
        },
        "@links": {
          "type": "object",
          "description": "Links to related resources."
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Config_V1_Entities_Deployment_LogLine"
          },
          "description": "The deployment's log messages."
        }
      },
      "required": [
        "@type",
        "@id"
      ],
      "description": "Config_V1_Entities_Deployment_Logs model"
    },
    "Config_V1_Entities_Deployment_LogLine": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Log message."
        },
        "level": {
          "type": "string",
          "description": "Log level."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time (UTC) at which the message was logged."
        }
      }
    },
    "Config_V1_Entities_Deployment": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The resource's type."
        },
        "@id": {
          "type": "string",
          "description": "The resource's relative path."
        },
        "@links": {
          "type": "object",
          "description": "Links to related resources."
        },
        "id": {
          "type": "string",
          "description": "The resource's system-defined ID."
        },
        "status": {
          "type": "string",
          "description": "Indicates the deployment's status. Valid values are:\n  - `created`: The deployment has been created but has not yet been deployed.\n  - `uploading`: The CLI is uploading the build. This state is only applicable for EdgeJS deployments.\n  - `provisioning`: The CDN is provisioning the environment.\n  - `deploying`: The build is being deployed to our network.\n  - `waiting`: The build is being propagated throughout our network.\n  - `completed`: The build was deployed successfully to our network.\n  - `canceled`: The deployment was canceled.\n  - `failed`: The deployment has failed.\n"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time (UTC) at which the deployment was submitted."
        },
        "completed_at": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time (UTC) at which the deployment was completed."
        }
      },
      "required": [
        "@type",
        "@id",
        "id"
      ],
      "description": "Config_V1_Entities_Deployment model"
    },
    "Config_V1_Entities_Config": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The resource's type."
        },
        "@id": {
          "type": "string",
          "description": "The resource's relative path."
        },
        "@links": {
          "type": "object",
          "description": "Links to related resources."
        },
        "id": {
          "type": "string",
          "description": "The resource's system-defined ID."
        },
        "origins": {
          "type": "string",
          "example": [
            {
              "name": "web",
              "hosts": [
                {
                  "location": [
                    {
                      "hostname": "https://test-origin.edgio.net"
                    }
                  ]
                }
              ]
            }
          ],
          "description": "List of origin configurations.\n\nYou cannot delete or change the name of an origin configuration that has been mapped to a hostname. Attempting to do so will generate a `404 Bad Request` whose error message is similar to the following one:\n\n`Invalid config: Schema validation error: properties.0.hostnames.0: Origin 'web' not found`\n\nDefined externally: https://api.vdms.io/cdn/edge-control/v1/configuration/schema#/definitions/property/properties/origins\n"
        },
        "hostnames": {
          "type": "string",
          "example": [
            {
              "hostname": "cdn.example.com"
            }
          ],
          "description": "List of hostnames. Defined externally: https://api.vdms.io/cdn/edge-control/v1/configuration/schema#/definitions/property/properties/hostnames"
        },
        "rules": {
          "type": "string",
          "example": [
            {
              "if": [
                {
                  "==": [
                    {
                      "request": "path"
                    },
                    "/api/:path"
                  ]
                },
                {
                  "caching": {
                    "bypass_cache": true
                  }
                }
              ]
            }
          ],
          "description": "List of rules defined using JSON syntax.\n\nView your current set of rules in JSON syntax from within the Edgio Console by navigating to the **Rules** page and then clicking **JSON Editor**.\n\nDefined externally: https://api.vdms.io/cdn/edge-control/v1/configuration/schema#/definitions/property/properties/rules\n"
        },
        "experiments": {
          "type": "string",
          "example": [
            {}
          ],
          "description": "List of experiments."
        }
      },
      "required": [
        "@type",
        "@id",
        "id"
      ],
      "description": "Config_V1_Entities_Config model"
    },
    "postConfigV01Configs": {
      "type": "object",
      "properties": {
        "environment_id": {
          "type": "string",
          "description": "An environment's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab).\n\nFrom the Edgio Console, navigate to the desired environment and then click **Settings**. It is listed under **Environment ID**.\n"
        },
        "origins": {
          "type": "array",
          "description": "List of origin configurations.\n\nYou cannot delete or change the name of an origin configuration that has been mapped to a hostname. Attempting to do so will generate a `404 Bad Request` whose error message is similar to the following one:\n\n`Invalid config: Schema validation error: properties.0.hostnames.0: Origin 'web' not found`\n\nDefined externally: https://api.vdms.io/cdn/edge-control/v1/configuration/schema#/definitions/property/properties/origins\n",
          "items": {
            "type": "string"
          },
          "example": [
            {
              "name": "web",
              "hosts": [
                {
                  "location": [
                    {
                      "hostname": "https://test-origin.edgio.net"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "hostnames": {
          "type": "array",
          "description": "List of hostnames. Defined externally: https://api.vdms.io/cdn/edge-control/v1/configuration/schema#/definitions/property/properties/hostnames",
          "items": {
            "type": "string"
          },
          "example": [
            {
              "hostname": "cdn.example.com"
            }
          ]
        },
        "rules": {
          "type": "array",
          "description": "List of rules defined using JSON syntax.\n\nView your current set of rules in JSON syntax from within the Edgio Console by navigating to the **Rules** page and then clicking **JSON Editor**.\n\nDefined externally: https://api.vdms.io/cdn/edge-control/v1/configuration/schema#/definitions/property/properties/rules\n",
          "items": {
            "type": "string"
          },
          "example": [
            {
              "if": [
                {
                  "==": [
                    {
                      "request": "path"
                    },
                    "/api/:path"
                  ]
                },
                {
                  "caching": {
                    "bypass_cache": true
                  }
                }
              ]
            }
          ]
        },
        "experiments": {
          "type": "array",
          "description": "List of experiments.",
          "items": {
            "type": "string"
          },
          "example": [
            {}
          ]
        }
      },
      "required": [
        "environment_id",
        "origins",
        "hostnames"
      ],
      "description": "Deploys your configuration to a specific environment. This deployment overwrites any existing origin configurations, hostnames, rules, and experiments.\n"
    },
    "Cache_V1_Entities_PurgeRequest": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The resource's type."
        },
        "@id": {
          "type": "string",
          "description": "The resource's relative path."
        },
        "@links": {
          "type": "object",
          "description": "Links to related resources."
        },
        "id": {
          "type": "string",
          "description": "The purge request's system-defined ID."
        },
        "status": {
          "type": "string",
          "description": "The purge request's status. Valid values are:\n  - `in_progress`: Edgio is still purging content.\n  - `done`: Edgio has purged the requested content.\n"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time (UTC) at which the purge request was submitted."
        },
        "completed_at": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time (UTC) at which the purge request was completed."
        },
        "progress_percentage": {
          "type": "number",
          "format": "float",
          "description": "The purge request's completion percentage."
        }
      },
      "required": [
        "@type",
        "@id",
        "id"
      ],
      "description": "Cache_V1_Entities_PurgeRequest model"
    },
    "postCacheV01PurgeRequests": {
      "type": "object",
      "properties": {
        "environment_id": {
          "type": "string",
          "description": "An environment's system-defined ID (e.g., 12345678-1234-1234-1234-1234567890ab).\n\nFrom the Edgio Console, navigate to the desired environment and then click **Settings**. It is listed under **Environment ID**.\n"
        },
        "purge_type": {
          "type": "string",
          "description": "- `all_entries`: Purge all cached content.\n- `path`: Purge one or more relative path(s) defined within the `values` property.\n- `surrogate_key`: Purge one or more surrogate key(s) defined within the `values` property.\n",
          "enum": [
            "all_entries",
            "path",
            "surrogate_key"
          ]
        },
        "values": {
          "type": "array",
          "description": "Defines the set of content to be purged. The `purge_type` property's value determines what should be passed.\n  - `all_entries`: Omit this property or pass an empty array.\n  - `path`: Pass one or more relative path(s). This relative path starts directly after the hostname. Use an `*` to represent zero or more characters.\n  - `surrogate_key`: Pass one or more surrogate key(s) (aka cache tags).\n",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "environment_id",
        "purge_type"
      ],
      "description": "Submits a request to purge cached content from a specific environment. Purging content invalidates the cached version of an asset from our edge servers. You may submit up to 50 concurrent purge requests. For the purpose of concurrency, each value defined within the `values` property is considered a separate purge request. Find out the current status of your purge request by passing the purge request ID, which is returned by the `id` property, to the [Get Purge Request operation](#tag/purge-requests/operation/getCacheV01PurgeRequestsRequestId).\n"
    },
    "Accounts_V1_Entities_Member": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The resource's type."
        },
        "@id": {
          "type": "string",
          "description": "The resource's relative path."
        },
        "@links": {
          "type": "object",
          "description": "Links to related resources."
        },
        "id": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "description": "The user's role."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The user's creation date and time (UTC)."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "The user's last modification date and time (UTC)."
        },
        "user_email": {
          "type": "string",
          "description": "The user's email."
        }
      },
      "required": [
        "@type",
        "@id",
        "id"
      ],
      "description": "Accounts_V1_Entities_Member model"
    },
    "patchAccountsV01MembersMemberId": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "enum": [
            "read_only",
            "purger",
            "member",
            "admin",
            "super_admin"
          ]
        }
      }
    },
    "postAccountsV01Members": {
      "type": "object",
      "properties": {
        "user_email": {
          "type": "string"
        },
        "organization_id": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": [
            "read_only",
            "purger",
            "member",
            "admin",
            "super_admin"
          ]
        }
      },
      "required": [
        "user_email",
        "organization_id"
      ]
    },
    "Accounts_V1_Entities_Member_Collection": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The resource's type."
        },
        "@id": {
          "type": "string",
          "description": "The resource's relative path."
        },
        "@links": {
          "$ref": "#/definitions/BaseApi_Entities_HyperionNavigationLinks",
          "description": "Links to related resources."
        },
        "total_items": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of items."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Accounts_V1_Entities_Member"
          },
          "description": "List of users."
        }
      },
      "required": [
        "@type",
        "@id"
      ],
      "description": "Accounts_V1_Entities_Member_Collection model"
    },
    "Accounts_V1_Entities_Environment": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The resource's type."
        },
        "@id": {
          "type": "string",
          "description": "The resource's relative path."
        },
        "@links": {
          "type": "object",
          "description": "Links to related resources."
        },
        "id": {
          "type": "string",
          "description": "The resource's system-defined ID."
        },
        "property_id": {
          "type": "string",
          "description": "The system-defined ID for the property associated with this environment."
        },
        "name": {
          "type": "string",
          "description": "The environment's name."
        },
        "can_members_deploy": {
          "type": "boolean",
          "description": "Determines whether all organization members may deploy to this environment. Disabling this option restricts deployments to admin users and the deploy token."
        },
        "http_request_logging": {
          "type": "boolean",
          "description": "Determines whether deep-request inspection for serverless logs will be enabled."
        },
        "default_domain_name": {
          "type": "string",
          "description": "The default hostname through which traffic for this environment is served."
        },
        "pci_compliance": {
          "type": "boolean",
          "description": "Determines whether this environment's traffic will be restricted to our PCI-compliant network or served through our entire network."
        },
        "dns_domain_name": {
          "type": "string",
          "description": "Serve traffic for this environment by pointing your CNAMEs to this domain."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The environment's creation date and time (UTC)."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "The environment's last modification date and time (UTC)."
        }
      },
      "required": [
        "@type",
        "@id",
        "id"
      ],
      "description": "Accounts_V1_Entities_Environment model"
    },
    "patchAccountsV01EnvironmentsEnvironmentId": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The environment's name. This name may only consist of lowercase characters, numbers, dashes, and underscores.\n"
        },
        "can_members_deploy": {
          "type": "boolean",
          "description": "Determines whether all organization memmbers may deploy to this environment. Disabling this option restricts deployments to admin users and the deploy token.\n"
        },
        "http_request_logging": {
          "type": "boolean",
          "description": "Determines whether deep-request inspection for serverless logs will be enabled."
        },
        "preserve_cache": {
          "type": "boolean",
          "description": "Determines whether deploying a new build to this environment will use the same cache as the previous deployment.\n"
        }
      },
      "description": "Updates an environment."
    },
    "postAccountsV01Environments": {
      "type": "object",
      "properties": {
        "property_id": {
          "type": "string",
          "description": "The property's system-defined ID."
        },
        "name": {
          "type": "string",
          "description": "The environment's name. This name may only consist of lowercase characters, numbers, dashes, and underscores.\n"
        },
        "can_members_deploy": {
          "type": "boolean",
          "description": "Determines whether all organization memmbers may deploy to this environment. Disabling this option restricts deployments to admin users and the deploy token.\"\n"
        },
        "http_request_logging": {
          "type": "boolean",
          "description": "Determines whether deep-request inspection for serverless logs will be enabled."
        }
      },
      "required": [
        "property_id",
        "name"
      ],
      "description": "Creates an environment."
    },
    "Accounts_V1_Entities_Environment_Collection": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The resource's type."
        },
        "@id": {
          "type": "string",
          "description": "The resource's relative path."
        },
        "@links": {
          "$ref": "#/definitions/BaseApi_Entities_HyperionNavigationLinks",
          "description": "Links to related resources."
        },
        "total_items": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of items."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Accounts_V1_Entities_Environment"
          },
          "description": "List of environments."
        }
      },
      "required": [
        "@type",
        "@id"
      ],
      "description": "Accounts_V1_Entities_Environment_Collection model"
    },
    "Accounts_V1_Entities_Property": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The resource's type."
        },
        "@id": {
          "type": "string",
          "description": "The resource's relative path."
        },
        "@links": {
          "type": "object",
          "description": "Links to related resources."
        },
        "id": {
          "type": "string",
          "description": "The resource's system-defined ID."
        },
        "organization_id": {
          "type": "string"
        },
        "slug": {
          "type": "string",
          "description": "The property's name."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The property's creation date and time (UTC)."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "The property's last modification date and time (UTC)."
        }
      },
      "required": [
        "@type",
        "@id",
        "id"
      ],
      "description": "Accounts_V1_Entities_Property model"
    },
    "patchAccountsV01PropertiesPropertyId": {
      "type": "object",
      "properties": {
        "slug": {
          "type": "string",
          "description": "The property's name. Space characters are converted to dashes."
        }
      },
      "description": "Update a property."
    },
    "postAccountsV01Properties": {
      "type": "object",
      "properties": {
        "slug": {
          "type": "string",
          "description": "The property's name. Space characters are converted to dashes."
        },
        "organization_id": {
          "type": "string",
          "description": "The system-defined ID for the organization under which this property will be created."
        }
      },
      "required": [
        "slug",
        "organization_id"
      ],
      "description": "Create a property."
    },
    "Accounts_V1_Entities_Property_Collection": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The resource's type."
        },
        "@id": {
          "type": "string",
          "description": "The resource's relative path."
        },
        "@links": {
          "$ref": "#/definitions/BaseApi_Entities_HyperionNavigationLinks",
          "description": "Links to related resources."
        },
        "total_items": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of items."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Accounts_V1_Entities_Property"
          },
          "description": "List of properties."
        }
      },
      "required": [
        "@type",
        "@id"
      ],
      "description": "Accounts_V1_Entities_Property_Collection model"
    },
    "Accounts_V1_Entities_Organization": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "The resource's type."
        },
        "@id": {
          "type": "string",
          "description": "The resource's relative path."
        },
        "@links": {
          "type": "object",
          "description": "Links to related resources."
        },
        "id": {
          "type": "string",
          "description": "The resource's system-defined ID."
        },
        "partner_id": {
          "type": "string",
          "description": "The system-defined ID for the partner account under which the organization was created."
        },
        "name": {
          "type": "string",
          "description": "The organization's name"
        },
        "pci_compliance": {
          "type": "string",
          "enum": [
            "pci",
            "non_pci",
            "mixed"
          ],
          "description": "The organization's PCI compliance status. This state is determined by checking PCI-compliance across all environments associated with this organization. Valid values are:\n\n-   **pci:** All environments are PCI-compliant.\n-   **non_pci:** All environments use our entire network.\n-   **mixed:** Some environments are PCI-compliant.\n"
        },
        "pci_dns_domain_name": {
          "type": "string",
          "description": "The organization's PCI-compliant DNS domain.\n\nServe traffic through our PCI-compliant network by pointing your CNAMEs to this domain.\n"
        },
        "non_pci_dns_domain_name": {
          "type": "string",
          "description": "The organization's DNS domain for standard traffic. Standard traffic can use our entire network.\n\nServe traffic that does not require PCI-compliance by pointing your CNAMEs to this domain.\n"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The organization's creation date and time (UTC)."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "The organization's last modification date and time (UTC)."
        }
      },
      "required": [
        "@type",
        "@id",
        "id"
      ],
      "description": "Accounts_V1_Entities_Organization model"
    },
    "patchAccountsV01OrganizationsOrganizationId": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The organization's name."
        }
      },
      "description": "Updates an organization."
    }
  }
}
